<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="76250"><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="917" width="0.0105%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="8"/><text x="0.2579%" y="927.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="901" width="0.0105%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="8"/><text x="0.2579%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="885" width="0.0105%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="8"/><text x="0.2579%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="869" width="0.0105%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="8"/><text x="0.2579%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="853" width="0.0105%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="8"/><text x="0.2579%" y="863.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="837" width="0.0105%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="8"/><text x="0.2579%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="821" width="0.0105%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="8"/><text x="0.2579%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="805" width="0.0105%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="8"/><text x="0.2579%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="789" width="0.0105%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="8"/><text x="0.2579%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0079%" y="773" width="0.0105%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="8"/><text x="0.2579%" y="783.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="0.0052%" y="933" width="0.0197%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="15"/><text x="0.2552%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (26 samples, 0.03%)</title><rect x="0.0669%" y="517" width="0.0341%" height="15" fill="rgb(240,193,28)" fg:x="51" fg:w="26"/><text x="0.3169%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.01%)</title><rect x="0.1010%" y="517" width="0.0105%" height="15" fill="rgb(216,20,37)" fg:x="77" fg:w="8"/><text x="0.3510%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.07%)</title><rect x="0.0393%" y="549" width="0.0748%" height="15" fill="rgb(206,188,39)" fg:x="30" fg:w="57"/><text x="0.2893%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (46 samples, 0.06%)</title><rect x="0.0538%" y="533" width="0.0603%" height="15" fill="rgb(217,207,13)" fg:x="41" fg:w="46"/><text x="0.3038%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="0.1757%" y="421" width="0.0249%" height="15" fill="rgb(231,73,38)" fg:x="134" fg:w="19"/><text x="0.4257%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (12 samples, 0.02%)</title><rect x="0.1849%" y="405" width="0.0157%" height="15" fill="rgb(225,20,46)" fg:x="141" fg:w="12"/><text x="0.4349%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (58 samples, 0.08%)</title><rect x="0.1298%" y="453" width="0.0761%" height="15" fill="rgb(210,31,41)" fg:x="99" fg:w="58"/><text x="0.3798%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (54 samples, 0.07%)</title><rect x="0.1351%" y="437" width="0.0708%" height="15" fill="rgb(221,200,47)" fg:x="103" fg:w="54"/><text x="0.3851%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.08%)</title><rect x="0.1272%" y="469" width="0.0826%" height="15" fill="rgb(226,26,5)" fg:x="97" fg:w="63"/><text x="0.3772%" y="479.50"></text></g><g><title>__GI___libc_free (412 samples, 0.54%)</title><rect x="0.2518%" y="405" width="0.5403%" height="15" fill="rgb(249,33,26)" fg:x="192" fg:w="412"/><text x="0.5018%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (460 samples, 0.60%)</title><rect x="0.2295%" y="437" width="0.6033%" height="15" fill="rgb(235,183,28)" fg:x="175" fg:w="460"/><text x="0.4795%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (451 samples, 0.59%)</title><rect x="0.2413%" y="421" width="0.5915%" height="15" fill="rgb(221,5,38)" fg:x="184" fg:w="451"/><text x="0.4913%" y="431.50"></text></g><g><title>_int_free (31 samples, 0.04%)</title><rect x="0.7921%" y="405" width="0.0407%" height="15" fill="rgb(247,18,42)" fg:x="604" fg:w="31"/><text x="1.0421%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (46 samples, 0.06%)</title><rect x="0.8485%" y="405" width="0.0603%" height="15" fill="rgb(241,131,45)" fg:x="647" fg:w="46"/><text x="1.0985%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (47 samples, 0.06%)</title><rect x="0.8485%" y="421" width="0.0616%" height="15" fill="rgb(249,31,29)" fg:x="647" fg:w="47"/><text x="1.0985%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (612 samples, 0.80%)</title><rect x="0.1154%" y="533" width="0.8026%" height="15" fill="rgb(225,111,53)" fg:x="88" fg:w="612"/><text x="0.3654%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,usize)&gt; (604 samples, 0.79%)</title><rect x="0.1259%" y="517" width="0.7921%" height="15" fill="rgb(238,160,17)" fg:x="96" fg:w="604"/><text x="0.3759%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (604 samples, 0.79%)</title><rect x="0.1259%" y="501" width="0.7921%" height="15" fill="rgb(214,148,48)" fg:x="96" fg:w="604"/><text x="0.3759%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (604 samples, 0.79%)</title><rect x="0.1259%" y="485" width="0.7921%" height="15" fill="rgb(232,36,49)" fg:x="96" fg:w="604"/><text x="0.3759%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (540 samples, 0.71%)</title><rect x="0.2098%" y="469" width="0.7082%" height="15" fill="rgb(209,103,24)" fg:x="160" fg:w="540"/><text x="0.4598%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (538 samples, 0.71%)</title><rect x="0.2125%" y="453" width="0.7056%" height="15" fill="rgb(229,88,8)" fg:x="162" fg:w="538"/><text x="0.4625%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (65 samples, 0.09%)</title><rect x="0.8328%" y="437" width="0.0852%" height="15" fill="rgb(213,181,19)" fg:x="635" fg:w="65"/><text x="1.0828%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (689 samples, 0.90%)</title><rect x="0.0249%" y="565" width="0.9036%" height="15" fill="rgb(254,191,54)" fg:x="19" fg:w="689"/><text x="0.2749%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (621 samples, 0.81%)</title><rect x="0.1141%" y="549" width="0.8144%" height="15" fill="rgb(241,83,37)" fg:x="87" fg:w="621"/><text x="0.3641%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="0.9180%" y="533" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="700" fg:w="8"/><text x="1.1680%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt; (696 samples, 0.91%)</title><rect x="0.0249%" y="629" width="0.9128%" height="15" fill="rgb(226,3,54)" fg:x="19" fg:w="696"/><text x="0.2749%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,std::collections::hash::map::RandomState&gt;&gt; (696 samples, 0.91%)</title><rect x="0.0249%" y="613" width="0.9128%" height="15" fill="rgb(245,192,40)" fg:x="19" fg:w="696"/><text x="0.2749%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (696 samples, 0.91%)</title><rect x="0.0249%" y="597" width="0.9128%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="696"/><text x="0.2749%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (696 samples, 0.91%)</title><rect x="0.0249%" y="581" width="0.9128%" height="15" fill="rgb(232,182,51)" fg:x="19" fg:w="696"/><text x="0.2749%" y="591.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.01%)</title><rect x="1.0085%" y="581" width="0.0118%" height="15" fill="rgb(231,60,39)" fg:x="769" fg:w="9"/><text x="1.2585%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="1.0269%" y="581" width="0.0105%" height="15" fill="rgb(208,69,12)" fg:x="783" fg:w="8"/><text x="1.2769%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (30 samples, 0.04%)</title><rect x="1.0518%" y="565" width="0.0393%" height="15" fill="rgb(235,93,37)" fg:x="802" fg:w="30"/><text x="1.3018%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (23 samples, 0.03%)</title><rect x="1.1292%" y="549" width="0.0302%" height="15" fill="rgb(213,116,39)" fg:x="861" fg:w="23"/><text x="1.3792%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="1.1331%" y="533" width="0.0262%" height="15" fill="rgb(222,207,29)" fg:x="864" fg:w="20"/><text x="1.3831%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (55 samples, 0.07%)</title><rect x="1.0911%" y="565" width="0.0721%" height="15" fill="rgb(206,96,30)" fg:x="832" fg:w="55"/><text x="1.3411%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.14%)</title><rect x="1.0374%" y="581" width="0.1390%" height="15" fill="rgb(218,138,4)" fg:x="791" fg:w="106"/><text x="1.2874%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (10 samples, 0.01%)</title><rect x="1.1633%" y="565" width="0.0131%" height="15" fill="rgb(250,191,14)" fg:x="887" fg:w="10"/><text x="1.4133%" y="575.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="1.1843%" y="485" width="0.0105%" height="15" fill="rgb(239,60,40)" fg:x="903" fg:w="8"/><text x="1.4343%" y="495.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.01%)</title><rect x="1.1843%" y="469" width="0.0105%" height="15" fill="rgb(206,27,48)" fg:x="903" fg:w="8"/><text x="1.4343%" y="479.50"></text></g><g><title>_int_realloc (8 samples, 0.01%)</title><rect x="1.1843%" y="453" width="0.0105%" height="15" fill="rgb(225,35,8)" fg:x="903" fg:w="8"/><text x="1.4343%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.02%)</title><rect x="1.1830%" y="517" width="0.0184%" height="15" fill="rgb(250,213,24)" fg:x="902" fg:w="14"/><text x="1.4330%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.02%)</title><rect x="1.1830%" y="501" width="0.0184%" height="15" fill="rgb(247,123,22)" fg:x="902" fg:w="14"/><text x="1.4330%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="1.1816%" y="533" width="0.0223%" height="15" fill="rgb(231,138,38)" fg:x="901" fg:w="17"/><text x="1.4316%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.03%)</title><rect x="1.1816%" y="565" width="0.0275%" height="15" fill="rgb(231,145,46)" fg:x="901" fg:w="21"/><text x="1.4316%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.03%)</title><rect x="1.1816%" y="549" width="0.0275%" height="15" fill="rgb(251,118,11)" fg:x="901" fg:w="21"/><text x="1.4316%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.03%)</title><rect x="1.1803%" y="581" width="0.0315%" height="15" fill="rgb(217,147,25)" fg:x="900" fg:w="24"/><text x="1.4303%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (36 samples, 0.05%)</title><rect x="2.0236%" y="501" width="0.0472%" height="15" fill="rgb(247,81,37)" fg:x="1543" fg:w="36"/><text x="2.2736%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="2.0341%" y="485" width="0.0367%" height="15" fill="rgb(209,12,38)" fg:x="1551" fg:w="28"/><text x="2.2841%" y="495.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.01%)</title><rect x="2.0708%" y="485" width="0.0118%" height="15" fill="rgb(227,1,9)" fg:x="1579" fg:w="9"/><text x="2.3208%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (98 samples, 0.13%)</title><rect x="1.9659%" y="533" width="0.1285%" height="15" fill="rgb(248,47,43)" fg:x="1499" fg:w="98"/><text x="2.2159%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (97 samples, 0.13%)</title><rect x="1.9672%" y="517" width="0.1272%" height="15" fill="rgb(221,10,30)" fg:x="1500" fg:w="97"/><text x="2.2172%" y="527.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.02%)</title><rect x="2.0708%" y="501" width="0.0236%" height="15" fill="rgb(210,229,1)" fg:x="1579" fg:w="18"/><text x="2.3208%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="2.0826%" y="485" width="0.0118%" height="15" fill="rgb(222,148,37)" fg:x="1588" fg:w="9"/><text x="2.3326%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (107 samples, 0.14%)</title><rect x="1.9633%" y="549" width="0.1403%" height="15" fill="rgb(234,67,33)" fg:x="1497" fg:w="107"/><text x="2.2133%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="2.1862%" y="501" width="0.0249%" height="15" fill="rgb(247,98,35)" fg:x="1667" fg:w="19"/><text x="2.4362%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (200 samples, 0.26%)</title><rect x="1.9567%" y="565" width="0.2623%" height="15" fill="rgb(247,138,52)" fg:x="1492" fg:w="200"/><text x="2.2067%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (88 samples, 0.12%)</title><rect x="2.1036%" y="549" width="0.1154%" height="15" fill="rgb(213,79,30)" fg:x="1604" fg:w="88"/><text x="2.3536%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (88 samples, 0.12%)</title><rect x="2.1036%" y="533" width="0.1154%" height="15" fill="rgb(246,177,23)" fg:x="1604" fg:w="88"/><text x="2.3536%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (68 samples, 0.09%)</title><rect x="2.1298%" y="517" width="0.0892%" height="15" fill="rgb(230,62,27)" fg:x="1624" fg:w="68"/><text x="2.3798%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (27 samples, 0.04%)</title><rect x="2.2452%" y="533" width="0.0354%" height="15" fill="rgb(216,154,8)" fg:x="1712" fg:w="27"/><text x="2.4952%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.02%)</title><rect x="2.3043%" y="517" width="0.0223%" height="15" fill="rgb(244,35,45)" fg:x="1757" fg:w="17"/><text x="2.5543%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="2.3134%" y="501" width="0.0131%" height="15" fill="rgb(251,115,12)" fg:x="1764" fg:w="10"/><text x="2.5634%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (38 samples, 0.05%)</title><rect x="2.2807%" y="533" width="0.0498%" height="15" fill="rgb(240,54,50)" fg:x="1739" fg:w="38"/><text x="2.5307%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.12%)</title><rect x="2.2190%" y="565" width="0.1154%" height="15" fill="rgb(233,84,52)" fg:x="1692" fg:w="88"/><text x="2.4690%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.09%)</title><rect x="2.2400%" y="549" width="0.0944%" height="15" fill="rgb(207,117,47)" fg:x="1708" fg:w="72"/><text x="2.4900%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (36 samples, 0.05%)</title><rect x="2.3921%" y="469" width="0.0472%" height="15" fill="rgb(249,43,39)" fg:x="1824" fg:w="36"/><text x="2.6421%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="2.4905%" y="453" width="0.0289%" height="15" fill="rgb(209,38,44)" fg:x="1899" fg:w="22"/><text x="2.7405%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="2.4997%" y="437" width="0.0197%" height="15" fill="rgb(236,212,23)" fg:x="1906" fg:w="15"/><text x="2.7497%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (73 samples, 0.10%)</title><rect x="2.4393%" y="469" width="0.0957%" height="15" fill="rgb(242,79,21)" fg:x="1860" fg:w="73"/><text x="2.6893%" y="479.50"></text></g><g><title>core::ptr::null_mut (12 samples, 0.02%)</title><rect x="2.5193%" y="453" width="0.0157%" height="15" fill="rgb(211,96,35)" fg:x="1921" fg:w="12"/><text x="2.7693%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.16%)</title><rect x="2.3790%" y="485" width="0.1626%" height="15" fill="rgb(253,215,40)" fg:x="1814" fg:w="124"/><text x="2.6290%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (20 samples, 0.03%)</title><rect x="2.5626%" y="469" width="0.0262%" height="15" fill="rgb(211,81,21)" fg:x="1954" fg:w="20"/><text x="2.8126%" y="479.50"></text></g><g><title>day1::day16_part2::bt::{{closure}} (14 samples, 0.02%)</title><rect x="2.5705%" y="453" width="0.0184%" height="15" fill="rgb(208,190,38)" fg:x="1960" fg:w="14"/><text x="2.8205%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (8 samples, 0.01%)</title><rect x="2.5784%" y="437" width="0.0105%" height="15" fill="rgb(235,213,38)" fg:x="1966" fg:w="8"/><text x="2.8284%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (201 samples, 0.26%)</title><rect x="2.3344%" y="565" width="0.2636%" height="15" fill="rgb(237,122,38)" fg:x="1780" fg:w="201"/><text x="2.5844%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (199 samples, 0.26%)</title><rect x="2.3370%" y="549" width="0.2610%" height="15" fill="rgb(244,218,35)" fg:x="1782" fg:w="199"/><text x="2.5870%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (199 samples, 0.26%)</title><rect x="2.3370%" y="533" width="0.2610%" height="15" fill="rgb(240,68,47)" fg:x="1782" fg:w="199"/><text x="2.5870%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (194 samples, 0.25%)</title><rect x="2.3436%" y="517" width="0.2544%" height="15" fill="rgb(210,16,53)" fg:x="1787" fg:w="194"/><text x="2.5936%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (187 samples, 0.25%)</title><rect x="2.3528%" y="501" width="0.2452%" height="15" fill="rgb(235,124,12)" fg:x="1794" fg:w="187"/><text x="2.6028%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (43 samples, 0.06%)</title><rect x="2.5416%" y="485" width="0.0564%" height="15" fill="rgb(224,169,11)" fg:x="1938" fg:w="43"/><text x="2.7916%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.07%)</title><rect x="2.5980%" y="565" width="0.0708%" height="15" fill="rgb(250,166,2)" fg:x="1981" fg:w="54"/><text x="2.8480%" y="575.50"></text></g><g><title>&lt;day1::day16_part2::Player as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="2.6452%" y="549" width="0.0236%" height="15" fill="rgb(242,216,29)" fg:x="2017" fg:w="18"/><text x="2.8952%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (97 samples, 0.13%)</title><rect x="3.1528%" y="533" width="0.1272%" height="15" fill="rgb(230,116,27)" fg:x="2404" fg:w="97"/><text x="3.4028%" y="543.50"></text></g><g><title>core::ptr::invalid (30 samples, 0.04%)</title><rect x="3.2800%" y="517" width="0.0393%" height="15" fill="rgb(228,99,48)" fg:x="2501" fg:w="30"/><text x="3.5300%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (431 samples, 0.57%)</title><rect x="2.8066%" y="549" width="0.5652%" height="15" fill="rgb(253,11,6)" fg:x="2140" fg:w="431"/><text x="3.0566%" y="559.50"></text></g><g><title>core::ptr::null (70 samples, 0.09%)</title><rect x="3.2800%" y="533" width="0.0918%" height="15" fill="rgb(247,143,39)" fg:x="2501" fg:w="70"/><text x="3.5300%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (40 samples, 0.05%)</title><rect x="3.3193%" y="517" width="0.0525%" height="15" fill="rgb(236,97,10)" fg:x="2531" fg:w="40"/><text x="3.5693%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (246 samples, 0.32%)</title><rect x="3.8111%" y="533" width="0.3226%" height="15" fill="rgb(233,208,19)" fg:x="2906" fg:w="246"/><text x="4.0611%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (169 samples, 0.22%)</title><rect x="3.9121%" y="517" width="0.2216%" height="15" fill="rgb(216,164,2)" fg:x="2983" fg:w="169"/><text x="4.1621%" y="527.50"></text></g><g><title>core::ptr::invalid_mut (28 samples, 0.04%)</title><rect x="4.1338%" y="517" width="0.0367%" height="15" fill="rgb(220,129,5)" fg:x="3152" fg:w="28"/><text x="4.3838%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (650 samples, 0.85%)</title><rect x="3.3718%" y="549" width="0.8525%" height="15" fill="rgb(242,17,10)" fg:x="2571" fg:w="650"/><text x="3.6218%" y="559.50"></text></g><g><title>core::ptr::null_mut (69 samples, 0.09%)</title><rect x="4.1338%" y="533" width="0.0905%" height="15" fill="rgb(242,107,0)" fg:x="3152" fg:w="69"/><text x="4.3838%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (41 samples, 0.05%)</title><rect x="4.1705%" y="517" width="0.0538%" height="15" fill="rgb(251,28,31)" fg:x="3180" fg:w="41"/><text x="4.4205%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (36 samples, 0.05%)</title><rect x="4.2623%" y="533" width="0.0472%" height="15" fill="rgb(233,223,10)" fg:x="3250" fg:w="36"/><text x="4.5123%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (34 samples, 0.04%)</title><rect x="4.2649%" y="517" width="0.0446%" height="15" fill="rgb(215,21,27)" fg:x="3252" fg:w="34"/><text x="4.5149%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,252 samples, 1.64%)</title><rect x="2.6689%" y="565" width="1.6420%" height="15" fill="rgb(232,23,21)" fg:x="2035" fg:w="1252"/><text x="2.9189%" y="575.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (66 samples, 0.09%)</title><rect x="4.2243%" y="549" width="0.0866%" height="15" fill="rgb(244,5,23)" fg:x="3221" fg:w="66"/><text x="4.4743%" y="559.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="4.3554%" y="501" width="0.0144%" height="15" fill="rgb(226,81,46)" fg:x="3321" fg:w="11"/><text x="4.6054%" y="511.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="4.3489%" y="517" width="0.0236%" height="15" fill="rgb(247,70,30)" fg:x="3316" fg:w="18"/><text x="4.5989%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.02%)</title><rect x="4.4052%" y="485" width="0.0223%" height="15" fill="rgb(212,68,19)" fg:x="3359" fg:w="17"/><text x="4.6552%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (13 samples, 0.02%)</title><rect x="4.4105%" y="469" width="0.0170%" height="15" fill="rgb(240,187,13)" fg:x="3363" fg:w="13"/><text x="4.6605%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (47 samples, 0.06%)</title><rect x="4.3725%" y="517" width="0.0616%" height="15" fill="rgb(223,113,26)" fg:x="3334" fg:w="47"/><text x="4.6225%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (41 samples, 0.05%)</title><rect x="4.3803%" y="501" width="0.0538%" height="15" fill="rgb(206,192,2)" fg:x="3340" fg:w="41"/><text x="4.6303%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (85 samples, 0.11%)</title><rect x="4.3305%" y="549" width="0.1115%" height="15" fill="rgb(241,108,4)" fg:x="3302" fg:w="85"/><text x="4.5805%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (85 samples, 0.11%)</title><rect x="4.3305%" y="533" width="0.1115%" height="15" fill="rgb(247,173,49)" fg:x="3302" fg:w="85"/><text x="4.5805%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (97 samples, 0.13%)</title><rect x="4.3187%" y="565" width="0.1272%" height="15" fill="rgb(224,114,35)" fg:x="3293" fg:w="97"/><text x="4.5687%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (26 samples, 0.03%)</title><rect x="4.4538%" y="533" width="0.0341%" height="15" fill="rgb(245,159,27)" fg:x="3396" fg:w="26"/><text x="4.7038%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (21 samples, 0.03%)</title><rect x="4.4603%" y="517" width="0.0275%" height="15" fill="rgb(245,172,44)" fg:x="3401" fg:w="21"/><text x="4.7103%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (40 samples, 0.05%)</title><rect x="4.4459%" y="565" width="0.0525%" height="15" fill="rgb(236,23,11)" fg:x="3390" fg:w="40"/><text x="4.6959%" y="575.50"></text></g><g><title>alloc::slice::hack::into_vec (39 samples, 0.05%)</title><rect x="4.4472%" y="549" width="0.0511%" height="15" fill="rgb(205,117,38)" fg:x="3391" fg:w="39"/><text x="4.6972%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.02%)</title><rect x="4.5521%" y="501" width="0.0236%" height="15" fill="rgb(237,72,25)" fg:x="3471" fg:w="18"/><text x="4.8021%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (18 samples, 0.02%)</title><rect x="4.5521%" y="485" width="0.0236%" height="15" fill="rgb(244,70,9)" fg:x="3471" fg:w="18"/><text x="4.8021%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (31 samples, 0.04%)</title><rect x="4.5403%" y="517" width="0.0407%" height="15" fill="rgb(217,125,39)" fg:x="3462" fg:w="31"/><text x="4.7903%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (8 samples, 0.01%)</title><rect x="4.5810%" y="517" width="0.0105%" height="15" fill="rgb(235,36,10)" fg:x="3493" fg:w="8"/><text x="4.8310%" y="527.50"></text></g><g><title>_int_free (16 samples, 0.02%)</title><rect x="4.6780%" y="421" width="0.0210%" height="15" fill="rgb(251,123,47)" fg:x="3567" fg:w="16"/><text x="4.9280%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="4.7515%" y="405" width="0.0184%" height="15" fill="rgb(221,13,13)" fg:x="3623" fg:w="14"/><text x="5.0015%" y="415.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="4.7515%" y="389" width="0.0184%" height="15" fill="rgb(238,131,9)" fg:x="3623" fg:w="14"/><text x="5.0015%" y="399.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="4.7515%" y="373" width="0.0184%" height="15" fill="rgb(211,50,8)" fg:x="3623" fg:w="14"/><text x="5.0015%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="4.7528%" y="357" width="0.0170%" height="15" fill="rgb(245,182,24)" fg:x="3624" fg:w="13"/><text x="5.0028%" y="367.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="4.7541%" y="341" width="0.0157%" height="15" fill="rgb(242,14,37)" fg:x="3625" fg:w="12"/><text x="5.0041%" y="351.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="4.7541%" y="325" width="0.0157%" height="15" fill="rgb(246,228,12)" fg:x="3625" fg:w="12"/><text x="5.0041%" y="335.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="4.7554%" y="309" width="0.0144%" height="15" fill="rgb(213,55,15)" fg:x="3626" fg:w="11"/><text x="5.0054%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="4.7593%" y="293" width="0.0105%" height="15" fill="rgb(209,9,3)" fg:x="3629" fg:w="8"/><text x="5.0093%" y="303.50"></text></g><g><title>__GI___libc_realloc (96 samples, 0.13%)</title><rect x="4.6531%" y="453" width="0.1259%" height="15" fill="rgb(230,59,30)" fg:x="3548" fg:w="96"/><text x="4.9031%" y="463.50"></text></g><g><title>_int_realloc (89 samples, 0.12%)</title><rect x="4.6623%" y="437" width="0.1167%" height="15" fill="rgb(209,121,21)" fg:x="3555" fg:w="89"/><text x="4.9123%" y="447.50"></text></g><g><title>_int_malloc (61 samples, 0.08%)</title><rect x="4.6990%" y="421" width="0.0800%" height="15" fill="rgb(220,109,13)" fg:x="3583" fg:w="61"/><text x="4.9490%" y="431.50"></text></g><g><title>alloc::alloc::realloc (109 samples, 0.14%)</title><rect x="4.6452%" y="469" width="0.1430%" height="15" fill="rgb(232,18,1)" fg:x="3542" fg:w="109"/><text x="4.8952%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="4.8236%" y="437" width="0.0262%" height="15" fill="rgb(215,41,42)" fg:x="3678" fg:w="20"/><text x="5.0736%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="4.8302%" y="421" width="0.0197%" height="15" fill="rgb(224,123,36)" fg:x="3683" fg:w="15"/><text x="5.0802%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (52 samples, 0.07%)</title><rect x="4.7934%" y="469" width="0.0682%" height="15" fill="rgb(240,125,3)" fg:x="3655" fg:w="52"/><text x="5.0434%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (48 samples, 0.06%)</title><rect x="4.7987%" y="453" width="0.0630%" height="15" fill="rgb(205,98,50)" fg:x="3659" fg:w="48"/><text x="5.0487%" y="463.50"></text></g><g><title>core::ptr::null_mut (9 samples, 0.01%)</title><rect x="4.8498%" y="437" width="0.0118%" height="15" fill="rgb(205,185,37)" fg:x="3698" fg:w="9"/><text x="5.0998%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (203 samples, 0.27%)</title><rect x="4.6072%" y="501" width="0.2662%" height="15" fill="rgb(238,207,15)" fg:x="3513" fg:w="203"/><text x="4.8572%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (202 samples, 0.26%)</title><rect x="4.6085%" y="485" width="0.2649%" height="15" fill="rgb(213,199,42)" fg:x="3514" fg:w="202"/><text x="4.8585%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (9 samples, 0.01%)</title><rect x="4.8616%" y="469" width="0.0118%" height="15" fill="rgb(235,201,11)" fg:x="3707" fg:w="9"/><text x="5.1116%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.01%)</title><rect x="4.8616%" y="453" width="0.0118%" height="15" fill="rgb(207,46,11)" fg:x="3707" fg:w="9"/><text x="5.1116%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="4.8616%" y="437" width="0.0118%" height="15" fill="rgb(241,35,35)" fg:x="3707" fg:w="9"/><text x="5.1116%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="4.8734%" y="501" width="0.0105%" height="15" fill="rgb(243,32,47)" fg:x="3716" fg:w="8"/><text x="5.1234%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (238 samples, 0.31%)</title><rect x="4.5915%" y="517" width="0.3121%" height="15" fill="rgb(247,202,23)" fg:x="3501" fg:w="238"/><text x="4.8415%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.01%)</title><rect x="4.8892%" y="501" width="0.0144%" height="15" fill="rgb(219,102,11)" fg:x="3728" fg:w="11"/><text x="5.1392%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (35 samples, 0.05%)</title><rect x="4.9036%" y="517" width="0.0459%" height="15" fill="rgb(243,110,44)" fg:x="3739" fg:w="35"/><text x="5.1536%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (35 samples, 0.05%)</title><rect x="4.9036%" y="501" width="0.0459%" height="15" fill="rgb(222,74,54)" fg:x="3739" fg:w="35"/><text x="5.1536%" y="511.50"></text></g><g><title>core::cmp::max (37 samples, 0.05%)</title><rect x="4.9495%" y="517" width="0.0485%" height="15" fill="rgb(216,99,12)" fg:x="3774" fg:w="37"/><text x="5.1995%" y="527.50"></text></g><g><title>core::cmp::Ord::max (35 samples, 0.05%)</title><rect x="4.9521%" y="501" width="0.0459%" height="15" fill="rgb(226,22,26)" fg:x="3776" fg:w="35"/><text x="5.2021%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (17 samples, 0.02%)</title><rect x="4.9757%" y="485" width="0.0223%" height="15" fill="rgb(217,163,10)" fg:x="3794" fg:w="17"/><text x="5.2257%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (10 samples, 0.01%)</title><rect x="4.9980%" y="517" width="0.0131%" height="15" fill="rgb(213,25,53)" fg:x="3811" fg:w="10"/><text x="5.2480%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (380 samples, 0.50%)</title><rect x="4.5167%" y="533" width="0.4984%" height="15" fill="rgb(252,105,26)" fg:x="3444" fg:w="380"/><text x="4.7667%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (383 samples, 0.50%)</title><rect x="4.5167%" y="549" width="0.5023%" height="15" fill="rgb(220,39,43)" fg:x="3444" fg:w="383"/><text x="4.7667%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (40 samples, 0.05%)</title><rect x="5.0662%" y="517" width="0.0525%" height="15" fill="rgb(229,68,48)" fg:x="3863" fg:w="40"/><text x="5.3162%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="5.0820%" y="501" width="0.0367%" height="15" fill="rgb(252,8,32)" fg:x="3875" fg:w="28"/><text x="5.3320%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (85 samples, 0.11%)</title><rect x="5.0190%" y="549" width="0.1115%" height="15" fill="rgb(223,20,43)" fg:x="3827" fg:w="85"/><text x="5.2690%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (84 samples, 0.11%)</title><rect x="5.0203%" y="533" width="0.1102%" height="15" fill="rgb(229,81,49)" fg:x="3828" fg:w="84"/><text x="5.2703%" y="543.50"></text></g><g><title>core::ptr::null_mut (9 samples, 0.01%)</title><rect x="5.1187%" y="517" width="0.0118%" height="15" fill="rgb(236,28,36)" fg:x="3903" fg:w="9"/><text x="5.3687%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (491 samples, 0.64%)</title><rect x="4.4984%" y="565" width="0.6439%" height="15" fill="rgb(249,185,26)" fg:x="3430" fg:w="491"/><text x="4.7484%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="5.2577%" y="485" width="0.0262%" height="15" fill="rgb(249,174,33)" fg:x="4009" fg:w="20"/><text x="5.5077%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="5.2643%" y="469" width="0.0197%" height="15" fill="rgb(233,201,37)" fg:x="4014" fg:w="15"/><text x="5.5143%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (53 samples, 0.07%)</title><rect x="5.2236%" y="517" width="0.0695%" height="15" fill="rgb(221,78,26)" fg:x="3983" fg:w="53"/><text x="5.4736%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (49 samples, 0.06%)</title><rect x="5.2289%" y="501" width="0.0643%" height="15" fill="rgb(250,127,30)" fg:x="3987" fg:w="49"/><text x="5.4789%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.16%)</title><rect x="5.1633%" y="533" width="0.1613%" height="15" fill="rgb(230,49,44)" fg:x="3937" fg:w="123"/><text x="5.4133%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (24 samples, 0.03%)</title><rect x="5.2931%" y="517" width="0.0315%" height="15" fill="rgb(229,67,23)" fg:x="4036" fg:w="24"/><text x="5.5431%" y="527.50"></text></g><g><title>malloc_consolidate (10 samples, 0.01%)</title><rect x="5.3679%" y="453" width="0.0131%" height="15" fill="rgb(249,83,47)" fg:x="4093" fg:w="10"/><text x="5.6179%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.05%)</title><rect x="5.3325%" y="501" width="0.0498%" height="15" fill="rgb(215,43,3)" fg:x="4066" fg:w="38"/><text x="5.5825%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.04%)</title><rect x="5.3430%" y="485" width="0.0393%" height="15" fill="rgb(238,154,13)" fg:x="4074" fg:w="30"/><text x="5.5930%" y="495.50"></text></g><g><title>_int_free (25 samples, 0.03%)</title><rect x="5.3495%" y="469" width="0.0328%" height="15" fill="rgb(219,56,2)" fg:x="4079" fg:w="25"/><text x="5.5995%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (27 samples, 0.04%)</title><rect x="5.3980%" y="485" width="0.0354%" height="15" fill="rgb(233,0,4)" fg:x="4116" fg:w="27"/><text x="5.6480%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (27 samples, 0.04%)</title><rect x="5.3980%" y="469" width="0.0354%" height="15" fill="rgb(235,30,7)" fg:x="4116" fg:w="27"/><text x="5.6480%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;: 2]&gt; (219 samples, 0.29%)</title><rect x="5.1489%" y="565" width="0.2872%" height="15" fill="rgb(250,79,13)" fg:x="3926" fg:w="219"/><text x="5.3989%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (208 samples, 0.27%)</title><rect x="5.1633%" y="549" width="0.2728%" height="15" fill="rgb(211,146,34)" fg:x="3937" fg:w="208"/><text x="5.4133%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (85 samples, 0.11%)</title><rect x="5.3246%" y="533" width="0.1115%" height="15" fill="rgb(228,22,38)" fg:x="4060" fg:w="85"/><text x="5.5746%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.11%)</title><rect x="5.3298%" y="517" width="0.1062%" height="15" fill="rgb(235,168,5)" fg:x="4064" fg:w="81"/><text x="5.5798%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (41 samples, 0.05%)</title><rect x="5.3823%" y="501" width="0.0538%" height="15" fill="rgb(221,155,16)" fg:x="4104" fg:w="41"/><text x="5.6323%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (14 samples, 0.02%)</title><rect x="5.4374%" y="517" width="0.0184%" height="15" fill="rgb(215,215,53)" fg:x="4146" fg:w="14"/><text x="5.6874%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.02%)</title><rect x="5.4374%" y="501" width="0.0184%" height="15" fill="rgb(223,4,10)" fg:x="4146" fg:w="14"/><text x="5.6874%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="5.4374%" y="533" width="0.0210%" height="15" fill="rgb(234,103,6)" fg:x="4146" fg:w="16"/><text x="5.6874%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="5.4597%" y="501" width="0.0157%" height="15" fill="rgb(227,97,0)" fg:x="4163" fg:w="12"/><text x="5.7097%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="5.4623%" y="485" width="0.0131%" height="15" fill="rgb(234,150,53)" fg:x="4165" fg:w="10"/><text x="5.7123%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (53 samples, 0.07%)</title><rect x="5.4361%" y="565" width="0.0695%" height="15" fill="rgb(228,201,54)" fg:x="4145" fg:w="53"/><text x="5.6861%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (53 samples, 0.07%)</title><rect x="5.4361%" y="549" width="0.0695%" height="15" fill="rgb(222,22,37)" fg:x="4145" fg:w="53"/><text x="5.6861%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (36 samples, 0.05%)</title><rect x="5.4584%" y="533" width="0.0472%" height="15" fill="rgb(237,53,32)" fg:x="4162" fg:w="36"/><text x="5.7084%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.05%)</title><rect x="5.4597%" y="517" width="0.0459%" height="15" fill="rgb(233,25,53)" fg:x="4163" fg:w="35"/><text x="5.7097%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23 samples, 0.03%)</title><rect x="5.4754%" y="501" width="0.0302%" height="15" fill="rgb(210,40,34)" fg:x="4175" fg:w="23"/><text x="5.7254%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.02%)</title><rect x="5.4820%" y="485" width="0.0236%" height="15" fill="rgb(241,220,44)" fg:x="4180" fg:w="18"/><text x="5.7320%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (17 samples, 0.02%)</title><rect x="5.4833%" y="469" width="0.0223%" height="15" fill="rgb(235,28,35)" fg:x="4181" fg:w="17"/><text x="5.7333%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (34 samples, 0.04%)</title><rect x="5.5056%" y="565" width="0.0446%" height="15" fill="rgb(210,56,17)" fg:x="4198" fg:w="34"/><text x="5.7556%" y="575.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (33 samples, 0.04%)</title><rect x="5.5069%" y="549" width="0.0433%" height="15" fill="rgb(224,130,29)" fg:x="4199" fg:w="33"/><text x="5.7569%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (24 samples, 0.03%)</title><rect x="5.5187%" y="533" width="0.0315%" height="15" fill="rgb(235,212,8)" fg:x="4208" fg:w="24"/><text x="5.7687%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (84 samples, 0.11%)</title><rect x="7.2262%" y="485" width="0.1102%" height="15" fill="rgb(223,33,50)" fg:x="5510" fg:w="84"/><text x="7.4762%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (50 samples, 0.07%)</title><rect x="7.2708%" y="469" width="0.0656%" height="15" fill="rgb(219,149,13)" fg:x="5544" fg:w="50"/><text x="7.5208%" y="479.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="7.3364%" y="469" width="0.0105%" height="15" fill="rgb(250,156,29)" fg:x="5594" fg:w="8"/><text x="7.5864%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (197 samples, 0.26%)</title><rect x="7.1069%" y="517" width="0.2584%" height="15" fill="rgb(216,193,19)" fg:x="5419" fg:w="197"/><text x="7.3569%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (195 samples, 0.26%)</title><rect x="7.1095%" y="501" width="0.2557%" height="15" fill="rgb(216,135,14)" fg:x="5421" fg:w="195"/><text x="7.3595%" y="511.50"></text></g><g><title>core::ptr::null_mut (22 samples, 0.03%)</title><rect x="7.3364%" y="485" width="0.0289%" height="15" fill="rgb(241,47,5)" fg:x="5594" fg:w="22"/><text x="7.5864%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="7.3469%" y="469" width="0.0184%" height="15" fill="rgb(233,42,35)" fg:x="5602" fg:w="14"/><text x="7.5969%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (216 samples, 0.28%)</title><rect x="7.1003%" y="533" width="0.2833%" height="15" fill="rgb(231,13,6)" fg:x="5414" fg:w="216"/><text x="7.3503%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (14 samples, 0.02%)</title><rect x="7.3652%" y="517" width="0.0184%" height="15" fill="rgb(207,181,40)" fg:x="5616" fg:w="14"/><text x="7.6152%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (11 samples, 0.01%)</title><rect x="7.3692%" y="501" width="0.0144%" height="15" fill="rgb(254,173,49)" fg:x="5619" fg:w="11"/><text x="7.6192%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.01%)</title><rect x="7.3692%" y="485" width="0.0144%" height="15" fill="rgb(221,1,38)" fg:x="5619" fg:w="11"/><text x="7.6192%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (35 samples, 0.05%)</title><rect x="7.5528%" y="485" width="0.0459%" height="15" fill="rgb(206,124,46)" fg:x="5759" fg:w="35"/><text x="7.8028%" y="495.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (393 samples, 0.52%)</title><rect x="7.0977%" y="549" width="0.5154%" height="15" fill="rgb(249,21,11)" fg:x="5412" fg:w="393"/><text x="7.3477%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (175 samples, 0.23%)</title><rect x="7.3836%" y="533" width="0.2295%" height="15" fill="rgb(222,201,40)" fg:x="5630" fg:w="175"/><text x="7.6336%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (175 samples, 0.23%)</title><rect x="7.3836%" y="517" width="0.2295%" height="15" fill="rgb(235,61,29)" fg:x="5630" fg:w="175"/><text x="7.6336%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (128 samples, 0.17%)</title><rect x="7.4452%" y="501" width="0.1679%" height="15" fill="rgb(219,207,3)" fg:x="5677" fg:w="128"/><text x="7.6952%" y="511.50"></text></g><g><title>core::ptr::null (11 samples, 0.01%)</title><rect x="7.5987%" y="485" width="0.0144%" height="15" fill="rgb(222,56,46)" fg:x="5794" fg:w="11"/><text x="7.8487%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.01%)</title><rect x="7.6013%" y="469" width="0.0118%" height="15" fill="rgb(239,76,54)" fg:x="5796" fg:w="9"/><text x="7.8513%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="7.8177%" y="501" width="0.0236%" height="15" fill="rgb(231,124,27)" fg:x="5961" fg:w="18"/><text x="8.0677%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (107 samples, 0.14%)</title><rect x="7.7141%" y="517" width="0.1403%" height="15" fill="rgb(249,195,6)" fg:x="5882" fg:w="107"/><text x="7.9641%" y="527.50"></text></g><g><title>core::ptr::null (10 samples, 0.01%)</title><rect x="7.8413%" y="501" width="0.0131%" height="15" fill="rgb(237,174,47)" fg:x="5979" fg:w="10"/><text x="8.0913%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (58 samples, 0.08%)</title><rect x="7.9541%" y="501" width="0.0761%" height="15" fill="rgb(206,201,31)" fg:x="6065" fg:w="58"/><text x="8.2041%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.04%)</title><rect x="7.9869%" y="485" width="0.0433%" height="15" fill="rgb(231,57,52)" fg:x="6090" fg:w="33"/><text x="8.2369%" y="495.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="8.0302%" y="485" width="0.0105%" height="15" fill="rgb(248,177,22)" fg:x="6123" fg:w="8"/><text x="8.2802%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (158 samples, 0.21%)</title><rect x="7.8544%" y="517" width="0.2072%" height="15" fill="rgb(215,211,37)" fg:x="5989" fg:w="158"/><text x="8.1044%" y="527.50"></text></g><g><title>core::ptr::null_mut (24 samples, 0.03%)</title><rect x="8.0302%" y="501" width="0.0315%" height="15" fill="rgb(241,128,51)" fg:x="6123" fg:w="24"/><text x="8.2802%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.02%)</title><rect x="8.0407%" y="485" width="0.0210%" height="15" fill="rgb(227,165,31)" fg:x="6131" fg:w="16"/><text x="8.2907%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="8.0748%" y="501" width="0.0131%" height="15" fill="rgb(228,167,24)" fg:x="6157" fg:w="10"/><text x="8.3248%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (310 samples, 0.41%)</title><rect x="7.6826%" y="533" width="0.4066%" height="15" fill="rgb(228,143,12)" fg:x="5858" fg:w="310"/><text x="7.9326%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (21 samples, 0.03%)</title><rect x="8.0616%" y="517" width="0.0275%" height="15" fill="rgb(249,149,8)" fg:x="6147" fg:w="21"/><text x="8.3116%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (357 samples, 0.47%)</title><rect x="7.6223%" y="549" width="0.4682%" height="15" fill="rgb(243,35,44)" fg:x="5812" fg:w="357"/><text x="7.8723%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (20 samples, 0.03%)</title><rect x="8.1207%" y="533" width="0.0262%" height="15" fill="rgb(246,89,9)" fg:x="6192" fg:w="20"/><text x="8.3707%" y="543.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (14 samples, 0.02%)</title><rect x="8.1285%" y="517" width="0.0184%" height="15" fill="rgb(233,213,13)" fg:x="6198" fg:w="14"/><text x="8.3785%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (70 samples, 0.09%)</title><rect x="8.6479%" y="437" width="0.0918%" height="15" fill="rgb(233,141,41)" fg:x="6594" fg:w="70"/><text x="8.8979%" y="447.50"></text></g><g><title>core::ptr::invalid (18 samples, 0.02%)</title><rect x="8.7397%" y="421" width="0.0236%" height="15" fill="rgb(239,167,4)" fg:x="6664" fg:w="18"/><text x="8.9897%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (261 samples, 0.34%)</title><rect x="8.4498%" y="453" width="0.3423%" height="15" fill="rgb(209,217,16)" fg:x="6443" fg:w="261"/><text x="8.6998%" y="463.50"></text></g><g><title>core::ptr::null (40 samples, 0.05%)</title><rect x="8.7397%" y="437" width="0.0525%" height="15" fill="rgb(219,88,35)" fg:x="6664" fg:w="40"/><text x="8.9897%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (22 samples, 0.03%)</title><rect x="8.7633%" y="421" width="0.0289%" height="15" fill="rgb(220,193,23)" fg:x="6682" fg:w="22"/><text x="9.0133%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (208 samples, 0.27%)</title><rect x="9.1016%" y="437" width="0.2728%" height="15" fill="rgb(230,90,52)" fg:x="6940" fg:w="208"/><text x="9.3516%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (131 samples, 0.17%)</title><rect x="9.2026%" y="421" width="0.1718%" height="15" fill="rgb(252,106,19)" fg:x="7017" fg:w="131"/><text x="9.4526%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (26 samples, 0.03%)</title><rect x="9.3744%" y="421" width="0.0341%" height="15" fill="rgb(206,74,20)" fg:x="7148" fg:w="26"/><text x="9.6244%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (504 samples, 0.66%)</title><rect x="8.7921%" y="453" width="0.6610%" height="15" fill="rgb(230,138,44)" fg:x="6704" fg:w="504"/><text x="9.0421%" y="463.50"></text></g><g><title>core::ptr::null_mut (60 samples, 0.08%)</title><rect x="9.3744%" y="437" width="0.0787%" height="15" fill="rgb(235,182,43)" fg:x="7148" fg:w="60"/><text x="9.6244%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (34 samples, 0.04%)</title><rect x="9.4085%" y="421" width="0.0446%" height="15" fill="rgb(242,16,51)" fg:x="7174" fg:w="34"/><text x="9.6585%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (860 samples, 1.13%)</title><rect x="8.3816%" y="469" width="1.1279%" height="15" fill="rgb(248,9,4)" fg:x="6391" fg:w="860"/><text x="8.6316%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (43 samples, 0.06%)</title><rect x="9.4531%" y="453" width="0.0564%" height="15" fill="rgb(210,31,22)" fg:x="7208" fg:w="43"/><text x="9.7031%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.02%)</title><rect x="9.4872%" y="437" width="0.0223%" height="15" fill="rgb(239,54,39)" fg:x="7234" fg:w="17"/><text x="9.7372%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.02%)</title><rect x="9.4885%" y="421" width="0.0210%" height="15" fill="rgb(230,99,41)" fg:x="7235" fg:w="16"/><text x="9.7385%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (175 samples, 0.23%)</title><rect x="9.6879%" y="453" width="0.2295%" height="15" fill="rgb(253,106,12)" fg:x="7387" fg:w="175"/><text x="9.9379%" y="463.50"></text></g><g><title>day1::day16_part2::bt::{{closure}} (119 samples, 0.16%)</title><rect x="9.7613%" y="437" width="0.1561%" height="15" fill="rgb(213,46,41)" fg:x="7443" fg:w="119"/><text x="10.0113%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (74 samples, 0.10%)</title><rect x="9.8203%" y="421" width="0.0970%" height="15" fill="rgb(215,133,35)" fg:x="7488" fg:w="74"/><text x="10.0703%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (38 samples, 0.05%)</title><rect x="9.8675%" y="405" width="0.0498%" height="15" fill="rgb(213,28,5)" fg:x="7524" fg:w="38"/><text x="10.1175%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1,449 samples, 1.90%)</title><rect x="8.0905%" y="549" width="1.9003%" height="15" fill="rgb(215,77,49)" fg:x="6169" fg:w="1449"/><text x="8.3405%" y="559.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,406 samples, 1.84%)</title><rect x="8.1469%" y="533" width="1.8439%" height="15" fill="rgb(248,100,22)" fg:x="6212" fg:w="1406"/><text x="8.3969%" y="543.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,402 samples, 1.84%)</title><rect x="8.1521%" y="517" width="1.8387%" height="15" fill="rgb(208,67,9)" fg:x="6216" fg:w="1402"/><text x="8.4021%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,385 samples, 1.82%)</title><rect x="8.1744%" y="501" width="1.8164%" height="15" fill="rgb(219,133,21)" fg:x="6233" fg:w="1385"/><text x="8.4244%" y="511.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,330 samples, 1.74%)</title><rect x="8.2466%" y="485" width="1.7443%" height="15" fill="rgb(246,46,29)" fg:x="6288" fg:w="1330"/><text x="8.4966%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (366 samples, 0.48%)</title><rect x="9.5108%" y="469" width="0.4800%" height="15" fill="rgb(246,185,52)" fg:x="7252" fg:w="366"/><text x="9.7608%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (56 samples, 0.07%)</title><rect x="9.9174%" y="453" width="0.0734%" height="15" fill="rgb(252,136,11)" fg:x="7562" fg:w="56"/><text x="10.1674%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (45 samples, 0.06%)</title><rect x="9.9908%" y="549" width="0.0590%" height="15" fill="rgb(219,138,53)" fg:x="7618" fg:w="45"/><text x="10.2408%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (133 samples, 0.17%)</title><rect x="10.8105%" y="517" width="0.1744%" height="15" fill="rgb(211,51,23)" fg:x="8243" fg:w="133"/><text x="11.0605%" y="527.50"></text></g><g><title>core::ptr::invalid (35 samples, 0.05%)</title><rect x="10.9849%" y="501" width="0.0459%" height="15" fill="rgb(247,221,28)" fg:x="8376" fg:w="35"/><text x="11.2349%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (639 samples, 0.84%)</title><rect x="10.2597%" y="533" width="0.8380%" height="15" fill="rgb(251,222,45)" fg:x="7823" fg:w="639"/><text x="10.5097%" y="543.50"></text></g><g><title>core::ptr::null (86 samples, 0.11%)</title><rect x="10.9849%" y="517" width="0.1128%" height="15" fill="rgb(217,162,53)" fg:x="8376" fg:w="86"/><text x="11.2349%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (51 samples, 0.07%)</title><rect x="11.0308%" y="501" width="0.0669%" height="15" fill="rgb(229,93,14)" fg:x="8411" fg:w="51"/><text x="11.2808%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (362 samples, 0.47%)</title><rect x="11.8020%" y="517" width="0.4748%" height="15" fill="rgb(209,67,49)" fg:x="8999" fg:w="362"/><text x="12.0520%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (196 samples, 0.26%)</title><rect x="12.0197%" y="501" width="0.2570%" height="15" fill="rgb(213,87,29)" fg:x="9165" fg:w="196"/><text x="12.2697%" y="511.50"></text></g><g><title>core::ptr::invalid_mut (19 samples, 0.02%)</title><rect x="12.2767%" y="501" width="0.0249%" height="15" fill="rgb(205,151,52)" fg:x="9361" fg:w="19"/><text x="12.5267%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (957 samples, 1.26%)</title><rect x="11.0977%" y="533" width="1.2551%" height="15" fill="rgb(253,215,39)" fg:x="8462" fg:w="957"/><text x="11.3477%" y="543.50"></text></g><g><title>core::ptr::null_mut (58 samples, 0.08%)</title><rect x="12.2767%" y="517" width="0.0761%" height="15" fill="rgb(221,220,41)" fg:x="9361" fg:w="58"/><text x="12.5267%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (39 samples, 0.05%)</title><rect x="12.3016%" y="501" width="0.0511%" height="15" fill="rgb(218,133,21)" fg:x="9380" fg:w="39"/><text x="12.5516%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (49 samples, 0.06%)</title><rect x="12.4092%" y="517" width="0.0643%" height="15" fill="rgb(221,193,43)" fg:x="9462" fg:w="49"/><text x="12.6592%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (46 samples, 0.06%)</title><rect x="12.4131%" y="501" width="0.0603%" height="15" fill="rgb(240,128,52)" fg:x="9465" fg:w="46"/><text x="12.6631%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,853 samples, 2.43%)</title><rect x="10.0498%" y="549" width="2.4302%" height="15" fill="rgb(253,114,12)" fg:x="7663" fg:w="1853"/><text x="10.2998%" y="559.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (97 samples, 0.13%)</title><rect x="12.3528%" y="533" width="0.1272%" height="15" fill="rgb(215,223,47)" fg:x="9419" fg:w="97"/><text x="12.6028%" y="543.50"></text></g><g><title>__GI___libc_malloc (39 samples, 0.05%)</title><rect x="12.6190%" y="485" width="0.0511%" height="15" fill="rgb(248,225,23)" fg:x="9622" fg:w="39"/><text x="12.8690%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::align (9 samples, 0.01%)</title><rect x="12.6793%" y="485" width="0.0118%" height="15" fill="rgb(250,108,0)" fg:x="9668" fg:w="9"/><text x="12.9293%" y="495.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.09%)</title><rect x="12.5993%" y="501" width="0.0931%" height="15" fill="rgb(228,208,7)" fg:x="9607" fg:w="71"/><text x="12.8493%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (62 samples, 0.08%)</title><rect x="12.8026%" y="469" width="0.0813%" height="15" fill="rgb(244,45,10)" fg:x="9762" fg:w="62"/><text x="13.0526%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (44 samples, 0.06%)</title><rect x="12.8262%" y="453" width="0.0577%" height="15" fill="rgb(207,125,25)" fg:x="9780" fg:w="44"/><text x="13.0762%" y="463.50"></text></g><g><title>core::ptr::invalid_mut (15 samples, 0.02%)</title><rect x="12.8839%" y="453" width="0.0197%" height="15" fill="rgb(210,195,18)" fg:x="9824" fg:w="15"/><text x="13.1339%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (162 samples, 0.21%)</title><rect x="12.7030%" y="501" width="0.2125%" height="15" fill="rgb(249,80,12)" fg:x="9686" fg:w="162"/><text x="12.9530%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (152 samples, 0.20%)</title><rect x="12.7161%" y="485" width="0.1993%" height="15" fill="rgb(221,65,9)" fg:x="9696" fg:w="152"/><text x="12.9661%" y="495.50"></text></g><g><title>core::ptr::null_mut (24 samples, 0.03%)</title><rect x="12.8839%" y="469" width="0.0315%" height="15" fill="rgb(235,49,36)" fg:x="9824" fg:w="24"/><text x="13.1339%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="12.9036%" y="453" width="0.0118%" height="15" fill="rgb(225,32,20)" fg:x="9839" fg:w="9"/><text x="13.1536%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (295 samples, 0.39%)</title><rect x="12.5416%" y="533" width="0.3869%" height="15" fill="rgb(215,141,46)" fg:x="9563" fg:w="295"/><text x="12.7916%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (294 samples, 0.39%)</title><rect x="12.5430%" y="517" width="0.3856%" height="15" fill="rgb(250,160,47)" fg:x="9564" fg:w="294"/><text x="12.7930%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (10 samples, 0.01%)</title><rect x="12.9154%" y="501" width="0.0131%" height="15" fill="rgb(216,222,40)" fg:x="9848" fg:w="10"/><text x="13.1654%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (8 samples, 0.01%)</title><rect x="12.9180%" y="485" width="0.0105%" height="15" fill="rgb(234,217,39)" fg:x="9850" fg:w="8"/><text x="13.1680%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.01%)</title><rect x="12.9180%" y="469" width="0.0105%" height="15" fill="rgb(207,178,40)" fg:x="9850" fg:w="8"/><text x="13.1680%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (344 samples, 0.45%)</title><rect x="12.4866%" y="549" width="0.4511%" height="15" fill="rgb(221,136,13)" fg:x="9521" fg:w="344"/><text x="12.7366%" y="559.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (38 samples, 0.05%)</title><rect x="13.0505%" y="485" width="0.0498%" height="15" fill="rgb(249,199,10)" fg:x="9951" fg:w="38"/><text x="13.3005%" y="495.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (22 samples, 0.03%)</title><rect x="13.0715%" y="469" width="0.0289%" height="15" fill="rgb(249,222,13)" fg:x="9967" fg:w="22"/><text x="13.3215%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (86 samples, 0.11%)</title><rect x="12.9980%" y="501" width="0.1128%" height="15" fill="rgb(244,185,38)" fg:x="9911" fg:w="86"/><text x="13.2480%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::leak (8 samples, 0.01%)</title><rect x="13.1003%" y="485" width="0.0105%" height="15" fill="rgb(236,202,9)" fg:x="9989" fg:w="8"/><text x="13.3503%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (106 samples, 0.14%)</title><rect x="12.9731%" y="517" width="0.1390%" height="15" fill="rgb(250,229,37)" fg:x="9892" fg:w="106"/><text x="13.2231%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (27 samples, 0.04%)</title><rect x="13.1121%" y="517" width="0.0354%" height="15" fill="rgb(206,174,23)" fg:x="9998" fg:w="27"/><text x="13.3621%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (21 samples, 0.03%)</title><rect x="13.1200%" y="501" width="0.0275%" height="15" fill="rgb(211,33,43)" fg:x="10004" fg:w="21"/><text x="13.3700%" y="511.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (12 samples, 0.02%)</title><rect x="13.1318%" y="485" width="0.0157%" height="15" fill="rgb(245,58,50)" fg:x="10013" fg:w="12"/><text x="13.3818%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (162 samples, 0.21%)</title><rect x="12.9377%" y="549" width="0.2125%" height="15" fill="rgb(244,68,36)" fg:x="9865" fg:w="162"/><text x="13.1877%" y="559.50"></text></g><g><title>alloc::slice::hack::into_vec (160 samples, 0.21%)</title><rect x="12.9403%" y="533" width="0.2098%" height="15" fill="rgb(232,229,15)" fg:x="9867" fg:w="160"/><text x="13.1903%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="13.1974%" y="485" width="0.0105%" height="15" fill="rgb(254,30,23)" fg:x="10063" fg:w="8"/><text x="13.4474%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (8 samples, 0.01%)</title><rect x="13.1974%" y="469" width="0.0105%" height="15" fill="rgb(235,160,14)" fg:x="10063" fg:w="8"/><text x="13.4474%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.02%)</title><rect x="13.2079%" y="485" width="0.0236%" height="15" fill="rgb(212,155,44)" fg:x="10071" fg:w="18"/><text x="13.4579%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (18 samples, 0.02%)</title><rect x="13.2079%" y="469" width="0.0236%" height="15" fill="rgb(226,2,50)" fg:x="10071" fg:w="18"/><text x="13.4579%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (39 samples, 0.05%)</title><rect x="13.1882%" y="501" width="0.0511%" height="15" fill="rgb(234,177,6)" fg:x="10056" fg:w="39"/><text x="13.4382%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (9 samples, 0.01%)</title><rect x="13.2393%" y="501" width="0.0118%" height="15" fill="rgb(217,24,9)" fg:x="10095" fg:w="9"/><text x="13.4893%" y="511.50"></text></g><g><title>_int_free (18 samples, 0.02%)</title><rect x="13.3561%" y="405" width="0.0236%" height="15" fill="rgb(220,13,46)" fg:x="10184" fg:w="18"/><text x="13.6061%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="13.4216%" y="389" width="0.0131%" height="15" fill="rgb(239,221,27)" fg:x="10234" fg:w="10"/><text x="13.6716%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="13.4216%" y="373" width="0.0131%" height="15" fill="rgb(222,198,25)" fg:x="10234" fg:w="10"/><text x="13.6716%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="13.4216%" y="357" width="0.0131%" height="15" fill="rgb(211,99,13)" fg:x="10234" fg:w="10"/><text x="13.6716%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="13.4216%" y="341" width="0.0131%" height="15" fill="rgb(232,111,31)" fg:x="10234" fg:w="10"/><text x="13.6716%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="13.4230%" y="325" width="0.0118%" height="15" fill="rgb(245,82,37)" fg:x="10235" fg:w="9"/><text x="13.6730%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="13.4230%" y="309" width="0.0118%" height="15" fill="rgb(227,149,46)" fg:x="10235" fg:w="9"/><text x="13.6730%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="13.4230%" y="293" width="0.0118%" height="15" fill="rgb(218,36,50)" fg:x="10235" fg:w="9"/><text x="13.6730%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="13.4243%" y="277" width="0.0105%" height="15" fill="rgb(226,80,48)" fg:x="10236" fg:w="8"/><text x="13.6743%" y="287.50"></text></g><g><title>__GI___libc_realloc (97 samples, 0.13%)</title><rect x="13.3154%" y="437" width="0.1272%" height="15" fill="rgb(238,224,15)" fg:x="10153" fg:w="97"/><text x="13.5654%" y="447.50"></text></g><g><title>_int_realloc (85 samples, 0.11%)</title><rect x="13.3311%" y="421" width="0.1115%" height="15" fill="rgb(241,136,10)" fg:x="10165" fg:w="85"/><text x="13.5811%" y="431.50"></text></g><g><title>_int_malloc (48 samples, 0.06%)</title><rect x="13.3797%" y="405" width="0.0630%" height="15" fill="rgb(208,32,45)" fg:x="10202" fg:w="48"/><text x="13.6297%" y="415.50"></text></g><g><title>alloc::alloc::realloc (114 samples, 0.15%)</title><rect x="13.2970%" y="453" width="0.1495%" height="15" fill="rgb(207,135,9)" fg:x="10139" fg:w="114"/><text x="13.5470%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="13.4938%" y="421" width="0.0275%" height="15" fill="rgb(206,86,44)" fg:x="10289" fg:w="21"/><text x="13.7438%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="13.4977%" y="405" width="0.0236%" height="15" fill="rgb(245,177,15)" fg:x="10292" fg:w="18"/><text x="13.7477%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (56 samples, 0.07%)</title><rect x="13.4557%" y="453" width="0.0734%" height="15" fill="rgb(206,64,50)" fg:x="10260" fg:w="56"/><text x="13.7057%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (53 samples, 0.07%)</title><rect x="13.4597%" y="437" width="0.0695%" height="15" fill="rgb(234,36,40)" fg:x="10263" fg:w="53"/><text x="13.7097%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (206 samples, 0.27%)</title><rect x="13.2656%" y="485" width="0.2702%" height="15" fill="rgb(213,64,8)" fg:x="10115" fg:w="206"/><text x="13.5156%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (205 samples, 0.27%)</title><rect x="13.2669%" y="469" width="0.2689%" height="15" fill="rgb(210,75,36)" fg:x="10116" fg:w="205"/><text x="13.5169%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (236 samples, 0.31%)</title><rect x="13.2511%" y="501" width="0.3095%" height="15" fill="rgb(229,88,21)" fg:x="10104" fg:w="236"/><text x="13.5011%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.02%)</title><rect x="13.5449%" y="485" width="0.0157%" height="15" fill="rgb(252,204,47)" fg:x="10328" fg:w="12"/><text x="13.7949%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (43 samples, 0.06%)</title><rect x="13.5607%" y="501" width="0.0564%" height="15" fill="rgb(208,77,27)" fg:x="10340" fg:w="43"/><text x="13.8107%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (42 samples, 0.06%)</title><rect x="13.5620%" y="485" width="0.0551%" height="15" fill="rgb(221,76,26)" fg:x="10341" fg:w="42"/><text x="13.8120%" y="495.50"></text></g><g><title>core::cmp::max (36 samples, 0.05%)</title><rect x="13.6170%" y="501" width="0.0472%" height="15" fill="rgb(225,139,18)" fg:x="10383" fg:w="36"/><text x="13.8670%" y="511.50"></text></g><g><title>core::cmp::Ord::max (35 samples, 0.05%)</title><rect x="13.6184%" y="485" width="0.0459%" height="15" fill="rgb(230,137,11)" fg:x="10384" fg:w="35"/><text x="13.8684%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (16 samples, 0.02%)</title><rect x="13.6433%" y="469" width="0.0210%" height="15" fill="rgb(212,28,1)" fg:x="10403" fg:w="16"/><text x="13.8933%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (17 samples, 0.02%)</title><rect x="13.6643%" y="501" width="0.0223%" height="15" fill="rgb(248,164,17)" fg:x="10419" fg:w="17"/><text x="13.9143%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (395 samples, 0.52%)</title><rect x="13.1725%" y="517" width="0.5180%" height="15" fill="rgb(222,171,42)" fg:x="10044" fg:w="395"/><text x="13.4225%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (399 samples, 0.52%)</title><rect x="13.1725%" y="533" width="0.5233%" height="15" fill="rgb(243,84,45)" fg:x="10044" fg:w="399"/><text x="13.4225%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (34 samples, 0.04%)</title><rect x="13.7574%" y="501" width="0.0446%" height="15" fill="rgb(252,49,23)" fg:x="10490" fg:w="34"/><text x="14.0074%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="13.7770%" y="485" width="0.0249%" height="15" fill="rgb(215,19,7)" fg:x="10505" fg:w="19"/><text x="14.0270%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (88 samples, 0.12%)</title><rect x="13.6957%" y="533" width="0.1154%" height="15" fill="rgb(238,81,41)" fg:x="10443" fg:w="88"/><text x="13.9457%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (84 samples, 0.11%)</title><rect x="13.7010%" y="517" width="0.1102%" height="15" fill="rgb(210,199,37)" fg:x="10447" fg:w="84"/><text x="13.9510%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.01%)</title><rect x="13.8111%" y="533" width="0.0118%" height="15" fill="rgb(244,192,49)" fg:x="10531" fg:w="9"/><text x="14.0611%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="13.8125%" y="517" width="0.0105%" height="15" fill="rgb(226,211,11)" fg:x="10532" fg:w="8"/><text x="14.0625%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (521 samples, 0.68%)</title><rect x="13.1502%" y="549" width="0.6833%" height="15" fill="rgb(236,162,54)" fg:x="10027" fg:w="521"/><text x="13.4002%" y="559.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="13.8230%" y="533" width="0.0105%" height="15" fill="rgb(220,229,9)" fg:x="10540" fg:w="8"/><text x="14.0730%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (14 samples, 0.02%)</title><rect x="13.8374%" y="549" width="0.0184%" height="15" fill="rgb(250,87,22)" fg:x="10551" fg:w="14"/><text x="14.0874%" y="559.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (12 samples, 0.02%)</title><rect x="13.8400%" y="533" width="0.0157%" height="15" fill="rgb(239,43,17)" fg:x="10553" fg:w="12"/><text x="14.0900%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (37 samples, 0.05%)</title><rect x="14.2164%" y="469" width="0.0485%" height="15" fill="rgb(231,177,25)" fg:x="10840" fg:w="37"/><text x="14.4664%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="14.2282%" y="453" width="0.0367%" height="15" fill="rgb(219,179,1)" fg:x="10849" fg:w="28"/><text x="14.4782%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (136 samples, 0.18%)</title><rect x="14.0997%" y="501" width="0.1784%" height="15" fill="rgb(238,219,53)" fg:x="10751" fg:w="136"/><text x="14.3497%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (127 samples, 0.17%)</title><rect x="14.1115%" y="485" width="0.1666%" height="15" fill="rgb(232,167,36)" fg:x="10760" fg:w="127"/><text x="14.3615%" y="495.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.01%)</title><rect x="14.2649%" y="469" width="0.0131%" height="15" fill="rgb(244,19,51)" fg:x="10877" fg:w="10"/><text x="14.5149%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.01%)</title><rect x="14.2675%" y="453" width="0.0105%" height="15" fill="rgb(224,6,22)" fg:x="10879" fg:w="8"/><text x="14.5175%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (12 samples, 0.02%)</title><rect x="14.3357%" y="485" width="0.0157%" height="15" fill="rgb(224,145,5)" fg:x="10931" fg:w="12"/><text x="14.5857%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (327 samples, 0.43%)</title><rect x="13.9239%" y="517" width="0.4289%" height="15" fill="rgb(234,130,49)" fg:x="10617" fg:w="327"/><text x="14.1739%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (57 samples, 0.07%)</title><rect x="14.2780%" y="501" width="0.0748%" height="15" fill="rgb(254,6,2)" fg:x="10887" fg:w="57"/><text x="14.5280%" y="511.50"></text></g><g><title>_int_free (60 samples, 0.08%)</title><rect x="14.4669%" y="453" width="0.0787%" height="15" fill="rgb(208,96,46)" fg:x="11031" fg:w="60"/><text x="14.7169%" y="463.50"></text></g><g><title>malloc_consolidate (8 samples, 0.01%)</title><rect x="14.5351%" y="437" width="0.0105%" height="15" fill="rgb(239,3,39)" fg:x="11083" fg:w="8"/><text x="14.7851%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (121 samples, 0.16%)</title><rect x="14.3921%" y="485" width="0.1587%" height="15" fill="rgb(233,210,1)" fg:x="10974" fg:w="121"/><text x="14.6421%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (91 samples, 0.12%)</title><rect x="14.4315%" y="469" width="0.1193%" height="15" fill="rgb(244,137,37)" fg:x="11004" fg:w="91"/><text x="14.6815%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="14.6243%" y="469" width="0.0118%" height="15" fill="rgb(240,136,2)" fg:x="11151" fg:w="9"/><text x="14.8743%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (128 samples, 0.17%)</title><rect x="14.6361%" y="453" width="0.1679%" height="15" fill="rgb(239,18,37)" fg:x="11160" fg:w="128"/><text x="14.8861%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (129 samples, 0.17%)</title><rect x="14.6361%" y="469" width="0.1692%" height="15" fill="rgb(218,185,22)" fg:x="11160" fg:w="129"/><text x="14.8861%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;: 2]&gt; (735 samples, 0.96%)</title><rect x="13.8557%" y="549" width="0.9639%" height="15" fill="rgb(225,218,4)" fg:x="10565" fg:w="735"/><text x="14.1057%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (691 samples, 0.91%)</title><rect x="13.9134%" y="533" width="0.9062%" height="15" fill="rgb(230,182,32)" fg:x="10609" fg:w="691"/><text x="14.1634%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (356 samples, 0.47%)</title><rect x="14.3528%" y="517" width="0.4669%" height="15" fill="rgb(242,56,43)" fg:x="10944" fg:w="356"/><text x="14.6028%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (350 samples, 0.46%)</title><rect x="14.3607%" y="501" width="0.4590%" height="15" fill="rgb(233,99,24)" fg:x="10950" fg:w="350"/><text x="14.6107%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (205 samples, 0.27%)</title><rect x="14.5508%" y="485" width="0.2689%" height="15" fill="rgb(234,209,42)" fg:x="11095" fg:w="205"/><text x="14.8008%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (8 samples, 0.01%)</title><rect x="14.8092%" y="469" width="0.0105%" height="15" fill="rgb(227,7,12)" fg:x="11292" fg:w="8"/><text x="15.0592%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (60 samples, 0.08%)</title><rect x="14.9089%" y="469" width="0.0787%" height="15" fill="rgb(245,203,43)" fg:x="11368" fg:w="60"/><text x="15.1589%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (44 samples, 0.06%)</title><rect x="14.9298%" y="453" width="0.0577%" height="15" fill="rgb(238,205,33)" fg:x="11384" fg:w="44"/><text x="15.1798%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (124 samples, 0.16%)</title><rect x="14.8393%" y="501" width="0.1626%" height="15" fill="rgb(231,56,7)" fg:x="11315" fg:w="124"/><text x="15.0893%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (120 samples, 0.16%)</title><rect x="14.8446%" y="485" width="0.1574%" height="15" fill="rgb(244,186,29)" fg:x="11319" fg:w="120"/><text x="15.0946%" y="495.50"></text></g><g><title>core::ptr::null_mut (11 samples, 0.01%)</title><rect x="14.9875%" y="469" width="0.0144%" height="15" fill="rgb(234,111,31)" fg:x="11428" fg:w="11"/><text x="15.2375%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (128 samples, 0.17%)</title><rect x="14.8380%" y="517" width="0.1679%" height="15" fill="rgb(241,149,10)" fg:x="11314" fg:w="128"/><text x="15.0880%" y="527.50"></text></g><g><title>_int_free (79 samples, 0.10%)</title><rect x="15.1200%" y="453" width="0.1036%" height="15" fill="rgb(249,206,44)" fg:x="11529" fg:w="79"/><text x="15.3700%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (140 samples, 0.18%)</title><rect x="15.0452%" y="485" width="0.1836%" height="15" fill="rgb(251,153,30)" fg:x="11472" fg:w="140"/><text x="15.2952%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (111 samples, 0.15%)</title><rect x="15.0833%" y="469" width="0.1456%" height="15" fill="rgb(239,152,38)" fg:x="11501" fg:w="111"/><text x="15.3333%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (10 samples, 0.01%)</title><rect x="15.5069%" y="437" width="0.0131%" height="15" fill="rgb(249,139,47)" fg:x="11824" fg:w="10"/><text x="15.7569%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (159 samples, 0.21%)</title><rect x="15.3128%" y="453" width="0.2085%" height="15" fill="rgb(244,64,35)" fg:x="11676" fg:w="159"/><text x="15.5628%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (164 samples, 0.22%)</title><rect x="15.3089%" y="469" width="0.2151%" height="15" fill="rgb(216,46,15)" fg:x="11673" fg:w="164"/><text x="15.5589%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (546 samples, 0.72%)</title><rect x="14.8197%" y="549" width="0.7161%" height="15" fill="rgb(250,74,19)" fg:x="11300" fg:w="546"/><text x="15.0697%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (537 samples, 0.70%)</title><rect x="14.8315%" y="533" width="0.7043%" height="15" fill="rgb(249,42,33)" fg:x="11309" fg:w="537"/><text x="15.0815%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (404 samples, 0.53%)</title><rect x="15.0059%" y="517" width="0.5298%" height="15" fill="rgb(242,149,17)" fg:x="11442" fg:w="404"/><text x="15.2559%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (398 samples, 0.52%)</title><rect x="15.0138%" y="501" width="0.5220%" height="15" fill="rgb(244,29,21)" fg:x="11448" fg:w="398"/><text x="15.2638%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (234 samples, 0.31%)</title><rect x="15.2289%" y="485" width="0.3069%" height="15" fill="rgb(220,130,37)" fg:x="11612" fg:w="234"/><text x="15.4789%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (65 samples, 0.09%)</title><rect x="15.7325%" y="501" width="0.0852%" height="15" fill="rgb(211,67,2)" fg:x="11996" fg:w="65"/><text x="15.9825%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (255 samples, 0.33%)</title><rect x="15.5357%" y="549" width="0.3344%" height="15" fill="rgb(235,68,52)" fg:x="11846" fg:w="255"/><text x="15.7857%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (254 samples, 0.33%)</title><rect x="15.5370%" y="533" width="0.3331%" height="15" fill="rgb(246,142,3)" fg:x="11847" fg:w="254"/><text x="15.7870%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (197 samples, 0.26%)</title><rect x="15.6118%" y="517" width="0.2584%" height="15" fill="rgb(241,25,7)" fg:x="11904" fg:w="197"/><text x="15.8618%" y="527.50"></text></g><g><title>core::ptr::null (40 samples, 0.05%)</title><rect x="15.8177%" y="501" width="0.0525%" height="15" fill="rgb(242,119,39)" fg:x="12061" fg:w="40"/><text x="16.0677%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (34 samples, 0.04%)</title><rect x="15.8256%" y="485" width="0.0446%" height="15" fill="rgb(241,98,45)" fg:x="12067" fg:w="34"/><text x="16.0756%" y="495.50"></text></g><g><title>day1::day16_part2::Player::open (19 samples, 0.02%)</title><rect x="15.8702%" y="549" width="0.0249%" height="15" fill="rgb(254,28,30)" fg:x="12101" fg:w="19"/><text x="16.1202%" y="559.50"></text></g><g><title>day1::day16_part2::Valve::is_used (29 samples, 0.04%)</title><rect x="15.8951%" y="549" width="0.0380%" height="15" fill="rgb(241,142,54)" fg:x="12120" fg:w="29"/><text x="16.1451%" y="559.50"></text></g><g><title>day1::day16_part2::check_bit (13 samples, 0.02%)</title><rect x="15.9161%" y="533" width="0.0170%" height="15" fill="rgb(222,85,15)" fg:x="12136" fg:w="13"/><text x="16.1661%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="16.3030%" y="469" width="0.0262%" height="15" fill="rgb(210,85,47)" fg:x="12431" fg:w="20"/><text x="16.5530%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="16.3095%" y="453" width="0.0197%" height="15" fill="rgb(224,206,25)" fg:x="12436" fg:w="15"/><text x="16.5595%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (40 samples, 0.05%)</title><rect x="16.2846%" y="501" width="0.0525%" height="15" fill="rgb(243,201,19)" fg:x="12417" fg:w="40"/><text x="16.5346%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (40 samples, 0.05%)</title><rect x="16.2846%" y="485" width="0.0525%" height="15" fill="rgb(236,59,4)" fg:x="12417" fg:w="40"/><text x="16.5346%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.06%)</title><rect x="16.2833%" y="517" width="0.0564%" height="15" fill="rgb(254,179,45)" fg:x="12416" fg:w="43"/><text x="16.5333%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="16.3803%" y="469" width="0.0131%" height="15" fill="rgb(226,14,10)" fg:x="12490" fg:w="10"/><text x="16.6303%" y="479.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (91 samples, 0.12%)</title><rect x="16.2807%" y="533" width="0.1193%" height="15" fill="rgb(244,27,41)" fg:x="12414" fg:w="91"/><text x="16.5307%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (46 samples, 0.06%)</title><rect x="16.3397%" y="517" width="0.0603%" height="15" fill="rgb(235,35,32)" fg:x="12459" fg:w="46"/><text x="16.5897%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (46 samples, 0.06%)</title><rect x="16.3397%" y="501" width="0.0603%" height="15" fill="rgb(218,68,31)" fg:x="12459" fg:w="46"/><text x="16.5897%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (30 samples, 0.04%)</title><rect x="16.3607%" y="485" width="0.0393%" height="15" fill="rgb(207,120,37)" fg:x="12475" fg:w="30"/><text x="16.6107%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (26 samples, 0.03%)</title><rect x="16.4341%" y="501" width="0.0341%" height="15" fill="rgb(227,98,0)" fg:x="12531" fg:w="26"/><text x="16.6841%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.02%)</title><rect x="16.4984%" y="485" width="0.0170%" height="15" fill="rgb(207,7,3)" fg:x="12580" fg:w="13"/><text x="16.7484%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="16.5023%" y="469" width="0.0131%" height="15" fill="rgb(206,98,19)" fg:x="12583" fg:w="10"/><text x="16.7523%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (41 samples, 0.05%)</title><rect x="16.4682%" y="501" width="0.0538%" height="15" fill="rgb(217,5,26)" fg:x="12557" fg:w="41"/><text x="16.7182%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.13%)</title><rect x="16.4026%" y="533" width="0.1272%" height="15" fill="rgb(235,190,38)" fg:x="12507" fg:w="97"/><text x="16.6526%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.11%)</title><rect x="16.4210%" y="517" width="0.1089%" height="15" fill="rgb(247,86,24)" fg:x="12521" fg:w="83"/><text x="16.6710%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="16.9010%" y="421" width="0.0289%" height="15" fill="rgb(205,101,16)" fg:x="12887" fg:w="22"/><text x="17.1510%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (134 samples, 0.18%)</title><rect x="16.7751%" y="437" width="0.1757%" height="15" fill="rgb(246,168,33)" fg:x="12791" fg:w="134"/><text x="17.0251%" y="447.50"></text></g><g><title>core::ptr::null (16 samples, 0.02%)</title><rect x="16.9298%" y="421" width="0.0210%" height="15" fill="rgb(231,114,1)" fg:x="12909" fg:w="16"/><text x="17.1798%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.01%)</title><rect x="16.9364%" y="405" width="0.0144%" height="15" fill="rgb(207,184,53)" fg:x="12914" fg:w="11"/><text x="17.1864%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (127 samples, 0.17%)</title><rect x="17.1698%" y="421" width="0.1666%" height="15" fill="rgb(224,95,51)" fg:x="13092" fg:w="127"/><text x="17.4198%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (83 samples, 0.11%)</title><rect x="17.2275%" y="405" width="0.1089%" height="15" fill="rgb(212,188,45)" fg:x="13136" fg:w="83"/><text x="17.4775%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (10 samples, 0.01%)</title><rect x="17.3364%" y="405" width="0.0131%" height="15" fill="rgb(223,154,38)" fg:x="13219" fg:w="10"/><text x="17.5864%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (329 samples, 0.43%)</title><rect x="16.9508%" y="437" width="0.4315%" height="15" fill="rgb(251,22,52)" fg:x="12925" fg:w="329"/><text x="17.2008%" y="447.50"></text></g><g><title>core::ptr::null_mut (35 samples, 0.05%)</title><rect x="17.3364%" y="421" width="0.0459%" height="15" fill="rgb(229,209,22)" fg:x="13219" fg:w="35"/><text x="17.5864%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (25 samples, 0.03%)</title><rect x="17.3495%" y="405" width="0.0328%" height="15" fill="rgb(234,138,34)" fg:x="13229" fg:w="25"/><text x="17.5995%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (525 samples, 0.69%)</title><rect x="16.7148%" y="453" width="0.6885%" height="15" fill="rgb(212,95,11)" fg:x="12745" fg:w="525"/><text x="16.9648%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (16 samples, 0.02%)</title><rect x="17.3823%" y="437" width="0.0210%" height="15" fill="rgb(240,179,47)" fg:x="13254" fg:w="16"/><text x="17.6323%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (97 samples, 0.13%)</title><rect x="17.5292%" y="437" width="0.1272%" height="15" fill="rgb(240,163,11)" fg:x="13366" fg:w="97"/><text x="17.7792%" y="447.50"></text></g><g><title>day1::day16_part2::bt::{{closure}} (64 samples, 0.08%)</title><rect x="17.5725%" y="421" width="0.0839%" height="15" fill="rgb(236,37,12)" fg:x="13399" fg:w="64"/><text x="17.8225%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (48 samples, 0.06%)</title><rect x="17.5934%" y="405" width="0.0630%" height="15" fill="rgb(232,164,16)" fg:x="13415" fg:w="48"/><text x="17.8434%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (23 samples, 0.03%)</title><rect x="17.6262%" y="389" width="0.0302%" height="15" fill="rgb(244,205,15)" fg:x="13440" fg:w="23"/><text x="17.8762%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (896 samples, 1.18%)</title><rect x="16.5298%" y="533" width="1.1751%" height="15" fill="rgb(223,117,47)" fg:x="12604" fg:w="896"/><text x="16.7798%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (878 samples, 1.15%)</title><rect x="16.5534%" y="517" width="1.1515%" height="15" fill="rgb(244,107,35)" fg:x="12622" fg:w="878"/><text x="16.8034%" y="527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (877 samples, 1.15%)</title><rect x="16.5548%" y="501" width="1.1502%" height="15" fill="rgb(205,140,8)" fg:x="12623" fg:w="877"/><text x="16.8048%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (871 samples, 1.14%)</title><rect x="16.5626%" y="485" width="1.1423%" height="15" fill="rgb(228,84,46)" fg:x="12629" fg:w="871"/><text x="16.8126%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (836 samples, 1.10%)</title><rect x="16.6085%" y="469" width="1.0964%" height="15" fill="rgb(254,188,9)" fg:x="12664" fg:w="836"/><text x="16.8585%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (229 samples, 0.30%)</title><rect x="17.4046%" y="453" width="0.3003%" height="15" fill="rgb(206,112,54)" fg:x="13271" fg:w="229"/><text x="17.6546%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (37 samples, 0.05%)</title><rect x="17.6564%" y="437" width="0.0485%" height="15" fill="rgb(216,84,49)" fg:x="13463" fg:w="37"/><text x="17.9064%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.03%)</title><rect x="17.8584%" y="501" width="0.0302%" height="15" fill="rgb(214,194,35)" fg:x="13617" fg:w="23"/><text x="18.1084%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (120 samples, 0.16%)</title><rect x="17.7482%" y="517" width="0.1574%" height="15" fill="rgb(249,28,3)" fg:x="13533" fg:w="120"/><text x="17.9982%" y="527.50"></text></g><g><title>core::ptr::null (13 samples, 0.02%)</title><rect x="17.8885%" y="501" width="0.0170%" height="15" fill="rgb(222,56,52)" fg:x="13640" fg:w="13"/><text x="18.1385%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (64 samples, 0.08%)</title><rect x="18.0564%" y="501" width="0.0839%" height="15" fill="rgb(245,217,50)" fg:x="13768" fg:w="64"/><text x="18.3064%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (24 samples, 0.03%)</title><rect x="18.1089%" y="485" width="0.0315%" height="15" fill="rgb(213,201,24)" fg:x="13808" fg:w="24"/><text x="18.3589%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (189 samples, 0.25%)</title><rect x="17.9056%" y="517" width="0.2479%" height="15" fill="rgb(248,116,28)" fg:x="13653" fg:w="189"/><text x="18.1556%" y="527.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.01%)</title><rect x="18.1403%" y="501" width="0.0131%" height="15" fill="rgb(219,72,43)" fg:x="13832" fg:w="10"/><text x="18.3903%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.01%)</title><rect x="18.1430%" y="485" width="0.0105%" height="15" fill="rgb(209,138,14)" fg:x="13834" fg:w="8"/><text x="18.3930%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="18.1652%" y="501" width="0.0105%" height="15" fill="rgb(222,18,33)" fg:x="13851" fg:w="8"/><text x="18.4152%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (355 samples, 0.47%)</title><rect x="17.7115%" y="533" width="0.4656%" height="15" fill="rgb(213,199,7)" fg:x="13505" fg:w="355"/><text x="17.9615%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (18 samples, 0.02%)</title><rect x="18.1534%" y="517" width="0.0236%" height="15" fill="rgb(250,110,10)" fg:x="13842" fg:w="18"/><text x="18.4034%" y="527.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="18.2203%" y="469" width="0.0197%" height="15" fill="rgb(248,123,6)" fg:x="13893" fg:w="15"/><text x="18.4703%" y="479.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="18.2151%" y="485" width="0.0262%" height="15" fill="rgb(206,91,31)" fg:x="13889" fg:w="20"/><text x="18.4651%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.02%)</title><rect x="18.2820%" y="453" width="0.0223%" height="15" fill="rgb(211,154,13)" fg:x="13940" fg:w="17"/><text x="18.5320%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.01%)</title><rect x="18.2898%" y="437" width="0.0144%" height="15" fill="rgb(225,148,7)" fg:x="13946" fg:w="11"/><text x="18.5398%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (55 samples, 0.07%)</title><rect x="18.2452%" y="485" width="0.0721%" height="15" fill="rgb(220,160,43)" fg:x="13912" fg:w="55"/><text x="18.4952%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (48 samples, 0.06%)</title><rect x="18.2544%" y="469" width="0.0630%" height="15" fill="rgb(213,52,39)" fg:x="13919" fg:w="48"/><text x="18.5044%" y="479.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.01%)</title><rect x="18.3043%" y="453" width="0.0131%" height="15" fill="rgb(243,137,7)" fg:x="13957" fg:w="10"/><text x="18.5543%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (100 samples, 0.13%)</title><rect x="18.1915%" y="517" width="0.1311%" height="15" fill="rgb(230,79,13)" fg:x="13871" fg:w="100"/><text x="18.4415%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (99 samples, 0.13%)</title><rect x="18.1928%" y="501" width="0.1298%" height="15" fill="rgb(247,105,23)" fg:x="13872" fg:w="99"/><text x="18.4428%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (112 samples, 0.15%)</title><rect x="18.1770%" y="533" width="0.1469%" height="15" fill="rgb(223,179,41)" fg:x="13860" fg:w="112"/><text x="18.4270%" y="543.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (8 samples, 0.01%)</title><rect x="18.3528%" y="469" width="0.0105%" height="15" fill="rgb(218,9,34)" fg:x="13994" fg:w="8"/><text x="18.6028%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (23 samples, 0.03%)</title><rect x="18.3357%" y="485" width="0.0302%" height="15" fill="rgb(222,106,8)" fg:x="13981" fg:w="23"/><text x="18.5857%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (28 samples, 0.04%)</title><rect x="18.3305%" y="501" width="0.0367%" height="15" fill="rgb(211,220,0)" fg:x="13977" fg:w="28"/><text x="18.5805%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (48 samples, 0.06%)</title><rect x="18.3239%" y="533" width="0.0630%" height="15" fill="rgb(229,52,16)" fg:x="13972" fg:w="48"/><text x="18.5739%" y="543.50"></text></g><g><title>alloc::slice::hack::into_vec (48 samples, 0.06%)</title><rect x="18.3239%" y="517" width="0.0630%" height="15" fill="rgb(212,155,18)" fg:x="13972" fg:w="48"/><text x="18.5739%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (15 samples, 0.02%)</title><rect x="18.3672%" y="501" width="0.0197%" height="15" fill="rgb(242,21,14)" fg:x="14005" fg:w="15"/><text x="18.6172%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (10 samples, 0.01%)</title><rect x="18.3738%" y="485" width="0.0131%" height="15" fill="rgb(222,19,48)" fg:x="14010" fg:w="10"/><text x="18.6238%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="18.3974%" y="485" width="0.0157%" height="15" fill="rgb(232,45,27)" fg:x="14028" fg:w="12"/><text x="18.6474%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.01%)</title><rect x="18.4000%" y="469" width="0.0131%" height="15" fill="rgb(249,103,42)" fg:x="14030" fg:w="10"/><text x="18.6500%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.01%)</title><rect x="18.4000%" y="453" width="0.0131%" height="15" fill="rgb(246,81,33)" fg:x="14030" fg:w="10"/><text x="18.6500%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.03%)</title><rect x="18.3895%" y="517" width="0.0341%" height="15" fill="rgb(252,33,42)" fg:x="14022" fg:w="26"/><text x="18.6395%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.03%)</title><rect x="18.3895%" y="501" width="0.0341%" height="15" fill="rgb(209,212,41)" fg:x="14022" fg:w="26"/><text x="18.6395%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.04%)</title><rect x="18.3869%" y="533" width="0.0393%" height="15" fill="rgb(207,154,6)" fg:x="14020" fg:w="30"/><text x="18.6369%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (13 samples, 0.02%)</title><rect x="18.4289%" y="533" width="0.0170%" height="15" fill="rgb(223,64,47)" fg:x="14052" fg:w="13"/><text x="18.6789%" y="543.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (8 samples, 0.01%)</title><rect x="18.4354%" y="517" width="0.0105%" height="15" fill="rgb(211,161,38)" fg:x="14057" fg:w="8"/><text x="18.6854%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.02%)</title><rect x="18.5482%" y="453" width="0.0184%" height="15" fill="rgb(219,138,40)" fg:x="14143" fg:w="14"/><text x="18.7982%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (12 samples, 0.02%)</title><rect x="18.5508%" y="437" width="0.0157%" height="15" fill="rgb(241,228,46)" fg:x="14145" fg:w="12"/><text x="18.8008%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (38 samples, 0.05%)</title><rect x="18.5259%" y="485" width="0.0498%" height="15" fill="rgb(223,209,38)" fg:x="14126" fg:w="38"/><text x="18.7759%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (37 samples, 0.05%)</title><rect x="18.5272%" y="469" width="0.0485%" height="15" fill="rgb(236,164,45)" fg:x="14127" fg:w="37"/><text x="18.7772%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.13%)</title><rect x="18.4748%" y="501" width="0.1298%" height="15" fill="rgb(231,15,5)" fg:x="14087" fg:w="99"/><text x="18.7248%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (22 samples, 0.03%)</title><rect x="18.5757%" y="485" width="0.0289%" height="15" fill="rgb(252,35,15)" fg:x="14164" fg:w="22"/><text x="18.8257%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.04%)</title><rect x="18.6151%" y="469" width="0.0393%" height="15" fill="rgb(248,181,18)" fg:x="14194" fg:w="30"/><text x="18.8651%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.03%)</title><rect x="18.6256%" y="453" width="0.0289%" height="15" fill="rgb(233,39,42)" fg:x="14202" fg:w="22"/><text x="18.8756%" y="463.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="18.6374%" y="437" width="0.0170%" height="15" fill="rgb(238,110,33)" fg:x="14211" fg:w="13"/><text x="18.8874%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (31 samples, 0.04%)</title><rect x="18.6728%" y="453" width="0.0407%" height="15" fill="rgb(233,195,10)" fg:x="14238" fg:w="31"/><text x="18.9228%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (31 samples, 0.04%)</title><rect x="18.6728%" y="437" width="0.0407%" height="15" fill="rgb(254,105,3)" fg:x="14238" fg:w="31"/><text x="18.9228%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;: 2]&gt; (206 samples, 0.27%)</title><rect x="18.4459%" y="533" width="0.2702%" height="15" fill="rgb(221,225,9)" fg:x="14065" fg:w="206"/><text x="18.6959%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (186 samples, 0.24%)</title><rect x="18.4721%" y="517" width="0.2439%" height="15" fill="rgb(224,227,45)" fg:x="14085" fg:w="186"/><text x="18.7221%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (85 samples, 0.11%)</title><rect x="18.6046%" y="501" width="0.1115%" height="15" fill="rgb(229,198,43)" fg:x="14186" fg:w="85"/><text x="18.8546%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.11%)</title><rect x="18.6046%" y="485" width="0.1115%" height="15" fill="rgb(206,209,35)" fg:x="14186" fg:w="85"/><text x="18.8546%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (47 samples, 0.06%)</title><rect x="18.6544%" y="469" width="0.0616%" height="15" fill="rgb(245,195,53)" fg:x="14224" fg:w="47"/><text x="18.9044%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="18.7515%" y="453" width="0.0367%" height="15" fill="rgb(240,92,26)" fg:x="14298" fg:w="28"/><text x="19.0015%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="18.7607%" y="437" width="0.0275%" height="15" fill="rgb(207,40,23)" fg:x="14305" fg:w="21"/><text x="19.0107%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (49 samples, 0.06%)</title><rect x="18.7252%" y="485" width="0.0643%" height="15" fill="rgb(223,111,35)" fg:x="14278" fg:w="49"/><text x="18.9752%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (49 samples, 0.06%)</title><rect x="18.7252%" y="469" width="0.0643%" height="15" fill="rgb(229,147,28)" fg:x="14278" fg:w="49"/><text x="18.9752%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.07%)</title><rect x="18.7239%" y="501" width="0.0695%" height="15" fill="rgb(211,29,28)" fg:x="14277" fg:w="53"/><text x="18.9739%" y="511.50"></text></g><g><title>_int_free (39 samples, 0.05%)</title><rect x="18.8603%" y="437" width="0.0511%" height="15" fill="rgb(228,72,33)" fg:x="14381" fg:w="39"/><text x="19.1103%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 0.08%)</title><rect x="18.8302%" y="469" width="0.0826%" height="15" fill="rgb(205,214,31)" fg:x="14358" fg:w="63"/><text x="19.0802%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (53 samples, 0.07%)</title><rect x="18.8433%" y="453" width="0.0695%" height="15" fill="rgb(224,111,15)" fg:x="14368" fg:w="53"/><text x="19.0933%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (75 samples, 0.10%)</title><rect x="18.9534%" y="453" width="0.0984%" height="15" fill="rgb(253,21,26)" fg:x="14452" fg:w="75"/><text x="19.2034%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (71 samples, 0.09%)</title><rect x="18.9587%" y="437" width="0.0931%" height="15" fill="rgb(245,139,43)" fg:x="14456" fg:w="71"/><text x="19.2087%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (262 samples, 0.34%)</title><rect x="18.7161%" y="533" width="0.3436%" height="15" fill="rgb(252,170,7)" fg:x="14271" fg:w="262"/><text x="18.9661%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (257 samples, 0.34%)</title><rect x="18.7226%" y="517" width="0.3370%" height="15" fill="rgb(231,118,14)" fg:x="14276" fg:w="257"/><text x="18.9726%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (203 samples, 0.27%)</title><rect x="18.7934%" y="501" width="0.2662%" height="15" fill="rgb(238,83,0)" fg:x="14330" fg:w="203"/><text x="19.0434%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (192 samples, 0.25%)</title><rect x="18.8079%" y="485" width="0.2518%" height="15" fill="rgb(221,39,39)" fg:x="14341" fg:w="192"/><text x="19.0579%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (112 samples, 0.15%)</title><rect x="18.9128%" y="469" width="0.1469%" height="15" fill="rgb(222,119,46)" fg:x="14421" fg:w="112"/><text x="19.1628%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.04%)</title><rect x="19.1751%" y="485" width="0.0433%" height="15" fill="rgb(222,165,49)" fg:x="14621" fg:w="33"/><text x="19.4251%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (119 samples, 0.16%)</title><rect x="19.0911%" y="501" width="0.1561%" height="15" fill="rgb(219,113,52)" fg:x="14557" fg:w="119"/><text x="19.3411%" y="511.50"></text></g><g><title>core::ptr::null (22 samples, 0.03%)</title><rect x="19.2184%" y="485" width="0.0289%" height="15" fill="rgb(214,7,15)" fg:x="14654" fg:w="22"/><text x="19.4684%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.02%)</title><rect x="19.2236%" y="469" width="0.0236%" height="15" fill="rgb(235,32,4)" fg:x="14658" fg:w="18"/><text x="19.4736%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (144 samples, 0.19%)</title><rect x="19.0597%" y="533" width="0.1889%" height="15" fill="rgb(238,90,54)" fg:x="14533" fg:w="144"/><text x="19.3097%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (142 samples, 0.19%)</title><rect x="19.0623%" y="517" width="0.1862%" height="15" fill="rgb(213,208,19)" fg:x="14535" fg:w="142"/><text x="19.3123%" y="527.50"></text></g><g><title>day1::day16_part2::Valve::is_used (10 samples, 0.01%)</title><rect x="19.2511%" y="533" width="0.0131%" height="15" fill="rgb(233,156,4)" fg:x="14679" fg:w="10"/><text x="19.5011%" y="543.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.01%)</title><rect x="19.2826%" y="517" width="0.0105%" height="15" fill="rgb(207,194,5)" fg:x="14703" fg:w="8"/><text x="19.5326%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="19.2931%" y="517" width="0.0131%" height="15" fill="rgb(206,111,30)" fg:x="14711" fg:w="10"/><text x="19.5431%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="19.2944%" y="501" width="0.0118%" height="15" fill="rgb(243,70,54)" fg:x="14712" fg:w="9"/><text x="19.5444%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (16 samples, 0.02%)</title><rect x="19.3469%" y="421" width="0.0210%" height="15" fill="rgb(242,28,8)" fg:x="14752" fg:w="16"/><text x="19.5969%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (26 samples, 0.03%)</title><rect x="19.3679%" y="421" width="0.0341%" height="15" fill="rgb(219,106,18)" fg:x="14768" fg:w="26"/><text x="19.6179%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.07%)</title><rect x="19.3377%" y="437" width="0.0656%" height="15" fill="rgb(244,222,10)" fg:x="14745" fg:w="50"/><text x="19.5877%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (15 samples, 0.02%)</title><rect x="19.4177%" y="421" width="0.0197%" height="15" fill="rgb(236,179,52)" fg:x="14806" fg:w="15"/><text x="19.6677%" y="431.50"></text></g><g><title>day1::day16_part2::bt::{{closure}} (9 samples, 0.01%)</title><rect x="19.4256%" y="405" width="0.0118%" height="15" fill="rgb(213,23,39)" fg:x="14812" fg:w="9"/><text x="19.6756%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (101 samples, 0.13%)</title><rect x="19.3062%" y="517" width="0.1325%" height="15" fill="rgb(238,48,10)" fg:x="14721" fg:w="101"/><text x="19.5562%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (97 samples, 0.13%)</title><rect x="19.3115%" y="501" width="0.1272%" height="15" fill="rgb(251,196,23)" fg:x="14725" fg:w="97"/><text x="19.5615%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (97 samples, 0.13%)</title><rect x="19.3115%" y="485" width="0.1272%" height="15" fill="rgb(250,152,24)" fg:x="14725" fg:w="97"/><text x="19.5615%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96 samples, 0.13%)</title><rect x="19.3128%" y="469" width="0.1259%" height="15" fill="rgb(209,150,17)" fg:x="14726" fg:w="96"/><text x="19.5628%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (92 samples, 0.12%)</title><rect x="19.3180%" y="453" width="0.1207%" height="15" fill="rgb(234,202,34)" fg:x="14730" fg:w="92"/><text x="19.5680%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 0.03%)</title><rect x="19.4046%" y="437" width="0.0341%" height="15" fill="rgb(253,148,53)" fg:x="14796" fg:w="26"/><text x="19.6546%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.02%)</title><rect x="19.4492%" y="501" width="0.0210%" height="15" fill="rgb(218,129,16)" fg:x="14830" fg:w="16"/><text x="19.6992%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="19.4387%" y="517" width="0.0328%" height="15" fill="rgb(216,85,19)" fg:x="14822" fg:w="25"/><text x="19.6887%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.01%)</title><rect x="19.4715%" y="517" width="0.0118%" height="15" fill="rgb(235,228,7)" fg:x="14847" fg:w="9"/><text x="19.7215%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="19.4728%" y="501" width="0.0105%" height="15" fill="rgb(245,175,0)" fg:x="14848" fg:w="8"/><text x="19.7228%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="19.4728%" y="485" width="0.0105%" height="15" fill="rgb(208,168,36)" fg:x="14848" fg:w="8"/><text x="19.7228%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="19.4898%" y="485" width="0.0105%" height="15" fill="rgb(246,171,24)" fg:x="14861" fg:w="8"/><text x="19.7398%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;: 2]&gt; (11 samples, 0.01%)</title><rect x="19.4885%" y="517" width="0.0144%" height="15" fill="rgb(215,142,24)" fg:x="14860" fg:w="11"/><text x="19.7385%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="19.4898%" y="501" width="0.0131%" height="15" fill="rgb(250,187,7)" fg:x="14861" fg:w="10"/><text x="19.7398%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.01%)</title><rect x="19.5030%" y="517" width="0.0131%" height="15" fill="rgb(228,66,33)" fg:x="14871" fg:w="10"/><text x="19.7530%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="19.5043%" y="501" width="0.0118%" height="15" fill="rgb(234,215,21)" fg:x="14872" fg:w="9"/><text x="19.7543%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (21 samples, 0.03%)</title><rect x="19.5161%" y="517" width="0.0275%" height="15" fill="rgb(222,191,20)" fg:x="14881" fg:w="21"/><text x="19.7661%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (20 samples, 0.03%)</title><rect x="19.5174%" y="501" width="0.0262%" height="15" fill="rgb(245,79,54)" fg:x="14882" fg:w="20"/><text x="19.7674%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (17 samples, 0.02%)</title><rect x="19.5213%" y="485" width="0.0223%" height="15" fill="rgb(240,10,37)" fg:x="14885" fg:w="17"/><text x="19.7713%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (8 samples, 0.01%)</title><rect x="19.5449%" y="501" width="0.0105%" height="15" fill="rgb(214,192,32)" fg:x="14903" fg:w="8"/><text x="19.7949%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 0.01%)</title><rect x="19.5449%" y="485" width="0.0105%" height="15" fill="rgb(209,36,54)" fg:x="14903" fg:w="8"/><text x="19.7949%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.01%)</title><rect x="19.5449%" y="469" width="0.0105%" height="15" fill="rgb(220,10,11)" fg:x="14903" fg:w="8"/><text x="19.7949%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.01%)</title><rect x="19.5449%" y="453" width="0.0105%" height="15" fill="rgb(221,106,17)" fg:x="14903" fg:w="8"/><text x="19.7949%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.01%)</title><rect x="19.5449%" y="437" width="0.0105%" height="15" fill="rgb(251,142,44)" fg:x="14903" fg:w="8"/><text x="19.7949%" y="447.50"></text></g><g><title>day1::day16_part2::get_key (8 samples, 0.01%)</title><rect x="19.5646%" y="501" width="0.0105%" height="15" fill="rgb(238,13,15)" fg:x="14918" fg:w="8"/><text x="19.8146%" y="511.50"></text></g><g><title>day1::day16_part2::bt (29 samples, 0.04%)</title><rect x="19.5436%" y="517" width="0.0380%" height="15" fill="rgb(208,107,27)" fg:x="14902" fg:w="29"/><text x="19.7936%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="19.6066%" y="309" width="0.0105%" height="15" fill="rgb(205,136,37)" fg:x="14950" fg:w="8"/><text x="19.8566%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.04%)</title><rect x="19.5908%" y="389" width="0.0380%" height="15" fill="rgb(250,205,27)" fg:x="14938" fg:w="29"/><text x="19.8408%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="19.6000%" y="373" width="0.0289%" height="15" fill="rgb(210,80,43)" fg:x="14945" fg:w="22"/><text x="19.8500%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="19.6000%" y="357" width="0.0289%" height="15" fill="rgb(247,160,36)" fg:x="14945" fg:w="22"/><text x="19.8500%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.03%)</title><rect x="19.6026%" y="341" width="0.0262%" height="15" fill="rgb(234,13,49)" fg:x="14947" fg:w="20"/><text x="19.8526%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.03%)</title><rect x="19.6026%" y="325" width="0.0262%" height="15" fill="rgb(234,122,0)" fg:x="14947" fg:w="20"/><text x="19.8526%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.04%)</title><rect x="19.5908%" y="405" width="0.0407%" height="15" fill="rgb(207,146,38)" fg:x="14938" fg:w="31"/><text x="19.8408%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (38 samples, 0.05%)</title><rect x="19.5895%" y="453" width="0.0498%" height="15" fill="rgb(207,177,25)" fg:x="14937" fg:w="38"/><text x="19.8395%" y="463.50"></text></g><g><title>alloc::string::String::push_str (38 samples, 0.05%)</title><rect x="19.5895%" y="437" width="0.0498%" height="15" fill="rgb(211,178,42)" fg:x="14937" fg:w="38"/><text x="19.8395%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38 samples, 0.05%)</title><rect x="19.5895%" y="421" width="0.0498%" height="15" fill="rgb(230,69,54)" fg:x="14937" fg:w="38"/><text x="19.8395%" y="431.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (45 samples, 0.06%)</title><rect x="19.5816%" y="501" width="0.0590%" height="15" fill="rgb(214,135,41)" fg:x="14931" fg:w="45"/><text x="19.8316%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (40 samples, 0.05%)</title><rect x="19.5882%" y="485" width="0.0525%" height="15" fill="rgb(237,67,25)" fg:x="14936" fg:w="40"/><text x="19.8382%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (40 samples, 0.05%)</title><rect x="19.5882%" y="469" width="0.0525%" height="15" fill="rgb(222,189,50)" fg:x="14936" fg:w="40"/><text x="19.8382%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="19.6420%" y="501" width="0.0105%" height="15" fill="rgb(245,148,34)" fg:x="14977" fg:w="8"/><text x="19.8920%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="19.6761%" y="437" width="0.0197%" height="15" fill="rgb(222,29,6)" fg:x="15003" fg:w="15"/><text x="19.9261%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.01%)</title><rect x="19.6852%" y="421" width="0.0105%" height="15" fill="rgb(221,189,43)" fg:x="15010" fg:w="8"/><text x="19.9352%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="19.6748%" y="453" width="0.0302%" height="15" fill="rgb(207,36,27)" fg:x="15002" fg:w="23"/><text x="19.9248%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.01%)</title><rect x="19.7089%" y="437" width="0.0105%" height="15" fill="rgb(217,90,24)" fg:x="15028" fg:w="8"/><text x="19.9589%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="19.7089%" y="453" width="0.0118%" height="15" fill="rgb(224,66,35)" fg:x="15028" fg:w="9"/><text x="19.9589%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.01%)</title><rect x="19.7259%" y="405" width="0.0144%" height="15" fill="rgb(221,13,50)" fg:x="15041" fg:w="11"/><text x="19.9759%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.01%)</title><rect x="19.7272%" y="389" width="0.0131%" height="15" fill="rgb(236,68,49)" fg:x="15042" fg:w="10"/><text x="19.9772%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.02%)</title><rect x="19.7233%" y="421" width="0.0197%" height="15" fill="rgb(229,146,28)" fg:x="15039" fg:w="15"/><text x="19.9733%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="19.7233%" y="437" width="0.0223%" height="15" fill="rgb(225,31,38)" fg:x="15039" fg:w="17"/><text x="19.9733%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.03%)</title><rect x="19.7220%" y="453" width="0.0328%" height="15" fill="rgb(250,208,3)" fg:x="15038" fg:w="25"/><text x="19.9720%" y="463.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="19.7666%" y="357" width="0.0157%" height="15" fill="rgb(246,54,23)" fg:x="15072" fg:w="12"/><text x="20.0166%" y="367.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="19.7666%" y="341" width="0.0157%" height="15" fill="rgb(243,76,11)" fg:x="15072" fg:w="12"/><text x="20.0166%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.03%)</title><rect x="19.7626%" y="389" width="0.0275%" height="15" fill="rgb(245,21,50)" fg:x="15069" fg:w="21"/><text x="20.0126%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.03%)</title><rect x="19.7626%" y="373" width="0.0275%" height="15" fill="rgb(228,9,43)" fg:x="15069" fg:w="21"/><text x="20.0126%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.04%)</title><rect x="19.7561%" y="453" width="0.0380%" height="15" fill="rgb(208,100,47)" fg:x="15064" fg:w="29"/><text x="20.0061%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.04%)</title><rect x="19.7561%" y="437" width="0.0380%" height="15" fill="rgb(232,26,8)" fg:x="15064" fg:w="29"/><text x="20.0061%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.04%)</title><rect x="19.7561%" y="421" width="0.0380%" height="15" fill="rgb(216,166,38)" fg:x="15064" fg:w="29"/><text x="20.0061%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.04%)</title><rect x="19.7574%" y="405" width="0.0367%" height="15" fill="rgb(251,202,51)" fg:x="15065" fg:w="28"/><text x="20.0074%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.01%)</title><rect x="19.8059%" y="373" width="0.0105%" height="15" fill="rgb(254,216,34)" fg:x="15102" fg:w="8"/><text x="20.0559%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.02%)</title><rect x="19.8164%" y="373" width="0.0170%" height="15" fill="rgb(251,32,27)" fg:x="15110" fg:w="13"/><text x="20.0664%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.03%)</title><rect x="19.8046%" y="389" width="0.0302%" height="15" fill="rgb(208,127,28)" fg:x="15101" fg:w="23"/><text x="20.0546%" y="399.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (10 samples, 0.01%)</title><rect x="19.8387%" y="357" width="0.0131%" height="15" fill="rgb(224,137,22)" fg:x="15127" fg:w="10"/><text x="20.0887%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (10 samples, 0.01%)</title><rect x="19.8387%" y="341" width="0.0131%" height="15" fill="rgb(254,70,32)" fg:x="15127" fg:w="10"/><text x="20.0887%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="19.8387%" y="325" width="0.0131%" height="15" fill="rgb(229,75,37)" fg:x="15127" fg:w="10"/><text x="20.0887%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (10 samples, 0.01%)</title><rect x="19.8387%" y="309" width="0.0131%" height="15" fill="rgb(252,64,23)" fg:x="15127" fg:w="10"/><text x="20.0887%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.01%)</title><rect x="19.8400%" y="293" width="0.0118%" height="15" fill="rgb(232,162,48)" fg:x="15128" fg:w="9"/><text x="20.0900%" y="303.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="19.8374%" y="373" width="0.0157%" height="15" fill="rgb(246,160,12)" fg:x="15126" fg:w="12"/><text x="20.0874%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 0.06%)</title><rect x="19.7993%" y="421" width="0.0590%" height="15" fill="rgb(247,166,0)" fg:x="15097" fg:w="45"/><text x="20.0493%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.06%)</title><rect x="19.7993%" y="405" width="0.0590%" height="15" fill="rgb(249,219,21)" fg:x="15097" fg:w="45"/><text x="20.0493%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18 samples, 0.02%)</title><rect x="19.8348%" y="389" width="0.0236%" height="15" fill="rgb(205,209,3)" fg:x="15124" fg:w="18"/><text x="20.0848%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (50 samples, 0.07%)</title><rect x="19.7967%" y="453" width="0.0656%" height="15" fill="rgb(243,44,1)" fg:x="15095" fg:w="50"/><text x="20.0467%" y="463.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (48 samples, 0.06%)</title><rect x="19.7993%" y="437" width="0.0630%" height="15" fill="rgb(206,159,16)" fg:x="15097" fg:w="48"/><text x="20.0493%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.02%)</title><rect x="19.8636%" y="453" width="0.0157%" height="15" fill="rgb(244,77,30)" fg:x="15146" fg:w="12"/><text x="20.1136%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="19.8636%" y="437" width="0.0157%" height="15" fill="rgb(218,69,12)" fg:x="15146" fg:w="12"/><text x="20.1136%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (8 samples, 0.01%)</title><rect x="19.8793%" y="453" width="0.0105%" height="15" fill="rgb(212,87,7)" fg:x="15158" fg:w="8"/><text x="20.1293%" y="463.50"></text></g><g><title>alloc::str::join_generic_copy (176 samples, 0.23%)</title><rect x="19.6603%" y="469" width="0.2308%" height="15" fill="rgb(245,114,25)" fg:x="14991" fg:w="176"/><text x="19.9103%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (177 samples, 0.23%)</title><rect x="19.6603%" y="501" width="0.2321%" height="15" fill="rgb(210,61,42)" fg:x="14991" fg:w="177"/><text x="19.9103%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (177 samples, 0.23%)</title><rect x="19.6603%" y="485" width="0.2321%" height="15" fill="rgb(211,52,33)" fg:x="14991" fg:w="177"/><text x="19.9103%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.02%)</title><rect x="19.9043%" y="453" width="0.0170%" height="15" fill="rgb(234,58,33)" fg:x="15177" fg:w="13"/><text x="20.1543%" y="463.50"></text></g><g><title>core::cmp::PartialOrd::lt (12 samples, 0.02%)</title><rect x="19.9056%" y="437" width="0.0157%" height="15" fill="rgb(220,115,36)" fg:x="15178" fg:w="12"/><text x="20.1556%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (10 samples, 0.01%)</title><rect x="19.9082%" y="421" width="0.0131%" height="15" fill="rgb(243,153,54)" fg:x="15180" fg:w="10"/><text x="20.1582%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (10 samples, 0.01%)</title><rect x="19.9082%" y="405" width="0.0131%" height="15" fill="rgb(251,47,18)" fg:x="15180" fg:w="10"/><text x="20.1582%" y="415.50"></text></g><g><title>alloc::slice::insert_head (16 samples, 0.02%)</title><rect x="19.9030%" y="469" width="0.0210%" height="15" fill="rgb(242,102,42)" fg:x="15176" fg:w="16"/><text x="20.1530%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (30 samples, 0.04%)</title><rect x="19.8925%" y="501" width="0.0393%" height="15" fill="rgb(234,31,38)" fg:x="15168" fg:w="30"/><text x="20.1425%" y="511.50"></text></g><g><title>alloc::slice::merge_sort (30 samples, 0.04%)</title><rect x="19.8925%" y="485" width="0.0393%" height="15" fill="rgb(221,117,51)" fg:x="15168" fg:w="30"/><text x="20.1425%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.01%)</title><rect x="19.9423%" y="373" width="0.0105%" height="15" fill="rgb(212,20,18)" fg:x="15206" fg:w="8"/><text x="20.1923%" y="383.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.03%)</title><rect x="19.9633%" y="309" width="0.0262%" height="15" fill="rgb(245,133,36)" fg:x="15222" fg:w="20"/><text x="20.2133%" y="319.50"></text></g><g><title>_int_realloc (14 samples, 0.02%)</title><rect x="19.9711%" y="293" width="0.0184%" height="15" fill="rgb(212,6,19)" fg:x="15228" fg:w="14"/><text x="20.2211%" y="303.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.03%)</title><rect x="19.9633%" y="325" width="0.0275%" height="15" fill="rgb(218,1,36)" fg:x="15222" fg:w="21"/><text x="20.2133%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="19.9908%" y="325" width="0.0118%" height="15" fill="rgb(246,84,54)" fg:x="15243" fg:w="9"/><text x="20.2408%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.01%)</title><rect x="19.9921%" y="309" width="0.0105%" height="15" fill="rgb(242,110,6)" fg:x="15244" fg:w="8"/><text x="20.2421%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.05%)</title><rect x="19.9580%" y="373" width="0.0472%" height="15" fill="rgb(214,47,5)" fg:x="15218" fg:w="36"/><text x="20.2080%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.05%)</title><rect x="19.9580%" y="357" width="0.0472%" height="15" fill="rgb(218,159,25)" fg:x="15218" fg:w="36"/><text x="20.2080%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.05%)</title><rect x="19.9580%" y="341" width="0.0472%" height="15" fill="rgb(215,211,28)" fg:x="15218" fg:w="36"/><text x="20.2080%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (69 samples, 0.09%)</title><rect x="19.9318%" y="453" width="0.0905%" height="15" fill="rgb(238,59,32)" fg:x="15198" fg:w="69"/><text x="20.1818%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (62 samples, 0.08%)</title><rect x="19.9410%" y="437" width="0.0813%" height="15" fill="rgb(226,82,3)" fg:x="15205" fg:w="62"/><text x="20.1910%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (62 samples, 0.08%)</title><rect x="19.9410%" y="421" width="0.0813%" height="15" fill="rgb(240,164,32)" fg:x="15205" fg:w="62"/><text x="20.1910%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (62 samples, 0.08%)</title><rect x="19.9410%" y="405" width="0.0813%" height="15" fill="rgb(232,46,7)" fg:x="15205" fg:w="62"/><text x="20.1910%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (61 samples, 0.08%)</title><rect x="19.9423%" y="389" width="0.0800%" height="15" fill="rgb(229,129,53)" fg:x="15206" fg:w="61"/><text x="20.1923%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 0.10%)</title><rect x="19.9318%" y="469" width="0.0970%" height="15" fill="rgb(234,188,29)" fg:x="15198" fg:w="74"/><text x="20.1818%" y="479.50"></text></g><g><title>alloc::string::String::push_str (83 samples, 0.11%)</title><rect x="19.9318%" y="501" width="0.1089%" height="15" fill="rgb(246,141,4)" fg:x="15198" fg:w="83"/><text x="20.1818%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (83 samples, 0.11%)</title><rect x="19.9318%" y="485" width="0.1089%" height="15" fill="rgb(229,23,39)" fg:x="15198" fg:w="83"/><text x="20.1818%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (9 samples, 0.01%)</title><rect x="20.0289%" y="469" width="0.0118%" height="15" fill="rgb(206,12,3)" fg:x="15272" fg:w="9"/><text x="20.2789%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="20.0289%" y="453" width="0.0118%" height="15" fill="rgb(252,226,20)" fg:x="15272" fg:w="9"/><text x="20.2789%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.01%)</title><rect x="20.0302%" y="437" width="0.0105%" height="15" fill="rgb(216,123,35)" fg:x="15273" fg:w="8"/><text x="20.2802%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.01%)</title><rect x="20.0748%" y="341" width="0.0118%" height="15" fill="rgb(212,68,40)" fg:x="15307" fg:w="9"/><text x="20.3248%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="20.0669%" y="357" width="0.0223%" height="15" fill="rgb(254,125,32)" fg:x="15301" fg:w="17"/><text x="20.3169%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.01%)</title><rect x="20.0918%" y="341" width="0.0105%" height="15" fill="rgb(253,97,22)" fg:x="15320" fg:w="8"/><text x="20.3418%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="20.1207%" y="149" width="0.0131%" height="15" fill="rgb(241,101,14)" fg:x="15342" fg:w="10"/><text x="20.3707%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="20.1207%" y="133" width="0.0131%" height="15" fill="rgb(238,103,29)" fg:x="15342" fg:w="10"/><text x="20.3707%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="20.1128%" y="197" width="0.0289%" height="15" fill="rgb(233,195,47)" fg:x="15336" fg:w="22"/><text x="20.3628%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="20.1128%" y="181" width="0.0289%" height="15" fill="rgb(246,218,30)" fg:x="15336" fg:w="22"/><text x="20.3628%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.03%)</title><rect x="20.1128%" y="165" width="0.0289%" height="15" fill="rgb(219,145,47)" fg:x="15336" fg:w="22"/><text x="20.3628%" y="175.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (29 samples, 0.04%)</title><rect x="20.1049%" y="325" width="0.0380%" height="15" fill="rgb(243,12,26)" fg:x="15330" fg:w="29"/><text x="20.3549%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (29 samples, 0.04%)</title><rect x="20.1049%" y="309" width="0.0380%" height="15" fill="rgb(214,87,16)" fg:x="15330" fg:w="29"/><text x="20.3549%" y="319.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (29 samples, 0.04%)</title><rect x="20.1049%" y="293" width="0.0380%" height="15" fill="rgb(208,99,42)" fg:x="15330" fg:w="29"/><text x="20.3549%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (29 samples, 0.04%)</title><rect x="20.1049%" y="277" width="0.0380%" height="15" fill="rgb(253,99,2)" fg:x="15330" fg:w="29"/><text x="20.3549%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.04%)</title><rect x="20.1062%" y="261" width="0.0367%" height="15" fill="rgb(220,168,23)" fg:x="15331" fg:w="28"/><text x="20.3562%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.04%)</title><rect x="20.1062%" y="245" width="0.0367%" height="15" fill="rgb(242,38,24)" fg:x="15331" fg:w="28"/><text x="20.3562%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.04%)</title><rect x="20.1062%" y="229" width="0.0367%" height="15" fill="rgb(225,182,9)" fg:x="15331" fg:w="28"/><text x="20.3562%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.04%)</title><rect x="20.1062%" y="213" width="0.0367%" height="15" fill="rgb(243,178,37)" fg:x="15331" fg:w="28"/><text x="20.3562%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.01%)</title><rect x="20.1613%" y="181" width="0.0131%" height="15" fill="rgb(232,139,19)" fg:x="15373" fg:w="10"/><text x="20.4113%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.01%)</title><rect x="20.1626%" y="165" width="0.0118%" height="15" fill="rgb(225,201,24)" fg:x="15374" fg:w="9"/><text x="20.4126%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="20.2059%" y="69" width="0.0157%" height="15" fill="rgb(221,47,46)" fg:x="15407" fg:w="12"/><text x="20.4559%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.02%)</title><rect x="20.2059%" y="53" width="0.0157%" height="15" fill="rgb(249,23,13)" fg:x="15407" fg:w="12"/><text x="20.4559%" y="63.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.03%)</title><rect x="20.1967%" y="101" width="0.0289%" height="15" fill="rgb(219,9,5)" fg:x="15400" fg:w="22"/><text x="20.4467%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.03%)</title><rect x="20.1967%" y="85" width="0.0289%" height="15" fill="rgb(254,171,16)" fg:x="15400" fg:w="22"/><text x="20.4467%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.04%)</title><rect x="20.1954%" y="117" width="0.0420%" height="15" fill="rgb(230,171,20)" fg:x="15399" fg:w="32"/><text x="20.4454%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.02%)</title><rect x="20.2374%" y="117" width="0.0236%" height="15" fill="rgb(210,71,41)" fg:x="15431" fg:w="18"/><text x="20.4874%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (18 samples, 0.02%)</title><rect x="20.2374%" y="101" width="0.0236%" height="15" fill="rgb(206,173,20)" fg:x="15431" fg:w="18"/><text x="20.4874%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.10%)</title><rect x="20.1770%" y="133" width="0.1023%" height="15" fill="rgb(233,88,34)" fg:x="15385" fg:w="78"/><text x="20.4270%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (93 samples, 0.12%)</title><rect x="20.1587%" y="197" width="0.1220%" height="15" fill="rgb(223,209,46)" fg:x="15371" fg:w="93"/><text x="20.4087%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.11%)</title><rect x="20.1744%" y="181" width="0.1062%" height="15" fill="rgb(250,43,18)" fg:x="15383" fg:w="81"/><text x="20.4244%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.10%)</title><rect x="20.1757%" y="165" width="0.1049%" height="15" fill="rgb(208,13,10)" fg:x="15384" fg:w="80"/><text x="20.4257%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (79 samples, 0.10%)</title><rect x="20.1770%" y="149" width="0.1036%" height="15" fill="rgb(212,200,36)" fg:x="15385" fg:w="79"/><text x="20.4270%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (98 samples, 0.13%)</title><rect x="20.1587%" y="213" width="0.1285%" height="15" fill="rgb(225,90,30)" fg:x="15371" fg:w="98"/><text x="20.4087%" y="223.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (124 samples, 0.16%)</title><rect x="20.1430%" y="309" width="0.1626%" height="15" fill="rgb(236,182,39)" fg:x="15359" fg:w="124"/><text x="20.3930%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (119 samples, 0.16%)</title><rect x="20.1495%" y="293" width="0.1561%" height="15" fill="rgb(212,144,35)" fg:x="15364" fg:w="119"/><text x="20.3995%" y="303.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (118 samples, 0.15%)</title><rect x="20.1508%" y="277" width="0.1548%" height="15" fill="rgb(228,63,44)" fg:x="15365" fg:w="118"/><text x="20.4008%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (114 samples, 0.15%)</title><rect x="20.1561%" y="261" width="0.1495%" height="15" fill="rgb(228,109,6)" fg:x="15369" fg:w="114"/><text x="20.4061%" y="271.50"></text></g><g><title>alloc::string::String::push_str (114 samples, 0.15%)</title><rect x="20.1561%" y="245" width="0.1495%" height="15" fill="rgb(238,117,24)" fg:x="15369" fg:w="114"/><text x="20.4061%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (114 samples, 0.15%)</title><rect x="20.1561%" y="229" width="0.1495%" height="15" fill="rgb(242,26,26)" fg:x="15369" fg:w="114"/><text x="20.4061%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14 samples, 0.02%)</title><rect x="20.2872%" y="213" width="0.0184%" height="15" fill="rgb(221,92,48)" fg:x="15469" fg:w="14"/><text x="20.5372%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="20.2872%" y="197" width="0.0184%" height="15" fill="rgb(209,209,32)" fg:x="15469" fg:w="14"/><text x="20.5372%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (12 samples, 0.02%)</title><rect x="20.2898%" y="181" width="0.0157%" height="15" fill="rgb(221,70,22)" fg:x="15471" fg:w="12"/><text x="20.5398%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (12 samples, 0.02%)</title><rect x="20.3056%" y="309" width="0.0157%" height="15" fill="rgb(248,145,5)" fg:x="15483" fg:w="12"/><text x="20.5556%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.02%)</title><rect x="20.3056%" y="293" width="0.0157%" height="15" fill="rgb(226,116,26)" fg:x="15483" fg:w="12"/><text x="20.5556%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.02%)</title><rect x="20.3056%" y="277" width="0.0157%" height="15" fill="rgb(244,5,17)" fg:x="15483" fg:w="12"/><text x="20.5556%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.02%)</title><rect x="20.3056%" y="261" width="0.0157%" height="15" fill="rgb(252,159,33)" fg:x="15483" fg:w="12"/><text x="20.5556%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="20.3213%" y="293" width="0.0105%" height="15" fill="rgb(206,71,0)" fg:x="15495" fg:w="8"/><text x="20.5713%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.01%)</title><rect x="20.3213%" y="277" width="0.0105%" height="15" fill="rgb(233,118,54)" fg:x="15495" fg:w="8"/><text x="20.5713%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.01%)</title><rect x="20.3213%" y="261" width="0.0105%" height="15" fill="rgb(234,83,48)" fg:x="15495" fg:w="8"/><text x="20.5713%" y="271.50"></text></g><g><title>alloc::string::String::push (9 samples, 0.01%)</title><rect x="20.3213%" y="309" width="0.0118%" height="15" fill="rgb(228,3,54)" fg:x="15495" fg:w="9"/><text x="20.5713%" y="319.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.02%)</title><rect x="20.3331%" y="309" width="0.0223%" height="15" fill="rgb(226,155,13)" fg:x="15504" fg:w="17"/><text x="20.5831%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.02%)</title><rect x="20.3331%" y="293" width="0.0223%" height="15" fill="rgb(241,28,37)" fg:x="15504" fg:w="17"/><text x="20.5831%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.01%)</title><rect x="20.3410%" y="277" width="0.0144%" height="15" fill="rgb(233,93,10)" fg:x="15510" fg:w="11"/><text x="20.5910%" y="287.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="20.3410%" y="261" width="0.0144%" height="15" fill="rgb(225,113,19)" fg:x="15510" fg:w="11"/><text x="20.5910%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.01%)</title><rect x="20.3436%" y="245" width="0.0118%" height="15" fill="rgb(241,2,18)" fg:x="15512" fg:w="9"/><text x="20.5936%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (251 samples, 0.33%)</title><rect x="20.0446%" y="437" width="0.3292%" height="15" fill="rgb(228,207,21)" fg:x="15284" fg:w="251"/><text x="20.2946%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (251 samples, 0.33%)</title><rect x="20.0446%" y="421" width="0.3292%" height="15" fill="rgb(213,211,35)" fg:x="15284" fg:w="251"/><text x="20.2946%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (237 samples, 0.31%)</title><rect x="20.0630%" y="405" width="0.3108%" height="15" fill="rgb(209,83,10)" fg:x="15298" fg:w="237"/><text x="20.3130%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (236 samples, 0.31%)</title><rect x="20.0643%" y="389" width="0.3095%" height="15" fill="rgb(209,164,1)" fg:x="15299" fg:w="236"/><text x="20.3143%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (236 samples, 0.31%)</title><rect x="20.0643%" y="373" width="0.3095%" height="15" fill="rgb(213,184,43)" fg:x="15299" fg:w="236"/><text x="20.3143%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (217 samples, 0.28%)</title><rect x="20.0892%" y="357" width="0.2846%" height="15" fill="rgb(231,61,34)" fg:x="15318" fg:w="217"/><text x="20.3392%" y="367.50"></text></g><g><title>day1::day16_part2::get_key::{{closure}} (207 samples, 0.27%)</title><rect x="20.1023%" y="341" width="0.2715%" height="15" fill="rgb(235,75,3)" fg:x="15328" fg:w="207"/><text x="20.3523%" y="351.50"></text></g><g><title>day1::day16_part2::Player::to_string (176 samples, 0.23%)</title><rect x="20.1430%" y="325" width="0.2308%" height="15" fill="rgb(220,106,47)" fg:x="15359" fg:w="176"/><text x="20.3930%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.02%)</title><rect x="20.3554%" y="309" width="0.0184%" height="15" fill="rgb(210,196,33)" fg:x="15521" fg:w="14"/><text x="20.6054%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.02%)</title><rect x="20.3554%" y="293" width="0.0184%" height="15" fill="rgb(229,154,42)" fg:x="15521" fg:w="14"/><text x="20.6054%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="20.3620%" y="277" width="0.0118%" height="15" fill="rgb(228,114,26)" fg:x="15526" fg:w="9"/><text x="20.6120%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="20.3620%" y="261" width="0.0118%" height="15" fill="rgb(208,144,1)" fg:x="15526" fg:w="9"/><text x="20.6120%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="20.3777%" y="373" width="0.0157%" height="15" fill="rgb(239,112,37)" fg:x="15538" fg:w="12"/><text x="20.6277%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="20.3777%" y="357" width="0.0157%" height="15" fill="rgb(210,96,50)" fg:x="15538" fg:w="12"/><text x="20.6277%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (277 samples, 0.36%)</title><rect x="20.0407%" y="501" width="0.3633%" height="15" fill="rgb(222,178,2)" fg:x="15281" fg:w="277"/><text x="20.2907%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (276 samples, 0.36%)</title><rect x="20.0420%" y="485" width="0.3620%" height="15" fill="rgb(226,74,18)" fg:x="15282" fg:w="276"/><text x="20.2920%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (275 samples, 0.36%)</title><rect x="20.0433%" y="469" width="0.3607%" height="15" fill="rgb(225,67,54)" fg:x="15283" fg:w="275"/><text x="20.2933%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (275 samples, 0.36%)</title><rect x="20.0433%" y="453" width="0.3607%" height="15" fill="rgb(251,92,32)" fg:x="15283" fg:w="275"/><text x="20.2933%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (22 samples, 0.03%)</title><rect x="20.3751%" y="437" width="0.0289%" height="15" fill="rgb(228,149,22)" fg:x="15536" fg:w="22"/><text x="20.6251%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="20.3751%" y="421" width="0.0289%" height="15" fill="rgb(243,54,13)" fg:x="15536" fg:w="22"/><text x="20.6251%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="20.3751%" y="405" width="0.0289%" height="15" fill="rgb(243,180,28)" fg:x="15536" fg:w="22"/><text x="20.6251%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.03%)</title><rect x="20.3751%" y="389" width="0.0289%" height="15" fill="rgb(208,167,24)" fg:x="15536" fg:w="22"/><text x="20.6251%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.01%)</title><rect x="20.3934%" y="373" width="0.0105%" height="15" fill="rgb(245,73,45)" fg:x="15550" fg:w="8"/><text x="20.6434%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.01%)</title><rect x="20.3934%" y="357" width="0.0105%" height="15" fill="rgb(237,203,48)" fg:x="15550" fg:w="8"/><text x="20.6434%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.01%)</title><rect x="20.4197%" y="421" width="0.0105%" height="15" fill="rgb(211,197,16)" fg:x="15570" fg:w="8"/><text x="20.6697%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.01%)</title><rect x="20.4197%" y="405" width="0.0105%" height="15" fill="rgb(243,99,51)" fg:x="15570" fg:w="8"/><text x="20.6697%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (20 samples, 0.03%)</title><rect x="20.4052%" y="501" width="0.0262%" height="15" fill="rgb(215,123,29)" fg:x="15559" fg:w="20"/><text x="20.6552%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.03%)</title><rect x="20.4052%" y="485" width="0.0262%" height="15" fill="rgb(239,186,37)" fg:x="15559" fg:w="20"/><text x="20.6552%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="20.4144%" y="469" width="0.0170%" height="15" fill="rgb(252,136,39)" fg:x="15566" fg:w="13"/><text x="20.6644%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="20.4144%" y="453" width="0.0170%" height="15" fill="rgb(223,213,32)" fg:x="15566" fg:w="13"/><text x="20.6644%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="20.4170%" y="437" width="0.0144%" height="15" fill="rgb(233,115,5)" fg:x="15568" fg:w="11"/><text x="20.6670%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.01%)</title><rect x="20.4420%" y="405" width="0.0118%" height="15" fill="rgb(207,226,44)" fg:x="15587" fg:w="9"/><text x="20.6920%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.01%)</title><rect x="20.4420%" y="389" width="0.0118%" height="15" fill="rgb(208,126,0)" fg:x="15587" fg:w="9"/><text x="20.6920%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="20.4420%" y="421" width="0.0131%" height="15" fill="rgb(244,66,21)" fg:x="15587" fg:w="10"/><text x="20.6920%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.05%)</title><rect x="20.4315%" y="485" width="0.0511%" height="15" fill="rgb(222,97,12)" fg:x="15579" fg:w="39"/><text x="20.6815%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (33 samples, 0.04%)</title><rect x="20.4393%" y="469" width="0.0433%" height="15" fill="rgb(219,213,19)" fg:x="15585" fg:w="33"/><text x="20.6893%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (31 samples, 0.04%)</title><rect x="20.4420%" y="453" width="0.0407%" height="15" fill="rgb(252,169,30)" fg:x="15587" fg:w="31"/><text x="20.6920%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (31 samples, 0.04%)</title><rect x="20.4420%" y="437" width="0.0407%" height="15" fill="rgb(206,32,51)" fg:x="15587" fg:w="31"/><text x="20.6920%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.03%)</title><rect x="20.4551%" y="421" width="0.0275%" height="15" fill="rgb(250,172,42)" fg:x="15597" fg:w="21"/><text x="20.7051%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.03%)</title><rect x="20.4551%" y="405" width="0.0275%" height="15" fill="rgb(209,34,43)" fg:x="15597" fg:w="21"/><text x="20.7051%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.02%)</title><rect x="20.4643%" y="389" width="0.0184%" height="15" fill="rgb(223,11,35)" fg:x="15604" fg:w="14"/><text x="20.7143%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="20.4682%" y="373" width="0.0144%" height="15" fill="rgb(251,219,26)" fg:x="15607" fg:w="11"/><text x="20.7182%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (11 samples, 0.01%)</title><rect x="20.4682%" y="357" width="0.0144%" height="15" fill="rgb(231,119,3)" fg:x="15607" fg:w="11"/><text x="20.7182%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (50 samples, 0.07%)</title><rect x="20.4315%" y="501" width="0.0656%" height="15" fill="rgb(216,97,11)" fg:x="15579" fg:w="50"/><text x="20.6815%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (11 samples, 0.01%)</title><rect x="20.4826%" y="485" width="0.0144%" height="15" fill="rgb(223,59,9)" fg:x="15618" fg:w="11"/><text x="20.7326%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="20.4839%" y="469" width="0.0131%" height="15" fill="rgb(233,93,31)" fg:x="15619" fg:w="10"/><text x="20.7339%" y="479.50"></text></g><g><title>day1::day16_part2::get_key (702 samples, 0.92%)</title><rect x="19.5816%" y="517" width="0.9207%" height="15" fill="rgb(239,81,33)" fg:x="14931" fg:w="702"/><text x="19.8316%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.02%)</title><rect x="20.5102%" y="437" width="0.0184%" height="15" fill="rgb(213,120,34)" fg:x="15639" fg:w="14"/><text x="20.7602%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="20.5115%" y="421" width="0.0170%" height="15" fill="rgb(243,49,53)" fg:x="15640" fg:w="13"/><text x="20.7615%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="20.5115%" y="405" width="0.0170%" height="15" fill="rgb(247,216,33)" fg:x="15640" fg:w="13"/><text x="20.7615%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.01%)</title><rect x="20.5482%" y="325" width="0.0144%" height="15" fill="rgb(226,26,14)" fg:x="15668" fg:w="11"/><text x="20.7982%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.03%)</title><rect x="20.5430%" y="341" width="0.0275%" height="15" fill="rgb(215,49,53)" fg:x="15664" fg:w="21"/><text x="20.7930%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (55 samples, 0.07%)</title><rect x="20.5075%" y="469" width="0.0721%" height="15" fill="rgb(245,162,40)" fg:x="15637" fg:w="55"/><text x="20.7575%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (54 samples, 0.07%)</title><rect x="20.5089%" y="453" width="0.0708%" height="15" fill="rgb(229,68,17)" fg:x="15638" fg:w="54"/><text x="20.7589%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.04%)</title><rect x="20.5364%" y="437" width="0.0433%" height="15" fill="rgb(213,182,10)" fg:x="15659" fg:w="33"/><text x="20.7864%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (32 samples, 0.04%)</title><rect x="20.5377%" y="421" width="0.0420%" height="15" fill="rgb(245,125,30)" fg:x="15660" fg:w="32"/><text x="20.7877%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (28 samples, 0.04%)</title><rect x="20.5430%" y="405" width="0.0367%" height="15" fill="rgb(232,202,2)" fg:x="15664" fg:w="28"/><text x="20.7930%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (28 samples, 0.04%)</title><rect x="20.5430%" y="389" width="0.0367%" height="15" fill="rgb(237,140,51)" fg:x="15664" fg:w="28"/><text x="20.7930%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (28 samples, 0.04%)</title><rect x="20.5430%" y="373" width="0.0367%" height="15" fill="rgb(236,157,25)" fg:x="15664" fg:w="28"/><text x="20.7930%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (28 samples, 0.04%)</title><rect x="20.5430%" y="357" width="0.0367%" height="15" fill="rgb(219,209,0)" fg:x="15664" fg:w="28"/><text x="20.7930%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (29 samples, 0.04%)</title><rect x="20.5889%" y="325" width="0.0380%" height="15" fill="rgb(240,116,54)" fg:x="15699" fg:w="29"/><text x="20.8389%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (34 samples, 0.04%)</title><rect x="20.5875%" y="373" width="0.0446%" height="15" fill="rgb(216,10,36)" fg:x="15698" fg:w="34"/><text x="20.8375%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.04%)</title><rect x="20.5875%" y="357" width="0.0446%" height="15" fill="rgb(222,72,44)" fg:x="15698" fg:w="34"/><text x="20.8375%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (33 samples, 0.04%)</title><rect x="20.5889%" y="341" width="0.0433%" height="15" fill="rgb(232,159,9)" fg:x="15699" fg:w="33"/><text x="20.8389%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (59 samples, 0.08%)</title><rect x="20.5875%" y="405" width="0.0774%" height="15" fill="rgb(210,39,32)" fg:x="15698" fg:w="59"/><text x="20.8375%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (59 samples, 0.08%)</title><rect x="20.5875%" y="389" width="0.0774%" height="15" fill="rgb(216,194,45)" fg:x="15698" fg:w="59"/><text x="20.8375%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (25 samples, 0.03%)</title><rect x="20.6321%" y="373" width="0.0328%" height="15" fill="rgb(218,18,35)" fg:x="15732" fg:w="25"/><text x="20.8821%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.03%)</title><rect x="20.6321%" y="357" width="0.0328%" height="15" fill="rgb(207,83,51)" fg:x="15732" fg:w="25"/><text x="20.8821%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.03%)</title><rect x="20.6321%" y="341" width="0.0328%" height="15" fill="rgb(225,63,43)" fg:x="15732" fg:w="25"/><text x="20.8821%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (24 samples, 0.03%)</title><rect x="20.6334%" y="325" width="0.0315%" height="15" fill="rgb(207,57,36)" fg:x="15733" fg:w="24"/><text x="20.8834%" y="335.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.03%)</title><rect x="20.6348%" y="309" width="0.0302%" height="15" fill="rgb(216,99,33)" fg:x="15734" fg:w="23"/><text x="20.8848%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (61 samples, 0.08%)</title><rect x="20.5862%" y="421" width="0.0800%" height="15" fill="rgb(225,42,16)" fg:x="15697" fg:w="61"/><text x="20.8362%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (15 samples, 0.02%)</title><rect x="20.6728%" y="421" width="0.0197%" height="15" fill="rgb(220,201,45)" fg:x="15763" fg:w="15"/><text x="20.9228%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.02%)</title><rect x="20.6754%" y="405" width="0.0170%" height="15" fill="rgb(225,33,4)" fg:x="15765" fg:w="13"/><text x="20.9254%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="20.6754%" y="389" width="0.0170%" height="15" fill="rgb(224,33,50)" fg:x="15765" fg:w="13"/><text x="20.9254%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (10 samples, 0.01%)</title><rect x="20.6951%" y="405" width="0.0131%" height="15" fill="rgb(246,198,51)" fg:x="15780" fg:w="10"/><text x="20.9451%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (20 samples, 0.03%)</title><rect x="20.6925%" y="421" width="0.0262%" height="15" fill="rgb(205,22,4)" fg:x="15778" fg:w="20"/><text x="20.9425%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (167 samples, 0.22%)</title><rect x="20.5023%" y="517" width="0.2190%" height="15" fill="rgb(206,3,8)" fg:x="15633" fg:w="167"/><text x="20.7523%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (166 samples, 0.22%)</title><rect x="20.5036%" y="501" width="0.2177%" height="15" fill="rgb(251,23,15)" fg:x="15634" fg:w="166"/><text x="20.7536%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (165 samples, 0.22%)</title><rect x="20.5049%" y="485" width="0.2164%" height="15" fill="rgb(252,88,28)" fg:x="15635" fg:w="165"/><text x="20.7549%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (108 samples, 0.14%)</title><rect x="20.5797%" y="469" width="0.1416%" height="15" fill="rgb(212,127,14)" fg:x="15692" fg:w="108"/><text x="20.8297%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (107 samples, 0.14%)</title><rect x="20.5810%" y="453" width="0.1403%" height="15" fill="rgb(247,145,37)" fg:x="15693" fg:w="107"/><text x="20.8310%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (106 samples, 0.14%)</title><rect x="20.5823%" y="437" width="0.1390%" height="15" fill="rgb(209,117,53)" fg:x="15694" fg:w="106"/><text x="20.8323%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (10 samples, 0.01%)</title><rect x="20.7213%" y="485" width="0.0131%" height="15" fill="rgb(212,90,42)" fg:x="15800" fg:w="10"/><text x="20.9713%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="20.7213%" y="469" width="0.0131%" height="15" fill="rgb(218,164,37)" fg:x="15800" fg:w="10"/><text x="20.9713%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="20.7239%" y="453" width="0.0105%" height="15" fill="rgb(246,65,34)" fg:x="15802" fg:w="8"/><text x="20.9739%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="20.7239%" y="437" width="0.0105%" height="15" fill="rgb(231,100,33)" fg:x="15802" fg:w="8"/><text x="20.9739%" y="447.50"></text></g><g><title>day1::day16_part2::bt (1,134 samples, 1.49%)</title><rect x="19.2643%" y="533" width="1.4872%" height="15" fill="rgb(228,126,14)" fg:x="14689" fg:w="1134"/><text x="19.5143%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (23 samples, 0.03%)</title><rect x="20.7213%" y="517" width="0.0302%" height="15" fill="rgb(215,173,21)" fg:x="15800" fg:w="23"/><text x="20.9713%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.03%)</title><rect x="20.7213%" y="501" width="0.0302%" height="15" fill="rgb(210,6,40)" fg:x="15800" fg:w="23"/><text x="20.9713%" y="511.50"></text></g><g><title>alloc::string::String::new (28 samples, 0.04%)</title><rect x="20.8656%" y="501" width="0.0367%" height="15" fill="rgb(212,48,18)" fg:x="15910" fg:w="28"/><text x="21.1156%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (29 samples, 0.04%)</title><rect x="21.0479%" y="357" width="0.0380%" height="15" fill="rgb(230,214,11)" fg:x="16049" fg:w="29"/><text x="21.2979%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="21.0584%" y="341" width="0.0275%" height="15" fill="rgb(254,105,39)" fg:x="16057" fg:w="21"/><text x="21.3084%" y="351.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.01%)</title><rect x="21.0859%" y="341" width="0.0118%" height="15" fill="rgb(245,158,5)" fg:x="16078" fg:w="9"/><text x="21.3359%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (92 samples, 0.12%)</title><rect x="20.9915%" y="389" width="0.1207%" height="15" fill="rgb(249,208,11)" fg:x="16006" fg:w="92"/><text x="21.2415%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (91 samples, 0.12%)</title><rect x="20.9928%" y="373" width="0.1193%" height="15" fill="rgb(210,39,28)" fg:x="16007" fg:w="91"/><text x="21.2428%" y="383.50"></text></g><g><title>core::ptr::null_mut (20 samples, 0.03%)</title><rect x="21.0859%" y="357" width="0.0262%" height="15" fill="rgb(211,56,53)" fg:x="16078" fg:w="20"/><text x="21.3359%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (11 samples, 0.01%)</title><rect x="21.0977%" y="341" width="0.0144%" height="15" fill="rgb(226,201,30)" fg:x="16087" fg:w="11"/><text x="21.3477%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (17 samples, 0.02%)</title><rect x="21.1357%" y="357" width="0.0223%" height="15" fill="rgb(239,101,34)" fg:x="16116" fg:w="17"/><text x="21.3857%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.02%)</title><rect x="21.1974%" y="325" width="0.0210%" height="15" fill="rgb(226,209,5)" fg:x="16163" fg:w="16"/><text x="21.4474%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="21.2315%" y="309" width="0.0105%" height="15" fill="rgb(250,105,47)" fg:x="16189" fg:w="8"/><text x="21.4815%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (29 samples, 0.04%)</title><rect x="21.2210%" y="325" width="0.0380%" height="15" fill="rgb(230,72,3)" fg:x="16181" fg:w="29"/><text x="21.4710%" y="335.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (13 samples, 0.02%)</title><rect x="21.2420%" y="309" width="0.0170%" height="15" fill="rgb(232,218,39)" fg:x="16197" fg:w="13"/><text x="21.4920%" y="319.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.05%)</title><rect x="21.3508%" y="261" width="0.0525%" height="15" fill="rgb(248,166,6)" fg:x="16280" fg:w="40"/><text x="21.6008%" y="271.50"></text></g><g><title>_int_malloc (8 samples, 0.01%)</title><rect x="21.3928%" y="245" width="0.0105%" height="15" fill="rgb(247,89,20)" fg:x="16312" fg:w="8"/><text x="21.6428%" y="255.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.07%)</title><rect x="21.3403%" y="277" width="0.0656%" height="15" fill="rgb(248,130,54)" fg:x="16272" fg:w="50"/><text x="21.5903%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::size (9 samples, 0.01%)</title><rect x="21.4059%" y="277" width="0.0118%" height="15" fill="rgb(234,196,4)" fg:x="16322" fg:w="9"/><text x="21.6559%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (46 samples, 0.06%)</title><rect x="21.4728%" y="245" width="0.0603%" height="15" fill="rgb(250,143,31)" fg:x="16373" fg:w="46"/><text x="21.7228%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.04%)</title><rect x="21.4898%" y="229" width="0.0433%" height="15" fill="rgb(211,110,34)" fg:x="16386" fg:w="33"/><text x="21.7398%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (100 samples, 0.13%)</title><rect x="21.4230%" y="277" width="0.1311%" height="15" fill="rgb(215,124,48)" fg:x="16335" fg:w="100"/><text x="21.6730%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (95 samples, 0.12%)</title><rect x="21.4295%" y="261" width="0.1246%" height="15" fill="rgb(216,46,13)" fg:x="16340" fg:w="95"/><text x="21.6795%" y="271.50"></text></g><g><title>core::ptr::null_mut (16 samples, 0.02%)</title><rect x="21.5331%" y="245" width="0.0210%" height="15" fill="rgb(205,184,25)" fg:x="16419" fg:w="16"/><text x="21.7831%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="21.5423%" y="229" width="0.0118%" height="15" fill="rgb(228,1,10)" fg:x="16426" fg:w="9"/><text x="21.7923%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (200 samples, 0.26%)</title><rect x="21.3010%" y="309" width="0.2623%" height="15" fill="rgb(213,116,27)" fg:x="16242" fg:w="200"/><text x="21.5510%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (199 samples, 0.26%)</title><rect x="21.3023%" y="293" width="0.2610%" height="15" fill="rgb(241,95,50)" fg:x="16243" fg:w="199"/><text x="21.5523%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.03%)</title><rect x="21.5633%" y="309" width="0.0262%" height="15" fill="rgb(238,48,32)" fg:x="16442" fg:w="20"/><text x="21.8133%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (301 samples, 0.39%)</title><rect x="21.2590%" y="325" width="0.3948%" height="15" fill="rgb(235,113,49)" fg:x="16210" fg:w="301"/><text x="21.5090%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (49 samples, 0.06%)</title><rect x="21.5895%" y="309" width="0.0643%" height="15" fill="rgb(205,127,43)" fg:x="16462" fg:w="49"/><text x="21.8395%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (13 samples, 0.02%)</title><rect x="21.7613%" y="293" width="0.0170%" height="15" fill="rgb(250,162,2)" fg:x="16593" fg:w="13"/><text x="22.0113%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (96 samples, 0.13%)</title><rect x="21.6538%" y="325" width="0.1259%" height="15" fill="rgb(220,13,41)" fg:x="16511" fg:w="96"/><text x="21.9038%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (96 samples, 0.13%)</title><rect x="21.6538%" y="309" width="0.1259%" height="15" fill="rgb(249,221,25)" fg:x="16511" fg:w="96"/><text x="21.9038%" y="319.50"></text></g><g><title>core::cmp::max (93 samples, 0.12%)</title><rect x="21.7797%" y="325" width="0.1220%" height="15" fill="rgb(215,208,19)" fg:x="16607" fg:w="93"/><text x="22.0297%" y="335.50"></text></g><g><title>core::cmp::Ord::max (93 samples, 0.12%)</title><rect x="21.7797%" y="309" width="0.1220%" height="15" fill="rgb(236,175,2)" fg:x="16607" fg:w="93"/><text x="22.0297%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (54 samples, 0.07%)</title><rect x="21.8308%" y="293" width="0.0708%" height="15" fill="rgb(241,52,2)" fg:x="16646" fg:w="54"/><text x="22.0808%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (44 samples, 0.06%)</title><rect x="21.9016%" y="325" width="0.0577%" height="15" fill="rgb(248,140,14)" fg:x="16700" fg:w="44"/><text x="22.1516%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (20 samples, 0.03%)</title><rect x="21.9331%" y="309" width="0.0262%" height="15" fill="rgb(253,22,42)" fg:x="16724" fg:w="20"/><text x="22.1831%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (620 samples, 0.81%)</title><rect x="21.1593%" y="341" width="0.8131%" height="15" fill="rgb(234,61,47)" fg:x="16134" fg:w="620"/><text x="21.4093%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (10 samples, 0.01%)</title><rect x="21.9593%" y="325" width="0.0131%" height="15" fill="rgb(208,226,15)" fg:x="16744" fg:w="10"/><text x="22.2093%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (663 samples, 0.87%)</title><rect x="21.1187%" y="389" width="0.8695%" height="15" fill="rgb(217,221,4)" fg:x="16103" fg:w="663"/><text x="21.3687%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (660 samples, 0.87%)</title><rect x="21.1226%" y="373" width="0.8656%" height="15" fill="rgb(212,174,34)" fg:x="16106" fg:w="660"/><text x="21.3726%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (633 samples, 0.83%)</title><rect x="21.1580%" y="357" width="0.8302%" height="15" fill="rgb(253,83,4)" fg:x="16133" fg:w="633"/><text x="21.4080%" y="367.50"></text></g><g><title>alloc::raw_vec::handle_reserve (12 samples, 0.02%)</title><rect x="21.9725%" y="341" width="0.0157%" height="15" fill="rgb(250,195,49)" fg:x="16754" fg:w="12"/><text x="22.2225%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (791 samples, 1.04%)</title><rect x="20.9600%" y="405" width="1.0374%" height="15" fill="rgb(241,192,25)" fg:x="15982" fg:w="791"/><text x="21.2100%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (821 samples, 1.08%)</title><rect x="20.9600%" y="421" width="1.0767%" height="15" fill="rgb(208,124,10)" fg:x="15982" fg:w="821"/><text x="21.2100%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (30 samples, 0.04%)</title><rect x="21.9974%" y="405" width="0.0393%" height="15" fill="rgb(222,33,0)" fg:x="16773" fg:w="30"/><text x="22.2474%" y="415.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (21 samples, 0.03%)</title><rect x="22.0092%" y="389" width="0.0275%" height="15" fill="rgb(234,209,28)" fg:x="16782" fg:w="21"/><text x="22.2592%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (13 samples, 0.02%)</title><rect x="22.0197%" y="373" width="0.0170%" height="15" fill="rgb(224,11,23)" fg:x="16790" fg:w="13"/><text x="22.2697%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (27 samples, 0.04%)</title><rect x="22.0905%" y="373" width="0.0354%" height="15" fill="rgb(232,99,1)" fg:x="16844" fg:w="27"/><text x="22.3405%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (83 samples, 0.11%)</title><rect x="22.0498%" y="389" width="0.1089%" height="15" fill="rgb(237,95,45)" fg:x="16813" fg:w="83"/><text x="22.2998%" y="399.50"></text></g><g><title>core::ptr::null (25 samples, 0.03%)</title><rect x="22.1259%" y="373" width="0.0328%" height="15" fill="rgb(208,109,11)" fg:x="16871" fg:w="25"/><text x="22.3759%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (25 samples, 0.03%)</title><rect x="22.1259%" y="357" width="0.0328%" height="15" fill="rgb(216,190,48)" fg:x="16871" fg:w="25"/><text x="22.3759%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (927 samples, 1.22%)</title><rect x="20.9456%" y="437" width="1.2157%" height="15" fill="rgb(251,171,36)" fg:x="15971" fg:w="927"/><text x="21.1956%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (95 samples, 0.12%)</title><rect x="22.0367%" y="421" width="0.1246%" height="15" fill="rgb(230,62,22)" fg:x="16803" fg:w="95"/><text x="22.2867%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (95 samples, 0.12%)</title><rect x="22.0367%" y="405" width="0.1246%" height="15" fill="rgb(225,114,35)" fg:x="16803" fg:w="95"/><text x="22.2867%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (942 samples, 1.24%)</title><rect x="20.9364%" y="469" width="1.2354%" height="15" fill="rgb(215,118,42)" fg:x="15964" fg:w="942"/><text x="21.1864%" y="479.50"></text></g><g><title>alloc::string::String::push_str (936 samples, 1.23%)</title><rect x="20.9443%" y="453" width="1.2275%" height="15" fill="rgb(243,119,21)" fg:x="15970" fg:w="936"/><text x="21.1943%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (8 samples, 0.01%)</title><rect x="22.1613%" y="437" width="0.0105%" height="15" fill="rgb(252,177,53)" fg:x="16898" fg:w="8"/><text x="22.4113%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral (23 samples, 0.03%)</title><rect x="22.1718%" y="469" width="0.0302%" height="15" fill="rgb(237,209,29)" fg:x="16906" fg:w="23"/><text x="22.4218%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1,016 samples, 1.33%)</title><rect x="20.9049%" y="501" width="1.3325%" height="15" fill="rgb(212,65,23)" fg:x="15940" fg:w="1016"/><text x="21.1549%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1,015 samples, 1.33%)</title><rect x="20.9062%" y="485" width="1.3311%" height="15" fill="rgb(230,222,46)" fg:x="15941" fg:w="1015"/><text x="21.1562%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.04%)</title><rect x="22.2020%" y="469" width="0.0354%" height="15" fill="rgb(215,135,32)" fg:x="16929" fg:w="27"/><text x="22.4520%" y="479.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,070 samples, 1.40%)</title><rect x="20.8525%" y="517" width="1.4033%" height="15" fill="rgb(246,101,22)" fg:x="15900" fg:w="1070"/><text x="21.1025%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (14 samples, 0.02%)</title><rect x="22.2374%" y="501" width="0.0184%" height="15" fill="rgb(206,107,13)" fg:x="16956" fg:w="14"/><text x="22.4874%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (38 samples, 0.05%)</title><rect x="22.2951%" y="453" width="0.0498%" height="15" fill="rgb(250,100,44)" fg:x="17000" fg:w="38"/><text x="22.5451%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="22.3187%" y="437" width="0.0262%" height="15" fill="rgb(231,147,38)" fg:x="17018" fg:w="20"/><text x="22.5687%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (73 samples, 0.10%)</title><rect x="22.2597%" y="485" width="0.0957%" height="15" fill="rgb(229,8,40)" fg:x="16973" fg:w="73"/><text x="22.5097%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (69 samples, 0.09%)</title><rect x="22.2649%" y="469" width="0.0905%" height="15" fill="rgb(221,135,30)" fg:x="16977" fg:w="69"/><text x="22.5149%" y="479.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.01%)</title><rect x="22.3449%" y="453" width="0.0105%" height="15" fill="rgb(249,193,18)" fg:x="17038" fg:w="8"/><text x="22.5949%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (79 samples, 0.10%)</title><rect x="22.2557%" y="501" width="0.1036%" height="15" fill="rgb(209,133,39)" fg:x="16970" fg:w="79"/><text x="22.5057%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (80 samples, 0.10%)</title><rect x="22.2557%" y="517" width="0.1049%" height="15" fill="rgb(232,100,14)" fg:x="16970" fg:w="80"/><text x="22.5057%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (41 samples, 0.05%)</title><rect x="22.4525%" y="469" width="0.0538%" height="15" fill="rgb(224,185,1)" fg:x="17120" fg:w="41"/><text x="22.7025%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (35 samples, 0.05%)</title><rect x="22.4603%" y="453" width="0.0459%" height="15" fill="rgb(223,139,8)" fg:x="17126" fg:w="35"/><text x="22.7103%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (109 samples, 0.14%)</title><rect x="22.3895%" y="501" width="0.1430%" height="15" fill="rgb(232,213,38)" fg:x="17072" fg:w="109"/><text x="22.6395%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (104 samples, 0.14%)</title><rect x="22.3961%" y="485" width="0.1364%" height="15" fill="rgb(207,94,22)" fg:x="17077" fg:w="104"/><text x="22.6461%" y="495.50"></text></g><g><title>core::ptr::null_mut (20 samples, 0.03%)</title><rect x="22.5062%" y="469" width="0.0262%" height="15" fill="rgb(219,183,54)" fg:x="17161" fg:w="20"/><text x="22.7562%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.02%)</title><rect x="22.5115%" y="453" width="0.0210%" height="15" fill="rgb(216,185,54)" fg:x="17165" fg:w="16"/><text x="22.7615%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (141 samples, 0.18%)</title><rect x="22.3607%" y="517" width="0.1849%" height="15" fill="rgb(254,217,39)" fg:x="17050" fg:w="141"/><text x="22.6107%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.01%)</title><rect x="22.5325%" y="501" width="0.0131%" height="15" fill="rgb(240,178,23)" fg:x="17181" fg:w="10"/><text x="22.7825%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.01%)</title><rect x="22.5351%" y="485" width="0.0105%" height="15" fill="rgb(218,11,47)" fg:x="17183" fg:w="8"/><text x="22.7851%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.01%)</title><rect x="22.5351%" y="469" width="0.0105%" height="15" fill="rgb(218,51,51)" fg:x="17183" fg:w="8"/><text x="22.7851%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (34 samples, 0.04%)</title><rect x="22.6033%" y="469" width="0.0446%" height="15" fill="rgb(238,126,27)" fg:x="17235" fg:w="34"/><text x="22.8533%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (25 samples, 0.03%)</title><rect x="22.6151%" y="453" width="0.0328%" height="15" fill="rgb(249,202,22)" fg:x="17244" fg:w="25"/><text x="22.8651%" y="463.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="22.6479%" y="453" width="0.0105%" height="15" fill="rgb(254,195,49)" fg:x="17269" fg:w="8"/><text x="22.8979%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (82 samples, 0.11%)</title><rect x="22.5587%" y="501" width="0.1075%" height="15" fill="rgb(208,123,14)" fg:x="17201" fg:w="82"/><text x="22.8087%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (81 samples, 0.11%)</title><rect x="22.5600%" y="485" width="0.1062%" height="15" fill="rgb(224,200,8)" fg:x="17202" fg:w="81"/><text x="22.8100%" y="495.50"></text></g><g><title>core::ptr::null_mut (14 samples, 0.02%)</title><rect x="22.6479%" y="469" width="0.0184%" height="15" fill="rgb(217,61,36)" fg:x="17269" fg:w="14"/><text x="22.8979%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (94 samples, 0.12%)</title><rect x="22.5456%" y="517" width="0.1233%" height="15" fill="rgb(206,35,45)" fg:x="17191" fg:w="94"/><text x="22.7956%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (16 samples, 0.02%)</title><rect x="23.0387%" y="421" width="0.0210%" height="15" fill="rgb(217,65,33)" fg:x="17567" fg:w="16"/><text x="23.2887%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (96 samples, 0.13%)</title><rect x="22.9482%" y="437" width="0.1259%" height="15" fill="rgb(222,158,48)" fg:x="17498" fg:w="96"/><text x="23.1982%" y="447.50"></text></g><g><title>core::ptr::null (11 samples, 0.01%)</title><rect x="23.0597%" y="421" width="0.0144%" height="15" fill="rgb(254,2,54)" fg:x="17583" fg:w="11"/><text x="23.3097%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (96 samples, 0.13%)</title><rect x="23.1803%" y="421" width="0.1259%" height="15" fill="rgb(250,143,38)" fg:x="17675" fg:w="96"/><text x="23.4303%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (71 samples, 0.09%)</title><rect x="23.2131%" y="405" width="0.0931%" height="15" fill="rgb(248,25,0)" fg:x="17700" fg:w="71"/><text x="23.4631%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (203 samples, 0.27%)</title><rect x="23.0741%" y="437" width="0.2662%" height="15" fill="rgb(206,152,27)" fg:x="17594" fg:w="203"/><text x="23.3241%" y="447.50"></text></g><g><title>core::ptr::null_mut (26 samples, 0.03%)</title><rect x="23.3062%" y="421" width="0.0341%" height="15" fill="rgb(240,77,30)" fg:x="17771" fg:w="26"/><text x="23.5562%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (22 samples, 0.03%)</title><rect x="23.3115%" y="405" width="0.0289%" height="15" fill="rgb(231,5,3)" fg:x="17775" fg:w="22"/><text x="23.5615%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (322 samples, 0.42%)</title><rect x="22.9207%" y="453" width="0.4223%" height="15" fill="rgb(207,226,32)" fg:x="17477" fg:w="322"/><text x="23.1707%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (33 samples, 0.04%)</title><rect x="23.4767%" y="325" width="0.0433%" height="15" fill="rgb(222,207,47)" fg:x="17901" fg:w="33"/><text x="23.7267%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="23.4925%" y="309" width="0.0275%" height="15" fill="rgb(229,115,45)" fg:x="17913" fg:w="21"/><text x="23.7425%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.01%)</title><rect x="23.5200%" y="309" width="0.0118%" height="15" fill="rgb(224,191,6)" fg:x="17934" fg:w="9"/><text x="23.7700%" y="319.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (100 samples, 0.13%)</title><rect x="23.4125%" y="405" width="0.1311%" height="15" fill="rgb(230,227,24)" fg:x="17852" fg:w="100"/><text x="23.6625%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (98 samples, 0.13%)</title><rect x="23.4151%" y="389" width="0.1285%" height="15" fill="rgb(228,80,19)" fg:x="17854" fg:w="98"/><text x="23.6651%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (98 samples, 0.13%)</title><rect x="23.4151%" y="373" width="0.1285%" height="15" fill="rgb(247,229,0)" fg:x="17854" fg:w="98"/><text x="23.6651%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (96 samples, 0.13%)</title><rect x="23.4177%" y="357" width="0.1259%" height="15" fill="rgb(237,194,15)" fg:x="17856" fg:w="96"/><text x="23.6677%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (95 samples, 0.12%)</title><rect x="23.4190%" y="341" width="0.1246%" height="15" fill="rgb(219,203,20)" fg:x="17857" fg:w="95"/><text x="23.6690%" y="351.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.02%)</title><rect x="23.5200%" y="325" width="0.0236%" height="15" fill="rgb(234,128,8)" fg:x="17934" fg:w="18"/><text x="23.7700%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="23.5318%" y="309" width="0.0118%" height="15" fill="rgb(248,202,8)" fg:x="17943" fg:w="9"/><text x="23.7818%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (520 samples, 0.68%)</title><rect x="22.8734%" y="469" width="0.6820%" height="15" fill="rgb(206,104,37)" fg:x="17441" fg:w="520"/><text x="23.1234%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (162 samples, 0.21%)</title><rect x="23.3430%" y="453" width="0.2125%" height="15" fill="rgb(223,8,27)" fg:x="17799" fg:w="162"/><text x="23.5930%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (129 samples, 0.17%)</title><rect x="23.3862%" y="437" width="0.1692%" height="15" fill="rgb(216,217,28)" fg:x="17832" fg:w="129"/><text x="23.6362%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (124 samples, 0.16%)</title><rect x="23.3928%" y="421" width="0.1626%" height="15" fill="rgb(249,199,1)" fg:x="17837" fg:w="124"/><text x="23.6428%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (42 samples, 0.06%)</title><rect x="23.5554%" y="469" width="0.0551%" height="15" fill="rgb(240,85,17)" fg:x="17961" fg:w="42"/><text x="23.8054%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (21 samples, 0.03%)</title><rect x="23.6289%" y="453" width="0.0275%" height="15" fill="rgb(206,108,45)" fg:x="18017" fg:w="21"/><text x="23.8789%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="23.6459%" y="437" width="0.0105%" height="15" fill="rgb(245,210,41)" fg:x="18030" fg:w="8"/><text x="23.8959%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="23.7036%" y="437" width="0.0393%" height="15" fill="rgb(206,13,37)" fg:x="18074" fg:w="30"/><text x="23.9536%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="23.7233%" y="421" width="0.0197%" height="15" fill="rgb(250,61,18)" fg:x="18089" fg:w="15"/><text x="23.9733%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (77 samples, 0.10%)</title><rect x="23.6564%" y="453" width="0.1010%" height="15" fill="rgb(235,172,48)" fg:x="18038" fg:w="77"/><text x="23.9064%" y="463.50"></text></g><g><title>core::ptr::null_mut (11 samples, 0.01%)</title><rect x="23.7430%" y="437" width="0.0144%" height="15" fill="rgb(249,201,17)" fg:x="18104" fg:w="11"/><text x="23.9930%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="23.7456%" y="421" width="0.0118%" height="15" fill="rgb(219,208,6)" fg:x="18106" fg:w="9"/><text x="23.9956%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 0.15%)</title><rect x="23.6105%" y="469" width="0.1508%" height="15" fill="rgb(248,31,23)" fg:x="18003" fg:w="115"/><text x="23.8605%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (32 samples, 0.04%)</title><rect x="23.8111%" y="389" width="0.0420%" height="15" fill="rgb(245,15,42)" fg:x="18156" fg:w="32"/><text x="24.0611%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="23.8295%" y="373" width="0.0236%" height="15" fill="rgb(222,217,39)" fg:x="18170" fg:w="18"/><text x="24.0795%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (68 samples, 0.09%)</title><rect x="23.7652%" y="421" width="0.0892%" height="15" fill="rgb(210,219,27)" fg:x="18121" fg:w="68"/><text x="24.0152%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (65 samples, 0.09%)</title><rect x="23.7692%" y="405" width="0.0852%" height="15" fill="rgb(252,166,36)" fg:x="18124" fg:w="65"/><text x="24.0192%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (72 samples, 0.09%)</title><rect x="23.7626%" y="437" width="0.0944%" height="15" fill="rgb(245,132,34)" fg:x="18119" fg:w="72"/><text x="24.0126%" y="447.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (76 samples, 0.10%)</title><rect x="23.7613%" y="469" width="0.0997%" height="15" fill="rgb(236,54,3)" fg:x="18118" fg:w="76"/><text x="24.0113%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (75 samples, 0.10%)</title><rect x="23.7626%" y="453" width="0.0984%" height="15" fill="rgb(241,173,43)" fg:x="18119" fg:w="75"/><text x="24.0126%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (42 samples, 0.06%)</title><rect x="23.9725%" y="389" width="0.0551%" height="15" fill="rgb(215,190,9)" fg:x="18279" fg:w="42"/><text x="24.2225%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="23.9882%" y="373" width="0.0393%" height="15" fill="rgb(242,101,16)" fg:x="18291" fg:w="30"/><text x="24.2382%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (115 samples, 0.15%)</title><rect x="23.8925%" y="421" width="0.1508%" height="15" fill="rgb(223,190,21)" fg:x="18218" fg:w="115"/><text x="24.1425%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (110 samples, 0.14%)</title><rect x="23.8990%" y="405" width="0.1443%" height="15" fill="rgb(215,228,25)" fg:x="18223" fg:w="110"/><text x="24.1490%" y="415.50"></text></g><g><title>core::ptr::null_mut (12 samples, 0.02%)</title><rect x="24.0275%" y="389" width="0.0157%" height="15" fill="rgb(225,36,22)" fg:x="18321" fg:w="12"/><text x="24.2775%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (8 samples, 0.01%)</title><rect x="24.0656%" y="373" width="0.0105%" height="15" fill="rgb(251,106,46)" fg:x="18350" fg:w="8"/><text x="24.3156%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.04%)</title><rect x="24.0433%" y="421" width="0.0367%" height="15" fill="rgb(208,90,1)" fg:x="18333" fg:w="28"/><text x="24.2933%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.04%)</title><rect x="24.0446%" y="405" width="0.0354%" height="15" fill="rgb(243,10,4)" fg:x="18334" fg:w="27"/><text x="24.2946%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (18 samples, 0.02%)</title><rect x="24.0564%" y="389" width="0.0236%" height="15" fill="rgb(212,137,27)" fg:x="18343" fg:w="18"/><text x="24.3064%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="24.0800%" y="421" width="0.0131%" height="15" fill="rgb(231,220,49)" fg:x="18361" fg:w="10"/><text x="24.3300%" y="431.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.01%)</title><rect x="24.0813%" y="405" width="0.0118%" height="15" fill="rgb(237,96,20)" fg:x="18362" fg:w="9"/><text x="24.3313%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (172 samples, 0.23%)</title><rect x="23.8754%" y="437" width="0.2256%" height="15" fill="rgb(239,229,30)" fg:x="18205" fg:w="172"/><text x="24.1254%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (209 samples, 0.27%)</title><rect x="23.8728%" y="453" width="0.2741%" height="15" fill="rgb(219,65,33)" fg:x="18203" fg:w="209"/><text x="24.1228%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (35 samples, 0.05%)</title><rect x="24.1010%" y="437" width="0.0459%" height="15" fill="rgb(243,134,7)" fg:x="18377" fg:w="35"/><text x="24.3510%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (28 samples, 0.04%)</title><rect x="24.1102%" y="421" width="0.0367%" height="15" fill="rgb(216,177,54)" fg:x="18384" fg:w="28"/><text x="24.3602%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.01%)</title><rect x="24.1364%" y="405" width="0.0105%" height="15" fill="rgb(211,160,20)" fg:x="18404" fg:w="8"/><text x="24.3864%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="24.2216%" y="405" width="0.0197%" height="15" fill="rgb(239,85,39)" fg:x="18469" fg:w="15"/><text x="24.4716%" y="415.50"></text></g><g><title>core::ptr::invalid (10 samples, 0.01%)</title><rect x="24.2413%" y="389" width="0.0131%" height="15" fill="rgb(232,125,22)" fg:x="18484" fg:w="10"/><text x="24.4913%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (81 samples, 0.11%)</title><rect x="24.1626%" y="421" width="0.1062%" height="15" fill="rgb(244,57,34)" fg:x="18424" fg:w="81"/><text x="24.4126%" y="431.50"></text></g><g><title>core::ptr::null (21 samples, 0.03%)</title><rect x="24.2413%" y="405" width="0.0275%" height="15" fill="rgb(214,203,32)" fg:x="18484" fg:w="21"/><text x="24.4913%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.01%)</title><rect x="24.2544%" y="389" width="0.0144%" height="15" fill="rgb(207,58,43)" fg:x="18494" fg:w="11"/><text x="24.5044%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (314 samples, 0.41%)</title><rect x="23.8610%" y="469" width="0.4118%" height="15" fill="rgb(215,193,15)" fg:x="18194" fg:w="314"/><text x="24.1110%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (96 samples, 0.13%)</title><rect x="24.1469%" y="453" width="0.1259%" height="15" fill="rgb(232,15,44)" fg:x="18412" fg:w="96"/><text x="24.3969%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (96 samples, 0.13%)</title><rect x="24.1469%" y="437" width="0.1259%" height="15" fill="rgb(212,3,48)" fg:x="18412" fg:w="96"/><text x="24.3969%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="24.3344%" y="421" width="0.0393%" height="15" fill="rgb(218,128,7)" fg:x="18555" fg:w="30"/><text x="24.5844%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="24.3475%" y="405" width="0.0262%" height="15" fill="rgb(226,216,39)" fg:x="18565" fg:w="20"/><text x="24.5975%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (73 samples, 0.10%)</title><rect x="24.2833%" y="453" width="0.0957%" height="15" fill="rgb(243,47,51)" fg:x="18516" fg:w="73"/><text x="24.5333%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (73 samples, 0.10%)</title><rect x="24.2833%" y="437" width="0.0957%" height="15" fill="rgb(241,183,40)" fg:x="18516" fg:w="73"/><text x="24.5333%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (85 samples, 0.11%)</title><rect x="24.2767%" y="469" width="0.1115%" height="15" fill="rgb(231,217,32)" fg:x="18511" fg:w="85"/><text x="24.5267%" y="479.50"></text></g><g><title>__GI___libc_malloc (102 samples, 0.13%)</title><rect x="24.5311%" y="357" width="0.1338%" height="15" fill="rgb(229,61,38)" fg:x="18705" fg:w="102"/><text x="24.7811%" y="367.50"></text></g><g><title>_int_malloc (48 samples, 0.06%)</title><rect x="24.6020%" y="341" width="0.0630%" height="15" fill="rgb(225,210,5)" fg:x="18759" fg:w="48"/><text x="24.8520%" y="351.50"></text></g><g><title>alloc::alloc::alloc (113 samples, 0.15%)</title><rect x="24.5246%" y="373" width="0.1482%" height="15" fill="rgb(231,79,45)" fg:x="18700" fg:w="113"/><text x="24.7746%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (9 samples, 0.01%)</title><rect x="24.6728%" y="373" width="0.0118%" height="15" fill="rgb(224,100,7)" fg:x="18813" fg:w="9"/><text x="24.9228%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (36 samples, 0.05%)</title><rect x="24.7567%" y="341" width="0.0472%" height="15" fill="rgb(241,198,18)" fg:x="18877" fg:w="36"/><text x="25.0067%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="24.7751%" y="325" width="0.0289%" height="15" fill="rgb(252,97,53)" fg:x="18891" fg:w="22"/><text x="25.0251%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (109 samples, 0.14%)</title><rect x="24.6846%" y="373" width="0.1430%" height="15" fill="rgb(220,88,7)" fg:x="18822" fg:w="109"/><text x="24.9346%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (93 samples, 0.12%)</title><rect x="24.7056%" y="357" width="0.1220%" height="15" fill="rgb(213,176,14)" fg:x="18838" fg:w="93"/><text x="24.9556%" y="367.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.02%)</title><rect x="24.8039%" y="341" width="0.0236%" height="15" fill="rgb(246,73,7)" fg:x="18913" fg:w="18"/><text x="25.0539%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (11 samples, 0.01%)</title><rect x="24.8131%" y="325" width="0.0144%" height="15" fill="rgb(245,64,36)" fg:x="18920" fg:w="11"/><text x="25.0631%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (280 samples, 0.37%)</title><rect x="24.4721%" y="405" width="0.3672%" height="15" fill="rgb(245,80,10)" fg:x="18660" fg:w="280"/><text x="24.7221%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (278 samples, 0.36%)</title><rect x="24.4748%" y="389" width="0.3646%" height="15" fill="rgb(232,107,50)" fg:x="18662" fg:w="278"/><text x="24.7248%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (9 samples, 0.01%)</title><rect x="24.8275%" y="373" width="0.0118%" height="15" fill="rgb(253,3,0)" fg:x="18931" fg:w="9"/><text x="25.0775%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (10 samples, 0.01%)</title><rect x="24.9259%" y="373" width="0.0131%" height="15" fill="rgb(212,99,53)" fg:x="19006" fg:w="10"/><text x="25.1759%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (77 samples, 0.10%)</title><rect x="24.8393%" y="405" width="0.1010%" height="15" fill="rgb(249,111,54)" fg:x="18940" fg:w="77"/><text x="25.0893%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (76 samples, 0.10%)</title><rect x="24.8407%" y="389" width="0.0997%" height="15" fill="rgb(249,55,30)" fg:x="18941" fg:w="76"/><text x="25.0907%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (430 samples, 0.56%)</title><rect x="24.3882%" y="469" width="0.5639%" height="15" fill="rgb(237,47,42)" fg:x="18596" fg:w="430"/><text x="24.6382%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (430 samples, 0.56%)</title><rect x="24.3882%" y="453" width="0.5639%" height="15" fill="rgb(211,20,18)" fg:x="18596" fg:w="430"/><text x="24.6382%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (430 samples, 0.56%)</title><rect x="24.3882%" y="437" width="0.5639%" height="15" fill="rgb(231,203,46)" fg:x="18596" fg:w="430"/><text x="24.6382%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (423 samples, 0.55%)</title><rect x="24.3974%" y="421" width="0.5548%" height="15" fill="rgb(237,142,3)" fg:x="18603" fg:w="423"/><text x="24.6474%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (16 samples, 0.02%)</title><rect x="24.9521%" y="469" width="0.0210%" height="15" fill="rgb(241,107,1)" fg:x="19026" fg:w="16"/><text x="25.2021%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (43 samples, 0.06%)</title><rect x="24.9731%" y="469" width="0.0564%" height="15" fill="rgb(229,83,13)" fg:x="19042" fg:w="43"/><text x="25.2231%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (17 samples, 0.02%)</title><rect x="25.0072%" y="453" width="0.0223%" height="15" fill="rgb(241,91,40)" fg:x="19068" fg:w="17"/><text x="25.2572%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.03%)</title><rect x="25.2511%" y="405" width="0.0341%" height="15" fill="rgb(225,3,45)" fg:x="19254" fg:w="26"/><text x="25.5011%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="25.4452%" y="373" width="0.0393%" height="15" fill="rgb(244,223,14)" fg:x="19402" fg:w="30"/><text x="25.6952%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (141 samples, 0.18%)</title><rect x="25.3338%" y="389" width="0.1849%" height="15" fill="rgb(224,124,37)" fg:x="19317" fg:w="141"/><text x="25.5838%" y="399.50"></text></g><g><title>core::ptr::null (26 samples, 0.03%)</title><rect x="25.4846%" y="373" width="0.0341%" height="15" fill="rgb(251,171,30)" fg:x="19432" fg:w="26"/><text x="25.7346%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (20 samples, 0.03%)</title><rect x="25.4925%" y="357" width="0.0262%" height="15" fill="rgb(236,46,54)" fg:x="19438" fg:w="20"/><text x="25.7425%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (91 samples, 0.12%)</title><rect x="25.6892%" y="373" width="0.1193%" height="15" fill="rgb(245,213,5)" fg:x="19588" fg:w="91"/><text x="25.9392%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (60 samples, 0.08%)</title><rect x="25.7298%" y="357" width="0.0787%" height="15" fill="rgb(230,144,27)" fg:x="19619" fg:w="60"/><text x="25.9798%" y="367.50"></text></g><g><title>core::ptr::invalid_mut (13 samples, 0.02%)</title><rect x="25.8085%" y="357" width="0.0170%" height="15" fill="rgb(220,86,6)" fg:x="19679" fg:w="13"/><text x="26.0585%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (258 samples, 0.34%)</title><rect x="25.5187%" y="389" width="0.3384%" height="15" fill="rgb(240,20,13)" fg:x="19458" fg:w="258"/><text x="25.7687%" y="399.50"></text></g><g><title>core::ptr::null_mut (37 samples, 0.05%)</title><rect x="25.8085%" y="373" width="0.0485%" height="15" fill="rgb(217,89,34)" fg:x="19679" fg:w="37"/><text x="26.0585%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (24 samples, 0.03%)</title><rect x="25.8256%" y="357" width="0.0315%" height="15" fill="rgb(229,13,5)" fg:x="19692" fg:w="24"/><text x="26.0756%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="25.8767%" y="373" width="0.0105%" height="15" fill="rgb(244,67,35)" fg:x="19731" fg:w="8"/><text x="26.1267%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="25.8767%" y="357" width="0.0105%" height="15" fill="rgb(221,40,2)" fg:x="19731" fg:w="8"/><text x="26.1267%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (457 samples, 0.60%)</title><rect x="25.2892%" y="405" width="0.5993%" height="15" fill="rgb(237,157,21)" fg:x="19283" fg:w="457"/><text x="25.5392%" y="415.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (24 samples, 0.03%)</title><rect x="25.8570%" y="389" width="0.0315%" height="15" fill="rgb(222,94,11)" fg:x="19716" fg:w="24"/><text x="26.1070%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (64 samples, 0.08%)</title><rect x="26.0839%" y="293" width="0.0839%" height="15" fill="rgb(249,113,6)" fg:x="19889" fg:w="64"/><text x="26.3339%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (37 samples, 0.05%)</title><rect x="26.1193%" y="277" width="0.0485%" height="15" fill="rgb(238,137,36)" fg:x="19916" fg:w="37"/><text x="26.3693%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.01%)</title><rect x="26.1679%" y="277" width="0.0118%" height="15" fill="rgb(210,102,26)" fg:x="19953" fg:w="9"/><text x="26.4179%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (152 samples, 0.20%)</title><rect x="25.9869%" y="325" width="0.1993%" height="15" fill="rgb(218,30,30)" fg:x="19815" fg:w="152"/><text x="26.2369%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (145 samples, 0.19%)</title><rect x="25.9961%" y="309" width="0.1902%" height="15" fill="rgb(214,67,26)" fg:x="19822" fg:w="145"/><text x="26.2461%" y="319.50"></text></g><g><title>core::ptr::null_mut (14 samples, 0.02%)</title><rect x="26.1679%" y="293" width="0.0184%" height="15" fill="rgb(251,9,53)" fg:x="19953" fg:w="14"/><text x="26.4179%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (160 samples, 0.21%)</title><rect x="25.9816%" y="341" width="0.2098%" height="15" fill="rgb(228,204,25)" fg:x="19811" fg:w="160"/><text x="26.2316%" y="351.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (166 samples, 0.22%)</title><rect x="25.9751%" y="373" width="0.2177%" height="15" fill="rgb(207,153,8)" fg:x="19806" fg:w="166"/><text x="26.2251%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (163 samples, 0.21%)</title><rect x="25.9790%" y="357" width="0.2138%" height="15" fill="rgb(242,9,16)" fg:x="19809" fg:w="163"/><text x="26.2290%" y="367.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (184 samples, 0.24%)</title><rect x="25.9567%" y="389" width="0.2413%" height="15" fill="rgb(217,211,10)" fg:x="19792" fg:w="184"/><text x="26.2067%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (937 samples, 1.23%)</title><rect x="25.0715%" y="437" width="1.2289%" height="15" fill="rgb(219,228,52)" fg:x="19117" fg:w="937"/><text x="25.3215%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (927 samples, 1.22%)</title><rect x="25.0846%" y="421" width="1.2157%" height="15" fill="rgb(231,92,29)" fg:x="19127" fg:w="927"/><text x="25.3346%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (314 samples, 0.41%)</title><rect x="25.8885%" y="405" width="0.4118%" height="15" fill="rgb(232,8,23)" fg:x="19740" fg:w="314"/><text x="26.1385%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (78 samples, 0.10%)</title><rect x="26.1980%" y="389" width="0.1023%" height="15" fill="rgb(216,211,34)" fg:x="19976" fg:w="78"/><text x="26.4480%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (70 samples, 0.09%)</title><rect x="26.2085%" y="373" width="0.0918%" height="15" fill="rgb(236,151,0)" fg:x="19984" fg:w="70"/><text x="26.4585%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (22 samples, 0.03%)</title><rect x="26.2715%" y="357" width="0.0289%" height="15" fill="rgb(209,168,3)" fg:x="20032" fg:w="22"/><text x="26.5215%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="26.3567%" y="389" width="0.0262%" height="15" fill="rgb(208,129,28)" fg:x="20097" fg:w="20"/><text x="26.6067%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,037 samples, 1.36%)</title><rect x="25.0295%" y="469" width="1.3600%" height="15" fill="rgb(229,78,22)" fg:x="19085" fg:w="1037"/><text x="25.2795%" y="479.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1,008 samples, 1.32%)</title><rect x="25.0675%" y="453" width="1.3220%" height="15" fill="rgb(228,187,13)" fg:x="19114" fg:w="1008"/><text x="25.3175%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (66 samples, 0.09%)</title><rect x="26.3030%" y="437" width="0.0866%" height="15" fill="rgb(240,119,24)" fg:x="20056" fg:w="66"/><text x="26.5530%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (66 samples, 0.09%)</title><rect x="26.3030%" y="421" width="0.0866%" height="15" fill="rgb(209,194,42)" fg:x="20056" fg:w="66"/><text x="26.5530%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (55 samples, 0.07%)</title><rect x="26.3174%" y="405" width="0.0721%" height="15" fill="rgb(247,200,46)" fg:x="20067" fg:w="55"/><text x="26.5674%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (19 samples, 0.02%)</title><rect x="26.3974%" y="469" width="0.0249%" height="15" fill="rgb(218,76,16)" fg:x="20128" fg:w="19"/><text x="26.6474%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (41 samples, 0.05%)</title><rect x="26.4223%" y="469" width="0.0538%" height="15" fill="rgb(225,21,48)" fg:x="20147" fg:w="41"/><text x="26.6723%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (30 samples, 0.04%)</title><rect x="26.4367%" y="453" width="0.0393%" height="15" fill="rgb(239,223,50)" fg:x="20158" fg:w="30"/><text x="26.6867%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (29 samples, 0.04%)</title><rect x="26.4380%" y="437" width="0.0380%" height="15" fill="rgb(244,45,21)" fg:x="20159" fg:w="29"/><text x="26.6880%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (22 samples, 0.03%)</title><rect x="26.4472%" y="421" width="0.0289%" height="15" fill="rgb(232,33,43)" fg:x="20166" fg:w="22"/><text x="26.6972%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.02%)</title><rect x="26.4551%" y="405" width="0.0210%" height="15" fill="rgb(209,8,3)" fg:x="20172" fg:w="16"/><text x="26.7051%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="26.5993%" y="421" width="0.0249%" height="15" fill="rgb(214,25,53)" fg:x="20282" fg:w="19"/><text x="26.8493%" y="431.50"></text></g><g><title>core::ptr::invalid (8 samples, 0.01%)</title><rect x="26.6243%" y="405" width="0.0105%" height="15" fill="rgb(254,186,54)" fg:x="20301" fg:w="8"/><text x="26.8743%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (140 samples, 0.18%)</title><rect x="26.4761%" y="469" width="0.1836%" height="15" fill="rgb(208,174,49)" fg:x="20188" fg:w="140"/><text x="26.7261%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (140 samples, 0.18%)</title><rect x="26.4761%" y="453" width="0.1836%" height="15" fill="rgb(233,191,51)" fg:x="20188" fg:w="140"/><text x="26.7261%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (98 samples, 0.13%)</title><rect x="26.5311%" y="437" width="0.1285%" height="15" fill="rgb(222,134,10)" fg:x="20230" fg:w="98"/><text x="26.7811%" y="447.50"></text></g><g><title>core::ptr::null (27 samples, 0.04%)</title><rect x="26.6243%" y="421" width="0.0354%" height="15" fill="rgb(230,226,20)" fg:x="20301" fg:w="27"/><text x="26.8743%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (19 samples, 0.02%)</title><rect x="26.6348%" y="405" width="0.0249%" height="15" fill="rgb(251,111,25)" fg:x="20309" fg:w="19"/><text x="26.8848%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (19 samples, 0.02%)</title><rect x="26.6597%" y="469" width="0.0249%" height="15" fill="rgb(224,40,46)" fg:x="20328" fg:w="19"/><text x="26.9097%" y="479.50"></text></g><g><title>core::ptr::metadata::metadata (18 samples, 0.02%)</title><rect x="26.6610%" y="453" width="0.0236%" height="15" fill="rgb(236,108,47)" fg:x="20329" fg:w="18"/><text x="26.9110%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (70 samples, 0.09%)</title><rect x="26.7515%" y="405" width="0.0918%" height="15" fill="rgb(234,93,0)" fg:x="20398" fg:w="70"/><text x="27.0015%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (123 samples, 0.16%)</title><rect x="26.6846%" y="469" width="0.1613%" height="15" fill="rgb(224,213,32)" fg:x="20347" fg:w="123"/><text x="26.9346%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (103 samples, 0.14%)</title><rect x="26.7108%" y="453" width="0.1351%" height="15" fill="rgb(251,11,48)" fg:x="20367" fg:w="103"/><text x="26.9608%" y="463.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (80 samples, 0.10%)</title><rect x="26.7410%" y="437" width="0.1049%" height="15" fill="rgb(236,173,5)" fg:x="20390" fg:w="80"/><text x="26.9910%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (79 samples, 0.10%)</title><rect x="26.7423%" y="421" width="0.1036%" height="15" fill="rgb(230,95,12)" fg:x="20391" fg:w="79"/><text x="26.9923%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (17 samples, 0.02%)</title><rect x="26.8459%" y="469" width="0.0223%" height="15" fill="rgb(232,209,1)" fg:x="20470" fg:w="17"/><text x="27.0959%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts (17 samples, 0.02%)</title><rect x="26.8459%" y="453" width="0.0223%" height="15" fill="rgb(232,6,1)" fg:x="20470" fg:w="17"/><text x="27.0959%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (17 samples, 0.02%)</title><rect x="26.8459%" y="437" width="0.0223%" height="15" fill="rgb(210,224,50)" fg:x="20470" fg:w="17"/><text x="27.0959%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy (3,210 samples, 4.21%)</title><rect x="22.6715%" y="485" width="4.2098%" height="15" fill="rgb(228,127,35)" fg:x="17287" fg:w="3210"/><text x="22.9215%" y="495.50">alloc..</text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (10 samples, 0.01%)</title><rect x="26.8682%" y="469" width="0.0131%" height="15" fill="rgb(245,102,45)" fg:x="20487" fg:w="10"/><text x="27.1182%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (8 samples, 0.01%)</title><rect x="26.8708%" y="453" width="0.0105%" height="15" fill="rgb(214,1,49)" fg:x="20489" fg:w="8"/><text x="27.1208%" y="463.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (23 samples, 0.03%)</title><rect x="26.8813%" y="485" width="0.0302%" height="15" fill="rgb(226,163,40)" fg:x="20497" fg:w="23"/><text x="27.1313%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (3,236 samples, 4.24%)</title><rect x="22.6689%" y="517" width="4.2439%" height="15" fill="rgb(239,212,28)" fg:x="17285" fg:w="3236"/><text x="22.9189%" y="527.50">alloc..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3,235 samples, 4.24%)</title><rect x="22.6702%" y="501" width="4.2426%" height="15" fill="rgb(220,20,13)" fg:x="17286" fg:w="3235"/><text x="22.9202%" y="511.50">alloc..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (15 samples, 0.02%)</title><rect x="27.0911%" y="437" width="0.0197%" height="15" fill="rgb(210,164,35)" fg:x="20657" fg:w="15"/><text x="27.3411%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.14%)</title><rect x="26.9915%" y="485" width="0.1377%" height="15" fill="rgb(248,109,41)" fg:x="20581" fg:w="105"/><text x="27.2415%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (80 samples, 0.10%)</title><rect x="27.0243%" y="469" width="0.1049%" height="15" fill="rgb(238,23,50)" fg:x="20606" fg:w="80"/><text x="27.2743%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (75 samples, 0.10%)</title><rect x="27.0308%" y="453" width="0.0984%" height="15" fill="rgb(211,48,49)" fg:x="20611" fg:w="75"/><text x="27.2808%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (14 samples, 0.02%)</title><rect x="27.1108%" y="437" width="0.0184%" height="15" fill="rgb(223,36,21)" fg:x="20672" fg:w="14"/><text x="27.3608%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (74 samples, 0.10%)</title><rect x="27.3980%" y="357" width="0.0970%" height="15" fill="rgb(207,123,46)" fg:x="20891" fg:w="74"/><text x="27.6480%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (48 samples, 0.06%)</title><rect x="27.4321%" y="341" width="0.0630%" height="15" fill="rgb(240,218,32)" fg:x="20917" fg:w="48"/><text x="27.6821%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (154 samples, 0.20%)</title><rect x="27.2957%" y="389" width="0.2020%" height="15" fill="rgb(252,5,43)" fg:x="20813" fg:w="154"/><text x="27.5457%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (150 samples, 0.20%)</title><rect x="27.3010%" y="373" width="0.1967%" height="15" fill="rgb(252,84,19)" fg:x="20817" fg:w="150"/><text x="27.5510%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (165 samples, 0.22%)</title><rect x="27.2892%" y="405" width="0.2164%" height="15" fill="rgb(243,152,39)" fg:x="20808" fg:w="165"/><text x="27.5392%" y="415.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.01%)</title><rect x="27.5489%" y="357" width="0.0105%" height="15" fill="rgb(234,160,15)" fg:x="21006" fg:w="8"/><text x="27.7989%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (265 samples, 0.35%)</title><rect x="27.2170%" y="469" width="0.3475%" height="15" fill="rgb(237,34,20)" fg:x="20753" fg:w="265"/><text x="27.4670%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::lt (255 samples, 0.33%)</title><rect x="27.2302%" y="453" width="0.3344%" height="15" fill="rgb(229,97,13)" fg:x="20763" fg:w="255"/><text x="27.4802%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (217 samples, 0.28%)</title><rect x="27.2800%" y="437" width="0.2846%" height="15" fill="rgb(234,71,50)" fg:x="20801" fg:w="217"/><text x="27.5300%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (215 samples, 0.28%)</title><rect x="27.2826%" y="421" width="0.2820%" height="15" fill="rgb(253,155,4)" fg:x="20803" fg:w="215"/><text x="27.5326%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (45 samples, 0.06%)</title><rect x="27.5056%" y="405" width="0.0590%" height="15" fill="rgb(222,185,37)" fg:x="20973" fg:w="45"/><text x="27.7556%" y="415.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (42 samples, 0.06%)</title><rect x="27.5095%" y="389" width="0.0551%" height="15" fill="rgb(251,177,13)" fg:x="20976" fg:w="42"/><text x="27.7595%" y="399.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (34 samples, 0.04%)</title><rect x="27.5200%" y="373" width="0.0446%" height="15" fill="rgb(250,179,40)" fg:x="20984" fg:w="34"/><text x="27.7700%" y="383.50"></text></g><g><title>alloc::slice::insert_head (349 samples, 0.46%)</title><rect x="27.1292%" y="485" width="0.4577%" height="15" fill="rgb(242,44,2)" fg:x="20686" fg:w="349"/><text x="27.3792%" y="495.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="27.5725%" y="469" width="0.0144%" height="15" fill="rgb(216,177,13)" fg:x="21024" fg:w="11"/><text x="27.8225%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::rev (21 samples, 0.03%)</title><rect x="27.5869%" y="485" width="0.0275%" height="15" fill="rgb(216,106,43)" fg:x="21035" fg:w="21"/><text x="27.8369%" y="495.50"></text></g><g><title>core::iter::adapters::rev::Rev&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="27.6000%" y="469" width="0.0144%" height="15" fill="rgb(216,183,2)" fg:x="21045" fg:w="11"/><text x="27.8500%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="27.6472%" y="421" width="0.0131%" height="15" fill="rgb(249,75,3)" fg:x="21081" fg:w="10"/><text x="27.8972%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.01%)</title><rect x="27.6472%" y="405" width="0.0131%" height="15" fill="rgb(219,67,39)" fg:x="21081" fg:w="10"/><text x="27.8972%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (584 samples, 0.77%)</title><rect x="26.9128%" y="517" width="0.7659%" height="15" fill="rgb(253,228,2)" fg:x="20521" fg:w="584"/><text x="27.1628%" y="527.50"></text></g><g><title>alloc::slice::merge_sort (580 samples, 0.76%)</title><rect x="26.9180%" y="501" width="0.7607%" height="15" fill="rgb(235,138,27)" fg:x="20525" fg:w="580"/><text x="27.1680%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (47 samples, 0.06%)</title><rect x="27.6170%" y="485" width="0.0616%" height="15" fill="rgb(236,97,51)" fg:x="21058" fg:w="47"/><text x="27.8670%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (42 samples, 0.06%)</title><rect x="27.6236%" y="469" width="0.0551%" height="15" fill="rgb(240,80,30)" fg:x="21063" fg:w="42"/><text x="27.8736%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (30 samples, 0.04%)</title><rect x="27.6393%" y="453" width="0.0393%" height="15" fill="rgb(230,178,19)" fg:x="21075" fg:w="30"/><text x="27.8893%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (24 samples, 0.03%)</title><rect x="27.6472%" y="437" width="0.0315%" height="15" fill="rgb(210,190,27)" fg:x="21081" fg:w="24"/><text x="27.8972%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (14 samples, 0.02%)</title><rect x="27.6603%" y="421" width="0.0184%" height="15" fill="rgb(222,107,31)" fg:x="21091" fg:w="14"/><text x="27.9103%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="27.6603%" y="405" width="0.0184%" height="15" fill="rgb(216,127,34)" fg:x="21091" fg:w="14"/><text x="27.9103%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (27 samples, 0.04%)</title><rect x="27.7508%" y="421" width="0.0354%" height="15" fill="rgb(234,116,52)" fg:x="21160" fg:w="27"/><text x="28.0008%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="27.7587%" y="405" width="0.0275%" height="15" fill="rgb(222,124,15)" fg:x="21166" fg:w="21"/><text x="28.0087%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (12 samples, 0.02%)</title><rect x="27.7862%" y="405" width="0.0157%" height="15" fill="rgb(231,179,28)" fg:x="21187" fg:w="12"/><text x="28.0362%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (81 samples, 0.11%)</title><rect x="27.7036%" y="453" width="0.1062%" height="15" fill="rgb(226,93,45)" fg:x="21124" fg:w="81"/><text x="27.9536%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (79 samples, 0.10%)</title><rect x="27.7062%" y="437" width="0.1036%" height="15" fill="rgb(215,8,51)" fg:x="21126" fg:w="79"/><text x="27.9562%" y="447.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.02%)</title><rect x="27.7862%" y="421" width="0.0236%" height="15" fill="rgb(223,106,5)" fg:x="21187" fg:w="18"/><text x="28.0362%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (11 samples, 0.01%)</title><rect x="27.8295%" y="421" width="0.0144%" height="15" fill="rgb(250,191,5)" fg:x="21220" fg:w="11"/><text x="28.0795%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="27.8846%" y="389" width="0.0118%" height="15" fill="rgb(242,132,44)" fg:x="21262" fg:w="9"/><text x="28.1346%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (47 samples, 0.06%)</title><rect x="27.9292%" y="373" width="0.0616%" height="15" fill="rgb(251,152,29)" fg:x="21296" fg:w="47"/><text x="28.1792%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (46 samples, 0.06%)</title><rect x="27.9305%" y="357" width="0.0603%" height="15" fill="rgb(218,179,5)" fg:x="21297" fg:w="46"/><text x="28.1805%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (84 samples, 0.11%)</title><rect x="27.8964%" y="389" width="0.1102%" height="15" fill="rgb(227,67,19)" fg:x="21271" fg:w="84"/><text x="28.1464%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (9 samples, 0.01%)</title><rect x="27.9948%" y="373" width="0.0118%" height="15" fill="rgb(233,119,31)" fg:x="21346" fg:w="9"/><text x="28.2448%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (22 samples, 0.03%)</title><rect x="28.0066%" y="389" width="0.0289%" height="15" fill="rgb(241,120,22)" fg:x="21355" fg:w="22"/><text x="28.2566%" y="399.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (11 samples, 0.01%)</title><rect x="28.0210%" y="373" width="0.0144%" height="15" fill="rgb(224,102,30)" fg:x="21366" fg:w="11"/><text x="28.2710%" y="383.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="28.2938%" y="293" width="0.0144%" height="15" fill="rgb(210,164,37)" fg:x="21574" fg:w="11"/><text x="28.5438%" y="303.50"></text></g><g><title>_int_free (22 samples, 0.03%)</title><rect x="28.3108%" y="293" width="0.0289%" height="15" fill="rgb(226,191,16)" fg:x="21587" fg:w="22"/><text x="28.5608%" y="303.50"></text></g><g><title>_int_malloc (78 samples, 0.10%)</title><rect x="28.3397%" y="293" width="0.1023%" height="15" fill="rgb(214,40,45)" fg:x="21609" fg:w="78"/><text x="28.5897%" y="303.50"></text></g><g><title>__GI___libc_realloc (191 samples, 0.25%)</title><rect x="28.1941%" y="325" width="0.2505%" height="15" fill="rgb(244,29,26)" fg:x="21498" fg:w="191"/><text x="28.4441%" y="335.50"></text></g><g><title>_int_realloc (143 samples, 0.19%)</title><rect x="28.2570%" y="309" width="0.1875%" height="15" fill="rgb(216,16,5)" fg:x="21546" fg:w="143"/><text x="28.5070%" y="319.50"></text></g><g><title>alloc::alloc::realloc (217 samples, 0.28%)</title><rect x="28.1666%" y="341" width="0.2846%" height="15" fill="rgb(249,76,35)" fg:x="21477" fg:w="217"/><text x="28.4166%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (63 samples, 0.08%)</title><rect x="28.5351%" y="309" width="0.0826%" height="15" fill="rgb(207,11,44)" fg:x="21758" fg:w="63"/><text x="28.7851%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (45 samples, 0.06%)</title><rect x="28.5587%" y="293" width="0.0590%" height="15" fill="rgb(228,190,49)" fg:x="21776" fg:w="45"/><text x="28.8087%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (134 samples, 0.18%)</title><rect x="28.4643%" y="341" width="0.1757%" height="15" fill="rgb(214,173,12)" fg:x="21704" fg:w="134"/><text x="28.7143%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (121 samples, 0.16%)</title><rect x="28.4813%" y="325" width="0.1587%" height="15" fill="rgb(218,26,35)" fg:x="21717" fg:w="121"/><text x="28.7313%" y="335.50"></text></g><g><title>core::ptr::null_mut (17 samples, 0.02%)</title><rect x="28.6177%" y="309" width="0.0223%" height="15" fill="rgb(220,200,19)" fg:x="21821" fg:w="17"/><text x="28.8677%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (10 samples, 0.01%)</title><rect x="28.6269%" y="293" width="0.0131%" height="15" fill="rgb(239,95,49)" fg:x="21828" fg:w="10"/><text x="28.8769%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (458 samples, 0.60%)</title><rect x="28.0721%" y="373" width="0.6007%" height="15" fill="rgb(235,85,53)" fg:x="21405" fg:w="458"/><text x="28.3221%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (456 samples, 0.60%)</title><rect x="28.0748%" y="357" width="0.5980%" height="15" fill="rgb(233,133,31)" fg:x="21407" fg:w="456"/><text x="28.3248%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (25 samples, 0.03%)</title><rect x="28.6400%" y="341" width="0.0328%" height="15" fill="rgb(218,25,20)" fg:x="21838" fg:w="25"/><text x="28.8900%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (21 samples, 0.03%)</title><rect x="28.6452%" y="325" width="0.0275%" height="15" fill="rgb(252,210,38)" fg:x="21842" fg:w="21"/><text x="28.8952%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (19 samples, 0.02%)</title><rect x="28.6479%" y="309" width="0.0249%" height="15" fill="rgb(242,134,21)" fg:x="21844" fg:w="19"/><text x="28.8979%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="28.6728%" y="373" width="0.0131%" height="15" fill="rgb(213,28,48)" fg:x="21863" fg:w="10"/><text x="28.9228%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (531 samples, 0.70%)</title><rect x="28.0354%" y="389" width="0.6964%" height="15" fill="rgb(250,196,2)" fg:x="21377" fg:w="531"/><text x="28.2854%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (29 samples, 0.04%)</title><rect x="28.6938%" y="373" width="0.0380%" height="15" fill="rgb(227,5,17)" fg:x="21879" fg:w="29"/><text x="28.9438%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (104 samples, 0.14%)</title><rect x="28.7318%" y="389" width="0.1364%" height="15" fill="rgb(221,226,24)" fg:x="21908" fg:w="104"/><text x="28.9818%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (103 samples, 0.14%)</title><rect x="28.7331%" y="373" width="0.1351%" height="15" fill="rgb(211,5,48)" fg:x="21909" fg:w="103"/><text x="28.9831%" y="383.50"></text></g><g><title>core::cmp::max (53 samples, 0.07%)</title><rect x="28.8682%" y="389" width="0.0695%" height="15" fill="rgb(219,150,6)" fg:x="22012" fg:w="53"/><text x="29.1182%" y="399.50"></text></g><g><title>core::cmp::Ord::max (51 samples, 0.07%)</title><rect x="28.8708%" y="373" width="0.0669%" height="15" fill="rgb(251,46,16)" fg:x="22014" fg:w="51"/><text x="29.1208%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (28 samples, 0.04%)</title><rect x="28.9010%" y="357" width="0.0367%" height="15" fill="rgb(220,204,40)" fg:x="22037" fg:w="28"/><text x="29.1510%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (44 samples, 0.06%)</title><rect x="28.9377%" y="389" width="0.0577%" height="15" fill="rgb(211,85,2)" fg:x="22065" fg:w="44"/><text x="29.1877%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (9 samples, 0.01%)</title><rect x="28.9836%" y="373" width="0.0118%" height="15" fill="rgb(229,17,7)" fg:x="22100" fg:w="9"/><text x="29.2336%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (887 samples, 1.16%)</title><rect x="27.8466%" y="405" width="1.1633%" height="15" fill="rgb(239,72,28)" fg:x="21233" fg:w="887"/><text x="28.0966%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (11 samples, 0.01%)</title><rect x="28.9954%" y="389" width="0.0144%" height="15" fill="rgb(230,47,54)" fg:x="22109" fg:w="11"/><text x="29.2454%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (924 samples, 1.21%)</title><rect x="27.8111%" y="453" width="1.2118%" height="15" fill="rgb(214,50,8)" fg:x="21206" fg:w="924"/><text x="28.0611%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (920 samples, 1.21%)</title><rect x="27.8164%" y="437" width="1.2066%" height="15" fill="rgb(216,198,43)" fg:x="21210" fg:w="920"/><text x="28.0664%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (899 samples, 1.18%)</title><rect x="27.8439%" y="421" width="1.1790%" height="15" fill="rgb(234,20,35)" fg:x="21231" fg:w="899"/><text x="28.0939%" y="431.50"></text></g><g><title>alloc::raw_vec::handle_reserve (10 samples, 0.01%)</title><rect x="29.0098%" y="405" width="0.0131%" height="15" fill="rgb(254,45,19)" fg:x="22120" fg:w="10"/><text x="29.2598%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,023 samples, 1.34%)</title><rect x="27.6866%" y="469" width="1.3416%" height="15" fill="rgb(219,14,44)" fg:x="21111" fg:w="1023"/><text x="27.9366%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,073 samples, 1.41%)</title><rect x="27.6866%" y="485" width="1.4072%" height="15" fill="rgb(217,220,26)" fg:x="21111" fg:w="1073"/><text x="27.9366%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (50 samples, 0.07%)</title><rect x="29.0282%" y="469" width="0.0656%" height="15" fill="rgb(213,158,28)" fg:x="22134" fg:w="50"/><text x="29.2782%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (41 samples, 0.05%)</title><rect x="29.0400%" y="453" width="0.0538%" height="15" fill="rgb(252,51,52)" fg:x="22143" fg:w="41"/><text x="29.2900%" y="463.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.01%)</title><rect x="29.0833%" y="437" width="0.0105%" height="15" fill="rgb(246,89,16)" fg:x="22176" fg:w="8"/><text x="29.3333%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (35 samples, 0.05%)</title><rect x="29.1961%" y="437" width="0.0459%" height="15" fill="rgb(216,158,49)" fg:x="22262" fg:w="35"/><text x="29.4461%" y="447.50"></text></g><g><title>core::ptr::invalid (15 samples, 0.02%)</title><rect x="29.2420%" y="421" width="0.0197%" height="15" fill="rgb(236,107,19)" fg:x="22297" fg:w="15"/><text x="29.4920%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,218 samples, 1.60%)</title><rect x="27.6813%" y="501" width="1.5974%" height="15" fill="rgb(228,185,30)" fg:x="21107" fg:w="1218"/><text x="27.9313%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (141 samples, 0.18%)</title><rect x="29.0938%" y="485" width="0.1849%" height="15" fill="rgb(246,134,8)" fg:x="22184" fg:w="141"/><text x="29.3438%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (141 samples, 0.18%)</title><rect x="29.0938%" y="469" width="0.1849%" height="15" fill="rgb(214,143,50)" fg:x="22184" fg:w="141"/><text x="29.3438%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (115 samples, 0.15%)</title><rect x="29.1279%" y="453" width="0.1508%" height="15" fill="rgb(228,75,8)" fg:x="22210" fg:w="115"/><text x="29.3779%" y="463.50"></text></g><g><title>core::ptr::null (28 samples, 0.04%)</title><rect x="29.2420%" y="437" width="0.0367%" height="15" fill="rgb(207,175,4)" fg:x="22297" fg:w="28"/><text x="29.4920%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (13 samples, 0.02%)</title><rect x="29.2616%" y="421" width="0.0170%" height="15" fill="rgb(205,108,24)" fg:x="22312" fg:w="13"/><text x="29.5116%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1,224 samples, 1.61%)</title><rect x="27.6787%" y="517" width="1.6052%" height="15" fill="rgb(244,120,49)" fg:x="21105" fg:w="1224"/><text x="27.9287%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (32 samples, 0.04%)</title><rect x="29.4925%" y="421" width="0.0420%" height="15" fill="rgb(223,47,38)" fg:x="22488" fg:w="32"/><text x="29.7425%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (31 samples, 0.04%)</title><rect x="29.4938%" y="405" width="0.0407%" height="15" fill="rgb(229,179,11)" fg:x="22489" fg:w="31"/><text x="29.7438%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (40 samples, 0.05%)</title><rect x="29.5830%" y="389" width="0.0525%" height="15" fill="rgb(231,122,1)" fg:x="22557" fg:w="40"/><text x="29.8330%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.03%)</title><rect x="29.6052%" y="373" width="0.0302%" height="15" fill="rgb(245,119,9)" fg:x="22574" fg:w="23"/><text x="29.8552%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (82 samples, 0.11%)</title><rect x="29.5344%" y="421" width="0.1075%" height="15" fill="rgb(241,163,25)" fg:x="22520" fg:w="82"/><text x="29.7844%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (81 samples, 0.11%)</title><rect x="29.5357%" y="405" width="0.1062%" height="15" fill="rgb(217,214,3)" fg:x="22521" fg:w="81"/><text x="29.7857%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.04%)</title><rect x="29.6420%" y="421" width="0.0393%" height="15" fill="rgb(240,86,28)" fg:x="22602" fg:w="30"/><text x="29.8920%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="29.6564%" y="405" width="0.0249%" height="15" fill="rgb(215,47,9)" fg:x="22613" fg:w="19"/><text x="29.9064%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (13 samples, 0.02%)</title><rect x="29.6643%" y="389" width="0.0170%" height="15" fill="rgb(252,25,45)" fg:x="22619" fg:w="13"/><text x="29.9143%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold (11 samples, 0.01%)</title><rect x="29.7495%" y="389" width="0.0144%" height="15" fill="rgb(251,164,9)" fg:x="22684" fg:w="11"/><text x="29.9995%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (47 samples, 0.06%)</title><rect x="29.9659%" y="341" width="0.0616%" height="15" fill="rgb(233,194,0)" fg:x="22849" fg:w="47"/><text x="30.2159%" y="351.50"></text></g><g><title>core::ptr::invalid (14 samples, 0.02%)</title><rect x="30.0275%" y="325" width="0.0184%" height="15" fill="rgb(249,111,24)" fg:x="22896" fg:w="14"/><text x="30.2775%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (173 samples, 0.23%)</title><rect x="29.8413%" y="357" width="0.2269%" height="15" fill="rgb(250,223,3)" fg:x="22754" fg:w="173"/><text x="30.0913%" y="367.50"></text></g><g><title>core::ptr::null (31 samples, 0.04%)</title><rect x="30.0275%" y="341" width="0.0407%" height="15" fill="rgb(236,178,37)" fg:x="22896" fg:w="31"/><text x="30.2775%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (17 samples, 0.02%)</title><rect x="30.0459%" y="325" width="0.0223%" height="15" fill="rgb(241,158,50)" fg:x="22910" fg:w="17"/><text x="30.2959%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (75 samples, 0.10%)</title><rect x="30.2243%" y="341" width="0.0984%" height="15" fill="rgb(213,121,41)" fg:x="23046" fg:w="75"/><text x="30.4743%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (49 samples, 0.06%)</title><rect x="30.2584%" y="325" width="0.0643%" height="15" fill="rgb(240,92,3)" fg:x="23072" fg:w="49"/><text x="30.5084%" y="335.50"></text></g><g><title>core::ptr::invalid_mut (13 samples, 0.02%)</title><rect x="30.3226%" y="325" width="0.0170%" height="15" fill="rgb(205,123,3)" fg:x="23121" fg:w="13"/><text x="30.5726%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (218 samples, 0.29%)</title><rect x="30.0682%" y="357" width="0.2859%" height="15" fill="rgb(205,97,47)" fg:x="22927" fg:w="218"/><text x="30.3182%" y="367.50"></text></g><g><title>core::ptr::null_mut (24 samples, 0.03%)</title><rect x="30.3226%" y="341" width="0.0315%" height="15" fill="rgb(247,152,14)" fg:x="23121" fg:w="24"/><text x="30.5726%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (11 samples, 0.01%)</title><rect x="30.3397%" y="325" width="0.0144%" height="15" fill="rgb(248,195,53)" fg:x="23134" fg:w="11"/><text x="30.5897%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (423 samples, 0.55%)</title><rect x="29.8203%" y="373" width="0.5548%" height="15" fill="rgb(226,201,16)" fg:x="22738" fg:w="423"/><text x="30.0703%" y="383.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (16 samples, 0.02%)</title><rect x="30.3541%" y="357" width="0.0210%" height="15" fill="rgb(205,98,0)" fg:x="23145" fg:w="16"/><text x="30.6041%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.02%)</title><rect x="30.5521%" y="325" width="0.0236%" height="15" fill="rgb(214,191,48)" fg:x="23296" fg:w="18"/><text x="30.8021%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (18 samples, 0.02%)</title><rect x="30.5521%" y="309" width="0.0236%" height="15" fill="rgb(237,112,39)" fg:x="23296" fg:w="18"/><text x="30.8021%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (82 samples, 0.11%)</title><rect x="30.4866%" y="357" width="0.1075%" height="15" fill="rgb(247,203,27)" fg:x="23246" fg:w="82"/><text x="30.7366%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (41 samples, 0.05%)</title><rect x="30.5403%" y="341" width="0.0538%" height="15" fill="rgb(235,124,28)" fg:x="23287" fg:w="41"/><text x="30.7903%" y="351.50"></text></g><g><title>core::ptr::write (14 samples, 0.02%)</title><rect x="30.5757%" y="325" width="0.0184%" height="15" fill="rgb(208,207,46)" fg:x="23314" fg:w="14"/><text x="30.8257%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="30.6859%" y="181" width="0.0393%" height="15" fill="rgb(234,176,4)" fg:x="23398" fg:w="30"/><text x="30.9359%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="30.6990%" y="165" width="0.0262%" height="15" fill="rgb(230,133,28)" fg:x="23408" fg:w="20"/><text x="30.9490%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (59 samples, 0.08%)</title><rect x="30.6492%" y="213" width="0.0774%" height="15" fill="rgb(211,137,40)" fg:x="23370" fg:w="59"/><text x="30.8992%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (54 samples, 0.07%)</title><rect x="30.6557%" y="197" width="0.0708%" height="15" fill="rgb(254,35,13)" fg:x="23375" fg:w="54"/><text x="30.9057%" y="207.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.05%)</title><rect x="30.8315%" y="117" width="0.0498%" height="15" fill="rgb(225,49,51)" fg:x="23509" fg:w="38"/><text x="31.0815%" y="127.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.06%)</title><rect x="30.8210%" y="133" width="0.0643%" height="15" fill="rgb(251,10,15)" fg:x="23501" fg:w="49"/><text x="31.0710%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (27 samples, 0.04%)</title><rect x="30.9272%" y="101" width="0.0354%" height="15" fill="rgb(228,207,15)" fg:x="23582" fg:w="27"/><text x="31.1772%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="30.9390%" y="85" width="0.0236%" height="15" fill="rgb(241,99,19)" fg:x="23591" fg:w="18"/><text x="31.1890%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (58 samples, 0.08%)</title><rect x="30.8905%" y="133" width="0.0761%" height="15" fill="rgb(207,104,49)" fg:x="23554" fg:w="58"/><text x="31.1405%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (55 samples, 0.07%)</title><rect x="30.8944%" y="117" width="0.0721%" height="15" fill="rgb(234,99,18)" fg:x="23557" fg:w="55"/><text x="31.1444%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (135 samples, 0.18%)</title><rect x="30.7948%" y="165" width="0.1770%" height="15" fill="rgb(213,191,49)" fg:x="23481" fg:w="135"/><text x="31.0448%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (135 samples, 0.18%)</title><rect x="30.7948%" y="149" width="0.1770%" height="15" fill="rgb(210,226,19)" fg:x="23481" fg:w="135"/><text x="31.0448%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (8 samples, 0.01%)</title><rect x="31.0793%" y="133" width="0.0105%" height="15" fill="rgb(229,97,18)" fg:x="23698" fg:w="8"/><text x="31.3293%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array (91 samples, 0.12%)</title><rect x="30.9731%" y="165" width="0.1193%" height="15" fill="rgb(211,167,15)" fg:x="23617" fg:w="91"/><text x="31.2231%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (89 samples, 0.12%)</title><rect x="30.9757%" y="149" width="0.1167%" height="15" fill="rgb(210,169,34)" fg:x="23619" fg:w="89"/><text x="31.2257%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (287 samples, 0.38%)</title><rect x="30.7266%" y="213" width="0.3764%" height="15" fill="rgb(241,121,31)" fg:x="23429" fg:w="287"/><text x="30.9766%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (287 samples, 0.38%)</title><rect x="30.7266%" y="197" width="0.3764%" height="15" fill="rgb(232,40,11)" fg:x="23429" fg:w="287"/><text x="30.9766%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (282 samples, 0.37%)</title><rect x="30.7331%" y="181" width="0.3698%" height="15" fill="rgb(205,86,26)" fg:x="23434" fg:w="282"/><text x="30.9831%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (384 samples, 0.50%)</title><rect x="30.6282%" y="293" width="0.5036%" height="15" fill="rgb(231,126,28)" fg:x="23354" fg:w="384"/><text x="30.8782%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (381 samples, 0.50%)</title><rect x="30.6321%" y="277" width="0.4997%" height="15" fill="rgb(219,221,18)" fg:x="23357" fg:w="381"/><text x="30.8821%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (381 samples, 0.50%)</title><rect x="30.6321%" y="261" width="0.4997%" height="15" fill="rgb(211,40,0)" fg:x="23357" fg:w="381"/><text x="30.8821%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (380 samples, 0.50%)</title><rect x="30.6334%" y="245" width="0.4984%" height="15" fill="rgb(239,85,43)" fg:x="23358" fg:w="380"/><text x="30.8834%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (380 samples, 0.50%)</title><rect x="30.6334%" y="229" width="0.4984%" height="15" fill="rgb(231,55,21)" fg:x="23358" fg:w="380"/><text x="30.8834%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (19 samples, 0.02%)</title><rect x="31.1069%" y="213" width="0.0249%" height="15" fill="rgb(225,184,43)" fg:x="23719" fg:w="19"/><text x="31.3569%" y="223.50"></text></g><g><title>core::ptr::metadata::metadata (14 samples, 0.02%)</title><rect x="31.1134%" y="197" width="0.0184%" height="15" fill="rgb(251,158,41)" fg:x="23724" fg:w="14"/><text x="31.3634%" y="207.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (396 samples, 0.52%)</title><rect x="30.6177%" y="341" width="0.5193%" height="15" fill="rgb(234,159,37)" fg:x="23346" fg:w="396"/><text x="30.8677%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (389 samples, 0.51%)</title><rect x="30.6269%" y="325" width="0.5102%" height="15" fill="rgb(216,204,22)" fg:x="23353" fg:w="389"/><text x="30.8769%" y="335.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (388 samples, 0.51%)</title><rect x="30.6282%" y="309" width="0.5089%" height="15" fill="rgb(214,17,3)" fg:x="23354" fg:w="388"/><text x="30.8782%" y="319.50"></text></g><g><title>alloc::string::String::new (75 samples, 0.10%)</title><rect x="31.1698%" y="309" width="0.0984%" height="15" fill="rgb(212,111,17)" fg:x="23767" fg:w="75"/><text x="31.4198%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (89 samples, 0.12%)</title><rect x="31.5200%" y="165" width="0.1167%" height="15" fill="rgb(221,157,24)" fg:x="24034" fg:w="89"/><text x="31.7700%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (58 samples, 0.08%)</title><rect x="31.5607%" y="149" width="0.0761%" height="15" fill="rgb(252,16,13)" fg:x="24065" fg:w="58"/><text x="31.8107%" y="159.50"></text></g><g><title>core::ptr::invalid_mut (19 samples, 0.02%)</title><rect x="31.6367%" y="149" width="0.0249%" height="15" fill="rgb(221,62,2)" fg:x="24123" fg:w="19"/><text x="31.8867%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (224 samples, 0.29%)</title><rect x="31.4033%" y="197" width="0.2938%" height="15" fill="rgb(247,87,22)" fg:x="23945" fg:w="224"/><text x="31.6533%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (219 samples, 0.29%)</title><rect x="31.4098%" y="181" width="0.2872%" height="15" fill="rgb(215,73,9)" fg:x="23950" fg:w="219"/><text x="31.6598%" y="191.50"></text></g><g><title>core::ptr::null_mut (46 samples, 0.06%)</title><rect x="31.6367%" y="165" width="0.0603%" height="15" fill="rgb(207,175,33)" fg:x="24123" fg:w="46"/><text x="31.8867%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (27 samples, 0.04%)</title><rect x="31.6616%" y="149" width="0.0354%" height="15" fill="rgb(243,129,54)" fg:x="24142" fg:w="27"/><text x="31.9116%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (8 samples, 0.01%)</title><rect x="31.7548%" y="149" width="0.0105%" height="15" fill="rgb(227,119,45)" fg:x="24213" fg:w="8"/><text x="32.0048%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (36 samples, 0.05%)</title><rect x="31.7246%" y="165" width="0.0472%" height="15" fill="rgb(205,109,36)" fg:x="24190" fg:w="36"/><text x="31.9746%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (34 samples, 0.04%)</title><rect x="31.8531%" y="133" width="0.0446%" height="15" fill="rgb(205,6,39)" fg:x="24288" fg:w="34"/><text x="32.1031%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (22 samples, 0.03%)</title><rect x="31.8977%" y="133" width="0.0289%" height="15" fill="rgb(221,32,16)" fg:x="24322" fg:w="22"/><text x="32.1477%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (26 samples, 0.03%)</title><rect x="31.9620%" y="117" width="0.0341%" height="15" fill="rgb(228,144,50)" fg:x="24371" fg:w="26"/><text x="32.2120%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (80 samples, 0.10%)</title><rect x="31.9266%" y="133" width="0.1049%" height="15" fill="rgb(229,201,53)" fg:x="24344" fg:w="80"/><text x="32.1766%" y="143.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (26 samples, 0.03%)</title><rect x="31.9974%" y="117" width="0.0341%" height="15" fill="rgb(249,153,27)" fg:x="24398" fg:w="26"/><text x="32.2474%" y="127.50"></text></g><g><title>__GI___libc_malloc (45 samples, 0.06%)</title><rect x="32.2164%" y="69" width="0.0590%" height="15" fill="rgb(227,106,25)" fg:x="24565" fg:w="45"/><text x="32.4664%" y="79.50"></text></g><g><title>_int_malloc (10 samples, 0.01%)</title><rect x="32.2623%" y="53" width="0.0131%" height="15" fill="rgb(230,65,29)" fg:x="24600" fg:w="10"/><text x="32.5123%" y="63.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.11%)</title><rect x="32.1902%" y="85" width="0.1062%" height="15" fill="rgb(221,57,46)" fg:x="24545" fg:w="81"/><text x="32.4402%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::size (8 samples, 0.01%)</title><rect x="32.2859%" y="69" width="0.0105%" height="15" fill="rgb(229,161,17)" fg:x="24618" fg:w="8"/><text x="32.5359%" y="79.50"></text></g><g><title>core::alloc::layout::Layout::size (15 samples, 0.02%)</title><rect x="32.2964%" y="85" width="0.0197%" height="15" fill="rgb(222,213,11)" fg:x="24626" fg:w="15"/><text x="32.5464%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (87 samples, 0.11%)</title><rect x="32.4289%" y="53" width="0.1141%" height="15" fill="rgb(235,35,13)" fg:x="24727" fg:w="87"/><text x="32.6789%" y="63.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (68 samples, 0.09%)</title><rect x="32.4538%" y="37" width="0.0892%" height="15" fill="rgb(233,158,34)" fg:x="24746" fg:w="68"/><text x="32.7038%" y="47.50"></text></g><g><title>core::ptr::invalid_mut (11 samples, 0.01%)</title><rect x="32.5430%" y="37" width="0.0144%" height="15" fill="rgb(215,151,48)" fg:x="24814" fg:w="11"/><text x="32.7930%" y="47.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (205 samples, 0.27%)</title><rect x="32.3187%" y="85" width="0.2689%" height="15" fill="rgb(229,84,14)" fg:x="24643" fg:w="205"/><text x="32.5687%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (195 samples, 0.26%)</title><rect x="32.3318%" y="69" width="0.2557%" height="15" fill="rgb(229,68,14)" fg:x="24653" fg:w="195"/><text x="32.5818%" y="79.50"></text></g><g><title>core::ptr::null_mut (34 samples, 0.04%)</title><rect x="32.5430%" y="53" width="0.0446%" height="15" fill="rgb(243,106,26)" fg:x="24814" fg:w="34"/><text x="32.7930%" y="63.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (23 samples, 0.03%)</title><rect x="32.5574%" y="37" width="0.0302%" height="15" fill="rgb(206,45,38)" fg:x="24825" fg:w="23"/><text x="32.8074%" y="47.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (377 samples, 0.49%)</title><rect x="32.0997%" y="117" width="0.4944%" height="15" fill="rgb(226,6,15)" fg:x="24476" fg:w="377"/><text x="32.3497%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (377 samples, 0.49%)</title><rect x="32.0997%" y="101" width="0.4944%" height="15" fill="rgb(232,22,54)" fg:x="24476" fg:w="377"/><text x="32.3497%" y="111.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (36 samples, 0.05%)</title><rect x="32.5941%" y="117" width="0.0472%" height="15" fill="rgb(229,222,32)" fg:x="24853" fg:w="36"/><text x="32.8441%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (583 samples, 0.76%)</title><rect x="32.0315%" y="133" width="0.7646%" height="15" fill="rgb(228,62,29)" fg:x="24424" fg:w="583"/><text x="32.2815%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (118 samples, 0.15%)</title><rect x="32.6413%" y="117" width="0.1548%" height="15" fill="rgb(251,103,34)" fg:x="24889" fg:w="118"/><text x="32.8913%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (14 samples, 0.02%)</title><rect x="33.1108%" y="101" width="0.0184%" height="15" fill="rgb(233,12,30)" fg:x="25247" fg:w="14"/><text x="33.3608%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (9 samples, 0.01%)</title><rect x="33.1292%" y="101" width="0.0118%" height="15" fill="rgb(238,52,0)" fg:x="25261" fg:w="9"/><text x="33.3792%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (266 samples, 0.35%)</title><rect x="32.8000%" y="117" width="0.3489%" height="15" fill="rgb(223,98,5)" fg:x="25010" fg:w="266"/><text x="33.0500%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (271 samples, 0.36%)</title><rect x="32.7961%" y="133" width="0.3554%" height="15" fill="rgb(228,75,37)" fg:x="25007" fg:w="271"/><text x="33.0461%" y="143.50"></text></g><g><title>core::cmp::max (112 samples, 0.15%)</title><rect x="33.1515%" y="133" width="0.1469%" height="15" fill="rgb(205,115,49)" fg:x="25278" fg:w="112"/><text x="33.4015%" y="143.50"></text></g><g><title>core::cmp::Ord::max (109 samples, 0.14%)</title><rect x="33.1554%" y="117" width="0.1430%" height="15" fill="rgb(250,154,43)" fg:x="25281" fg:w="109"/><text x="33.4054%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (48 samples, 0.06%)</title><rect x="33.2354%" y="101" width="0.0630%" height="15" fill="rgb(226,43,29)" fg:x="25342" fg:w="48"/><text x="33.4854%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (85 samples, 0.11%)</title><rect x="33.2984%" y="133" width="0.1115%" height="15" fill="rgb(249,228,39)" fg:x="25390" fg:w="85"/><text x="33.5484%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (34 samples, 0.04%)</title><rect x="33.3652%" y="117" width="0.0446%" height="15" fill="rgb(216,79,43)" fg:x="25441" fg:w="34"/><text x="33.6152%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,265 samples, 1.66%)</title><rect x="31.7784%" y="149" width="1.6590%" height="15" fill="rgb(228,95,12)" fg:x="24231" fg:w="1265"/><text x="32.0284%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (21 samples, 0.03%)</title><rect x="33.4098%" y="133" width="0.0275%" height="15" fill="rgb(249,221,15)" fg:x="25475" fg:w="21"/><text x="33.6598%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,348 samples, 1.77%)</title><rect x="31.7010%" y="197" width="1.7679%" height="15" fill="rgb(233,34,13)" fg:x="24172" fg:w="1348"/><text x="31.9510%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,344 samples, 1.76%)</title><rect x="31.7062%" y="181" width="1.7626%" height="15" fill="rgb(214,103,39)" fg:x="24176" fg:w="1344"/><text x="31.9562%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,294 samples, 1.70%)</title><rect x="31.7718%" y="165" width="1.6970%" height="15" fill="rgb(251,126,39)" fg:x="24226" fg:w="1294"/><text x="32.0218%" y="175.50"></text></g><g><title>alloc::raw_vec::handle_reserve (24 samples, 0.03%)</title><rect x="33.4374%" y="149" width="0.0315%" height="15" fill="rgb(214,216,36)" fg:x="25496" fg:w="24"/><text x="33.6874%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.01%)</title><rect x="33.4544%" y="133" width="0.0144%" height="15" fill="rgb(220,221,8)" fg:x="25509" fg:w="11"/><text x="33.7044%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,639 samples, 2.15%)</title><rect x="31.3351%" y="213" width="2.1495%" height="15" fill="rgb(240,216,3)" fg:x="23893" fg:w="1639"/><text x="31.5851%" y="223.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="33.4689%" y="197" width="0.0157%" height="15" fill="rgb(232,218,17)" fg:x="25520" fg:w="12"/><text x="33.7189%" y="207.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.01%)</title><rect x="33.4741%" y="181" width="0.0105%" height="15" fill="rgb(229,163,45)" fg:x="25524" fg:w="8"/><text x="33.7241%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,749 samples, 2.29%)</title><rect x="31.3259%" y="229" width="2.2938%" height="15" fill="rgb(231,110,42)" fg:x="23886" fg:w="1749"/><text x="31.5759%" y="239.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (103 samples, 0.14%)</title><rect x="33.4846%" y="213" width="0.1351%" height="15" fill="rgb(208,170,48)" fg:x="25532" fg:w="103"/><text x="33.7346%" y="223.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (86 samples, 0.11%)</title><rect x="33.5069%" y="197" width="0.1128%" height="15" fill="rgb(239,116,25)" fg:x="25549" fg:w="86"/><text x="33.7569%" y="207.50"></text></g><g><title>core::slice::raw::from_raw_parts (37 samples, 0.05%)</title><rect x="33.5711%" y="181" width="0.0485%" height="15" fill="rgb(219,200,50)" fg:x="25598" fg:w="37"/><text x="33.8211%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts (22 samples, 0.03%)</title><rect x="33.5908%" y="165" width="0.0289%" height="15" fill="rgb(245,200,0)" fg:x="25613" fg:w="22"/><text x="33.8408%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (21 samples, 0.03%)</title><rect x="33.5921%" y="149" width="0.0275%" height="15" fill="rgb(245,119,33)" fg:x="25614" fg:w="21"/><text x="33.8421%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (48 samples, 0.06%)</title><rect x="33.8452%" y="181" width="0.0630%" height="15" fill="rgb(231,125,12)" fg:x="25807" fg:w="48"/><text x="34.0952%" y="191.50"></text></g><g><title>core::ptr::invalid (12 samples, 0.02%)</title><rect x="33.9082%" y="165" width="0.0157%" height="15" fill="rgb(216,96,41)" fg:x="25855" fg:w="12"/><text x="34.1582%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,037 samples, 2.67%)</title><rect x="31.3023%" y="245" width="2.6715%" height="15" fill="rgb(248,43,45)" fg:x="23868" fg:w="2037"/><text x="31.5523%" y="255.50">al..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (270 samples, 0.35%)</title><rect x="33.6197%" y="229" width="0.3541%" height="15" fill="rgb(217,222,7)" fg:x="25635" fg:w="270"/><text x="33.8697%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (268 samples, 0.35%)</title><rect x="33.6223%" y="213" width="0.3515%" height="15" fill="rgb(233,28,6)" fg:x="25637" fg:w="268"/><text x="33.8723%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (218 samples, 0.29%)</title><rect x="33.6879%" y="197" width="0.2859%" height="15" fill="rgb(231,218,15)" fg:x="25687" fg:w="218"/><text x="33.9379%" y="207.50"></text></g><g><title>core::ptr::null (50 samples, 0.07%)</title><rect x="33.9082%" y="181" width="0.0656%" height="15" fill="rgb(226,171,48)" fg:x="25855" fg:w="50"/><text x="34.1582%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (38 samples, 0.05%)</title><rect x="33.9239%" y="165" width="0.0498%" height="15" fill="rgb(235,201,9)" fg:x="25867" fg:w="38"/><text x="34.1739%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,064 samples, 2.71%)</title><rect x="31.2879%" y="277" width="2.7069%" height="15" fill="rgb(217,80,15)" fg:x="23857" fg:w="2064"/><text x="31.5379%" y="287.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (2,053 samples, 2.69%)</title><rect x="31.3023%" y="261" width="2.6925%" height="15" fill="rgb(219,152,8)" fg:x="23868" fg:w="2053"/><text x="31.5523%" y="271.50">al..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (16 samples, 0.02%)</title><rect x="33.9738%" y="245" width="0.0210%" height="15" fill="rgb(243,107,38)" fg:x="25905" fg:w="16"/><text x="34.2238%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (46 samples, 0.06%)</title><rect x="33.9948%" y="277" width="0.0603%" height="15" fill="rgb(231,17,5)" fg:x="25921" fg:w="46"/><text x="34.2448%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2,125 samples, 2.79%)</title><rect x="31.2721%" y="309" width="2.7869%" height="15" fill="rgb(209,25,54)" fg:x="23845" fg:w="2125"/><text x="31.5221%" y="319.50">co..</text></g><g><title>core::fmt::num::imp::fmt_u64 (2,116 samples, 2.78%)</title><rect x="31.2839%" y="293" width="2.7751%" height="15" fill="rgb(219,0,2)" fg:x="23854" fg:w="2116"/><text x="31.5339%" y="303.50">co..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,247 samples, 2.95%)</title><rect x="31.1489%" y="325" width="2.9469%" height="15" fill="rgb(246,9,5)" fg:x="23751" fg:w="2247"/><text x="31.3989%" y="335.50">&lt;T..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (28 samples, 0.04%)</title><rect x="34.0590%" y="309" width="0.0367%" height="15" fill="rgb(226,159,4)" fg:x="25970" fg:w="28"/><text x="34.3090%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (43 samples, 0.06%)</title><rect x="34.1705%" y="261" width="0.0564%" height="15" fill="rgb(219,175,34)" fg:x="26055" fg:w="43"/><text x="34.4205%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.04%)</title><rect x="34.1836%" y="245" width="0.0433%" height="15" fill="rgb(236,10,46)" fg:x="26065" fg:w="33"/><text x="34.4336%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (104 samples, 0.14%)</title><rect x="34.1036%" y="293" width="0.1364%" height="15" fill="rgb(240,211,16)" fg:x="26004" fg:w="104"/><text x="34.3536%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (102 samples, 0.13%)</title><rect x="34.1062%" y="277" width="0.1338%" height="15" fill="rgb(205,3,43)" fg:x="26006" fg:w="102"/><text x="34.3562%" y="287.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.01%)</title><rect x="34.2269%" y="261" width="0.0131%" height="15" fill="rgb(245,7,22)" fg:x="26098" fg:w="10"/><text x="34.4769%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="34.2282%" y="245" width="0.0118%" height="15" fill="rgb(239,132,32)" fg:x="26099" fg:w="9"/><text x="34.4782%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (110 samples, 0.14%)</title><rect x="34.0997%" y="309" width="0.1443%" height="15" fill="rgb(228,202,34)" fg:x="26001" fg:w="110"/><text x="34.3497%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (115 samples, 0.15%)</title><rect x="34.0957%" y="325" width="0.1508%" height="15" fill="rgb(254,200,22)" fg:x="25998" fg:w="115"/><text x="34.3457%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (11 samples, 0.01%)</title><rect x="34.2767%" y="293" width="0.0144%" height="15" fill="rgb(219,10,39)" fg:x="26136" fg:w="11"/><text x="34.5267%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (55 samples, 0.07%)</title><rect x="34.3449%" y="261" width="0.0721%" height="15" fill="rgb(226,210,39)" fg:x="26188" fg:w="55"/><text x="34.5949%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (39 samples, 0.05%)</title><rect x="34.3659%" y="245" width="0.0511%" height="15" fill="rgb(208,219,16)" fg:x="26204" fg:w="39"/><text x="34.6159%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (113 samples, 0.15%)</title><rect x="34.2911%" y="293" width="0.1482%" height="15" fill="rgb(216,158,51)" fg:x="26147" fg:w="113"/><text x="34.5411%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (113 samples, 0.15%)</title><rect x="34.2911%" y="277" width="0.1482%" height="15" fill="rgb(233,14,44)" fg:x="26147" fg:w="113"/><text x="34.5411%" y="287.50"></text></g><g><title>core::ptr::null_mut (17 samples, 0.02%)</title><rect x="34.4170%" y="261" width="0.0223%" height="15" fill="rgb(237,97,39)" fg:x="26243" fg:w="17"/><text x="34.6670%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.02%)</title><rect x="34.4184%" y="245" width="0.0210%" height="15" fill="rgb(218,198,43)" fg:x="26244" fg:w="16"/><text x="34.6684%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (148 samples, 0.19%)</title><rect x="34.2531%" y="309" width="0.1941%" height="15" fill="rgb(231,104,20)" fg:x="26118" fg:w="148"/><text x="34.5031%" y="319.50"></text></g><g><title>alloc::string::String::push (167 samples, 0.22%)</title><rect x="34.2466%" y="325" width="0.2190%" height="15" fill="rgb(254,36,13)" fg:x="26113" fg:w="167"/><text x="34.4966%" y="335.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (14 samples, 0.02%)</title><rect x="34.4472%" y="309" width="0.0184%" height="15" fill="rgb(248,14,50)" fg:x="26266" fg:w="14"/><text x="34.6972%" y="319.50"></text></g><g><title>core::char::methods::len_utf8 (14 samples, 0.02%)</title><rect x="34.4472%" y="293" width="0.0184%" height="15" fill="rgb(217,107,29)" fg:x="26266" fg:w="14"/><text x="34.6972%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (37 samples, 0.05%)</title><rect x="34.5718%" y="229" width="0.0485%" height="15" fill="rgb(251,169,33)" fg:x="26361" fg:w="37"/><text x="34.8218%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="34.5915%" y="213" width="0.0289%" height="15" fill="rgb(217,108,32)" fg:x="26376" fg:w="22"/><text x="34.8415%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (105 samples, 0.14%)</title><rect x="34.5089%" y="261" width="0.1377%" height="15" fill="rgb(219,66,42)" fg:x="26313" fg:w="105"/><text x="34.7589%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (105 samples, 0.14%)</title><rect x="34.5089%" y="245" width="0.1377%" height="15" fill="rgb(206,180,7)" fg:x="26313" fg:w="105"/><text x="34.7589%" y="255.50"></text></g><g><title>core::ptr::null_mut (20 samples, 0.03%)</title><rect x="34.6203%" y="229" width="0.0262%" height="15" fill="rgb(208,226,31)" fg:x="26398" fg:w="20"/><text x="34.8703%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (13 samples, 0.02%)</title><rect x="34.6295%" y="213" width="0.0170%" height="15" fill="rgb(218,26,49)" fg:x="26405" fg:w="13"/><text x="34.8795%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="34.6466%" y="261" width="0.0144%" height="15" fill="rgb(233,197,48)" fg:x="26418" fg:w="11"/><text x="34.8966%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="34.6466%" y="245" width="0.0144%" height="15" fill="rgb(252,181,51)" fg:x="26418" fg:w="11"/><text x="34.8966%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (10 samples, 0.01%)</title><rect x="34.6479%" y="229" width="0.0131%" height="15" fill="rgb(253,90,19)" fg:x="26419" fg:w="10"/><text x="34.8979%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (143 samples, 0.19%)</title><rect x="34.4774%" y="277" width="0.1875%" height="15" fill="rgb(215,171,30)" fg:x="26289" fg:w="143"/><text x="34.7274%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (199 samples, 0.26%)</title><rect x="34.4774%" y="293" width="0.2610%" height="15" fill="rgb(214,222,9)" fg:x="26289" fg:w="199"/><text x="34.7274%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (56 samples, 0.07%)</title><rect x="34.6649%" y="277" width="0.0734%" height="15" fill="rgb(223,3,22)" fg:x="26432" fg:w="56"/><text x="34.9149%" y="287.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (48 samples, 0.06%)</title><rect x="34.6754%" y="261" width="0.0630%" height="15" fill="rgb(225,196,46)" fg:x="26440" fg:w="48"/><text x="34.9254%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (16 samples, 0.02%)</title><rect x="34.7174%" y="245" width="0.0210%" height="15" fill="rgb(209,110,37)" fg:x="26472" fg:w="16"/><text x="34.9674%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (9 samples, 0.01%)</title><rect x="34.7266%" y="229" width="0.0118%" height="15" fill="rgb(249,89,12)" fg:x="26479" fg:w="9"/><text x="34.9766%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.01%)</title><rect x="34.7266%" y="213" width="0.0118%" height="15" fill="rgb(226,27,33)" fg:x="26479" fg:w="9"/><text x="34.9766%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (24 samples, 0.03%)</title><rect x="34.8826%" y="245" width="0.0315%" height="15" fill="rgb(213,82,22)" fg:x="26598" fg:w="24"/><text x="35.1326%" y="255.50"></text></g><g><title>core::ptr::invalid (18 samples, 0.02%)</title><rect x="34.9141%" y="229" width="0.0236%" height="15" fill="rgb(248,140,0)" fg:x="26622" fg:w="18"/><text x="35.1641%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (377 samples, 0.49%)</title><rect x="34.4708%" y="309" width="0.4944%" height="15" fill="rgb(228,106,3)" fg:x="26284" fg:w="377"/><text x="34.7208%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (173 samples, 0.23%)</title><rect x="34.7384%" y="293" width="0.2269%" height="15" fill="rgb(209,23,37)" fg:x="26488" fg:w="173"/><text x="34.9884%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (173 samples, 0.23%)</title><rect x="34.7384%" y="277" width="0.2269%" height="15" fill="rgb(241,93,50)" fg:x="26488" fg:w="173"/><text x="34.9884%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (134 samples, 0.18%)</title><rect x="34.7895%" y="261" width="0.1757%" height="15" fill="rgb(253,46,43)" fg:x="26527" fg:w="134"/><text x="35.0395%" y="271.50"></text></g><g><title>core::ptr::null (39 samples, 0.05%)</title><rect x="34.9141%" y="245" width="0.0511%" height="15" fill="rgb(226,206,43)" fg:x="26622" fg:w="39"/><text x="35.1641%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (21 samples, 0.03%)</title><rect x="34.9377%" y="229" width="0.0275%" height="15" fill="rgb(217,54,7)" fg:x="26640" fg:w="21"/><text x="35.1877%" y="239.50"></text></g><g><title>alloc::string::String::push_str (382 samples, 0.50%)</title><rect x="34.4656%" y="325" width="0.5010%" height="15" fill="rgb(223,5,52)" fg:x="26280" fg:w="382"/><text x="34.7156%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (77 samples, 0.10%)</title><rect x="34.9744%" y="277" width="0.1010%" height="15" fill="rgb(206,52,46)" fg:x="26668" fg:w="77"/><text x="35.2244%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (76 samples, 0.10%)</title><rect x="34.9757%" y="261" width="0.0997%" height="15" fill="rgb(253,136,11)" fg:x="26669" fg:w="76"/><text x="35.2257%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (46 samples, 0.06%)</title><rect x="35.0151%" y="245" width="0.0603%" height="15" fill="rgb(208,106,33)" fg:x="26699" fg:w="46"/><text x="35.2651%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (32 samples, 0.04%)</title><rect x="35.0334%" y="229" width="0.0420%" height="15" fill="rgb(206,54,4)" fg:x="26713" fg:w="32"/><text x="35.2834%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.11%)</title><rect x="34.9718%" y="293" width="0.1075%" height="15" fill="rgb(213,3,15)" fg:x="26666" fg:w="82"/><text x="35.2218%" y="303.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="35.1436%" y="229" width="0.0170%" height="15" fill="rgb(252,211,39)" fg:x="26797" fg:w="13"/><text x="35.3936%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.07%)</title><rect x="35.1016%" y="261" width="0.0669%" height="15" fill="rgb(223,6,36)" fg:x="26765" fg:w="51"/><text x="35.3516%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.04%)</title><rect x="35.1239%" y="245" width="0.0446%" height="15" fill="rgb(252,169,45)" fg:x="26782" fg:w="34"/><text x="35.3739%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.01%)</title><rect x="35.1987%" y="245" width="0.0105%" height="15" fill="rgb(212,48,26)" fg:x="26839" fg:w="8"/><text x="35.4487%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (8 samples, 0.01%)</title><rect x="35.3246%" y="213" width="0.0105%" height="15" fill="rgb(251,102,48)" fg:x="26935" fg:w="8"/><text x="35.5746%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array (103 samples, 0.14%)</title><rect x="35.2092%" y="245" width="0.1351%" height="15" fill="rgb(243,208,16)" fg:x="26847" fg:w="103"/><text x="35.4592%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (102 samples, 0.13%)</title><rect x="35.2105%" y="229" width="0.1338%" height="15" fill="rgb(219,96,24)" fg:x="26848" fg:w="102"/><text x="35.4605%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3,798 samples, 4.98%)</title><rect x="30.3751%" y="373" width="4.9810%" height="15" fill="rgb(219,33,29)" fg:x="23161" fg:w="3798"/><text x="30.6251%" y="383.50">core::..</text></g><g><title>day1::day16_part2::get_key::{{closure}} (3,631 samples, 4.76%)</title><rect x="30.5941%" y="357" width="4.7620%" height="15" fill="rgb(223,176,5)" fg:x="23328" fg:w="3631"/><text x="30.8441%" y="367.50">day1::..</text></g><g><title>day1::day16_part2::Player::to_string (3,217 samples, 4.22%)</title><rect x="31.1370%" y="341" width="4.2190%" height="15" fill="rgb(228,140,14)" fg:x="23742" fg:w="3217"/><text x="31.3870%" y="351.50">day1:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (297 samples, 0.39%)</title><rect x="34.9666%" y="325" width="0.3895%" height="15" fill="rgb(217,179,31)" fg:x="26662" fg:w="297"/><text x="35.2166%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (293 samples, 0.38%)</title><rect x="34.9718%" y="309" width="0.3843%" height="15" fill="rgb(230,9,30)" fg:x="26666" fg:w="293"/><text x="35.2218%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (211 samples, 0.28%)</title><rect x="35.0793%" y="293" width="0.2767%" height="15" fill="rgb(230,136,20)" fg:x="26748" fg:w="211"/><text x="35.3293%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.28%)</title><rect x="35.0807%" y="277" width="0.2754%" height="15" fill="rgb(215,210,22)" fg:x="26749" fg:w="210"/><text x="35.3307%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (143 samples, 0.19%)</title><rect x="35.1685%" y="261" width="0.1875%" height="15" fill="rgb(218,43,5)" fg:x="26816" fg:w="143"/><text x="35.4185%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (9 samples, 0.01%)</title><rect x="35.3443%" y="245" width="0.0118%" height="15" fill="rgb(216,11,5)" fg:x="26950" fg:w="9"/><text x="35.5943%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,300 samples, 5.64%)</title><rect x="29.7338%" y="405" width="5.6393%" height="15" fill="rgb(209,82,29)" fg:x="22672" fg:w="4300"/><text x="29.9838%" y="415.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,277 samples, 5.61%)</title><rect x="29.7639%" y="389" width="5.6092%" height="15" fill="rgb(244,115,12)" fg:x="22695" fg:w="4277"/><text x="30.0139%" y="399.50">core::i..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;core::option::Option&lt;day1::day16_part2::Player&gt;,alloc::string::String,(),day1::day16_part2::get_key::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;,day1::day16_part2::get_key::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (13 samples, 0.02%)</title><rect x="35.3561%" y="373" width="0.0170%" height="15" fill="rgb(222,82,18)" fg:x="26959" fg:w="13"/><text x="35.6061%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;,day1::day16_part2::get_key::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (12 samples, 0.02%)</title><rect x="35.3574%" y="357" width="0.0157%" height="15" fill="rgb(249,227,8)" fg:x="26960" fg:w="12"/><text x="35.6074%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;,day1::day16_part2::get_key::{{closure}}&gt;&gt;::{{closure}}&gt; (12 samples, 0.02%)</title><rect x="35.3574%" y="341" width="0.0157%" height="15" fill="rgb(253,141,45)" fg:x="26960" fg:w="12"/><text x="35.6074%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (10 samples, 0.01%)</title><rect x="35.3600%" y="325" width="0.0131%" height="15" fill="rgb(234,184,4)" fg:x="26962" fg:w="10"/><text x="35.6100%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,551 samples, 5.97%)</title><rect x="29.4190%" y="453" width="5.9685%" height="15" fill="rgb(218,194,23)" fg:x="22432" fg:w="4551"/><text x="29.6690%" y="463.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4,537 samples, 5.95%)</title><rect x="29.4374%" y="437" width="5.9502%" height="15" fill="rgb(235,66,41)" fg:x="22446" fg:w="4537"/><text x="29.6874%" y="447.50">alloc::v..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,351 samples, 5.71%)</title><rect x="29.6813%" y="421" width="5.7062%" height="15" fill="rgb(245,217,1)" fg:x="22632" fg:w="4351"/><text x="29.9313%" y="431.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (11 samples, 0.01%)</title><rect x="35.3731%" y="405" width="0.0144%" height="15" fill="rgb(229,91,1)" fg:x="26972" fg:w="11"/><text x="35.6231%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (83 samples, 0.11%)</title><rect x="35.3875%" y="453" width="0.1089%" height="15" fill="rgb(207,101,30)" fg:x="26983" fg:w="83"/><text x="35.6375%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (70 samples, 0.09%)</title><rect x="35.4046%" y="437" width="0.0918%" height="15" fill="rgb(223,82,49)" fg:x="26996" fg:w="70"/><text x="35.6546%" y="447.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="35.6498%" y="341" width="0.0236%" height="15" fill="rgb(218,167,17)" fg:x="27183" fg:w="18"/><text x="35.8998%" y="351.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.04%)</title><rect x="35.6407%" y="357" width="0.0446%" height="15" fill="rgb(208,103,14)" fg:x="27176" fg:w="34"/><text x="35.8907%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (36 samples, 0.05%)</title><rect x="35.7403%" y="325" width="0.0472%" height="15" fill="rgb(238,20,8)" fg:x="27252" fg:w="36"/><text x="35.9903%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="35.7508%" y="309" width="0.0367%" height="15" fill="rgb(218,80,54)" fg:x="27260" fg:w="28"/><text x="36.0008%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="35.7875%" y="309" width="0.0105%" height="15" fill="rgb(240,144,17)" fg:x="27288" fg:w="8"/><text x="36.0375%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (91 samples, 0.12%)</title><rect x="35.6905%" y="357" width="0.1193%" height="15" fill="rgb(245,27,50)" fg:x="27214" fg:w="91"/><text x="35.9405%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (79 samples, 0.10%)</title><rect x="35.7062%" y="341" width="0.1036%" height="15" fill="rgb(251,51,7)" fg:x="27226" fg:w="79"/><text x="35.9562%" y="351.50"></text></g><g><title>core::ptr::null_mut (17 samples, 0.02%)</title><rect x="35.7875%" y="325" width="0.0223%" height="15" fill="rgb(245,217,29)" fg:x="27288" fg:w="17"/><text x="36.0375%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="35.7980%" y="309" width="0.0118%" height="15" fill="rgb(221,176,29)" fg:x="27296" fg:w="9"/><text x="36.0480%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (163 samples, 0.21%)</title><rect x="35.6039%" y="389" width="0.2138%" height="15" fill="rgb(212,180,24)" fg:x="27148" fg:w="163"/><text x="35.8539%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (163 samples, 0.21%)</title><rect x="35.6039%" y="373" width="0.2138%" height="15" fill="rgb(254,24,2)" fg:x="27148" fg:w="163"/><text x="35.8539%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (100 samples, 0.13%)</title><rect x="35.8203%" y="389" width="0.1311%" height="15" fill="rgb(230,100,2)" fg:x="27313" fg:w="100"/><text x="36.0703%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (97 samples, 0.13%)</title><rect x="35.8243%" y="373" width="0.1272%" height="15" fill="rgb(219,142,25)" fg:x="27316" fg:w="97"/><text x="36.0743%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,100 samples, 6.69%)</title><rect x="29.2839%" y="517" width="6.6885%" height="15" fill="rgb(240,73,43)" fg:x="22329" fg:w="5100"/><text x="29.5339%" y="527.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,074 samples, 6.65%)</title><rect x="29.3180%" y="501" width="6.6544%" height="15" fill="rgb(214,114,15)" fg:x="22355" fg:w="5074"/><text x="29.5680%" y="511.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,047 samples, 6.62%)</title><rect x="29.3534%" y="485" width="6.6190%" height="15" fill="rgb(207,130,4)" fg:x="22382" fg:w="5047"/><text x="29.6034%" y="495.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,035 samples, 6.60%)</title><rect x="29.3692%" y="469" width="6.6033%" height="15" fill="rgb(221,25,40)" fg:x="22394" fg:w="5035"/><text x="29.6192%" y="479.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (362 samples, 0.47%)</title><rect x="35.4977%" y="453" width="0.4748%" height="15" fill="rgb(241,184,7)" fg:x="27067" fg:w="362"/><text x="35.7477%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (362 samples, 0.47%)</title><rect x="35.4977%" y="437" width="0.4748%" height="15" fill="rgb(235,159,4)" fg:x="27067" fg:w="362"/><text x="35.7477%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (360 samples, 0.47%)</title><rect x="35.5003%" y="421" width="0.4721%" height="15" fill="rgb(214,87,48)" fg:x="27069" fg:w="360"/><text x="35.7503%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (360 samples, 0.47%)</title><rect x="35.5003%" y="405" width="0.4721%" height="15" fill="rgb(246,198,24)" fg:x="27069" fg:w="360"/><text x="35.7503%" y="415.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (10 samples, 0.01%)</title><rect x="35.9593%" y="389" width="0.0131%" height="15" fill="rgb(209,66,40)" fg:x="27419" fg:w="10"/><text x="36.2093%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (45 samples, 0.06%)</title><rect x="36.0630%" y="437" width="0.0590%" height="15" fill="rgb(233,147,39)" fg:x="27498" fg:w="45"/><text x="36.3130%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (33 samples, 0.04%)</title><rect x="36.0787%" y="421" width="0.0433%" height="15" fill="rgb(231,145,52)" fg:x="27510" fg:w="33"/><text x="36.3287%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (115 samples, 0.15%)</title><rect x="35.9869%" y="469" width="0.1508%" height="15" fill="rgb(206,20,26)" fg:x="27440" fg:w="115"/><text x="36.2369%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (113 samples, 0.15%)</title><rect x="35.9895%" y="453" width="0.1482%" height="15" fill="rgb(238,220,4)" fg:x="27442" fg:w="113"/><text x="36.2395%" y="463.50"></text></g><g><title>core::ptr::null_mut (12 samples, 0.02%)</title><rect x="36.1220%" y="437" width="0.0157%" height="15" fill="rgb(252,195,42)" fg:x="27543" fg:w="12"/><text x="36.3720%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (10 samples, 0.01%)</title><rect x="36.1246%" y="421" width="0.0131%" height="15" fill="rgb(209,10,6)" fg:x="27545" fg:w="10"/><text x="36.3746%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.16%)</title><rect x="35.9843%" y="485" width="0.1613%" height="15" fill="rgb(229,3,52)" fg:x="27438" fg:w="123"/><text x="36.2343%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.07%)</title><rect x="36.1744%" y="453" width="0.0656%" height="15" fill="rgb(253,49,37)" fg:x="27583" fg:w="50"/><text x="36.4244%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.04%)</title><rect x="36.1967%" y="437" width="0.0433%" height="15" fill="rgb(240,103,49)" fg:x="27600" fg:w="33"/><text x="36.4467%" y="447.50"></text></g><g><title>_int_free (17 samples, 0.02%)</title><rect x="36.2177%" y="421" width="0.0223%" height="15" fill="rgb(250,182,30)" fg:x="27616" fg:w="17"/><text x="36.4677%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (71 samples, 0.09%)</title><rect x="36.2780%" y="437" width="0.0931%" height="15" fill="rgb(248,8,30)" fg:x="27662" fg:w="71"/><text x="36.5280%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (67 samples, 0.09%)</title><rect x="36.2833%" y="421" width="0.0879%" height="15" fill="rgb(237,120,30)" fg:x="27666" fg:w="67"/><text x="36.5333%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (305 samples, 0.40%)</title><rect x="35.9803%" y="517" width="0.4000%" height="15" fill="rgb(221,146,34)" fg:x="27435" fg:w="305"/><text x="36.2303%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (304 samples, 0.40%)</title><rect x="35.9816%" y="501" width="0.3987%" height="15" fill="rgb(242,55,13)" fg:x="27436" fg:w="304"/><text x="36.2316%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (179 samples, 0.23%)</title><rect x="36.1456%" y="485" width="0.2348%" height="15" fill="rgb(242,112,31)" fg:x="27561" fg:w="179"/><text x="36.3956%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (178 samples, 0.23%)</title><rect x="36.1469%" y="469" width="0.2334%" height="15" fill="rgb(249,192,27)" fg:x="27562" fg:w="178"/><text x="36.3969%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (107 samples, 0.14%)</title><rect x="36.2400%" y="453" width="0.1403%" height="15" fill="rgb(208,204,44)" fg:x="27633" fg:w="107"/><text x="36.4900%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (34 samples, 0.04%)</title><rect x="36.4918%" y="453" width="0.0446%" height="15" fill="rgb(208,93,54)" fg:x="27825" fg:w="34"/><text x="36.7418%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="36.5128%" y="437" width="0.0236%" height="15" fill="rgb(242,1,31)" fg:x="27841" fg:w="18"/><text x="36.7628%" y="447.50"></text></g><g><title>core::ptr::invalid_mut (11 samples, 0.01%)</title><rect x="36.5364%" y="437" width="0.0144%" height="15" fill="rgb(241,83,25)" fg:x="27859" fg:w="11"/><text x="36.7864%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (99 samples, 0.13%)</title><rect x="36.4341%" y="485" width="0.1298%" height="15" fill="rgb(205,169,50)" fg:x="27781" fg:w="99"/><text x="36.6841%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (97 samples, 0.13%)</title><rect x="36.4367%" y="469" width="0.1272%" height="15" fill="rgb(239,186,37)" fg:x="27783" fg:w="97"/><text x="36.6867%" y="479.50"></text></g><g><title>core::ptr::null_mut (21 samples, 0.03%)</title><rect x="36.5364%" y="453" width="0.0275%" height="15" fill="rgb(205,221,10)" fg:x="27859" fg:w="21"/><text x="36.7864%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (10 samples, 0.01%)</title><rect x="36.5508%" y="437" width="0.0131%" height="15" fill="rgb(218,196,15)" fg:x="27870" fg:w="10"/><text x="36.8008%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (72 samples, 0.09%)</title><rect x="36.7423%" y="389" width="0.0944%" height="15" fill="rgb(218,196,35)" fg:x="28016" fg:w="72"/><text x="36.9923%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (55 samples, 0.07%)</title><rect x="36.7646%" y="373" width="0.0721%" height="15" fill="rgb(233,63,24)" fg:x="28033" fg:w="55"/><text x="37.0146%" y="383.50"></text></g><g><title>core::ptr::invalid_mut (10 samples, 0.01%)</title><rect x="36.8367%" y="373" width="0.0131%" height="15" fill="rgb(225,8,4)" fg:x="28088" fg:w="10"/><text x="37.0867%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (181 samples, 0.24%)</title><rect x="36.6308%" y="421" width="0.2374%" height="15" fill="rgb(234,105,35)" fg:x="27931" fg:w="181"/><text x="36.8808%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (171 samples, 0.22%)</title><rect x="36.6439%" y="405" width="0.2243%" height="15" fill="rgb(236,21,32)" fg:x="27941" fg:w="171"/><text x="36.8939%" y="415.50"></text></g><g><title>core::ptr::null_mut (24 samples, 0.03%)</title><rect x="36.8367%" y="389" width="0.0315%" height="15" fill="rgb(228,109,6)" fg:x="28088" fg:w="24"/><text x="37.0867%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="36.8498%" y="373" width="0.0184%" height="15" fill="rgb(229,215,31)" fg:x="28098" fg:w="14"/><text x="37.0998%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (196 samples, 0.26%)</title><rect x="36.6164%" y="437" width="0.2570%" height="15" fill="rgb(221,52,54)" fg:x="27920" fg:w="196"/><text x="36.8664%" y="447.50"></text></g><g><title>_int_free (36 samples, 0.05%)</title><rect x="36.9875%" y="373" width="0.0472%" height="15" fill="rgb(252,129,43)" fg:x="28203" fg:w="36"/><text x="37.2375%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (96 samples, 0.13%)</title><rect x="36.9128%" y="405" width="0.1259%" height="15" fill="rgb(248,183,27)" fg:x="28146" fg:w="96"/><text x="37.1628%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (66 samples, 0.09%)</title><rect x="36.9521%" y="389" width="0.0866%" height="15" fill="rgb(250,0,22)" fg:x="28176" fg:w="66"/><text x="37.2021%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="37.1161%" y="389" width="0.0118%" height="15" fill="rgb(213,166,10)" fg:x="28301" fg:w="9"/><text x="37.3661%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (8 samples, 0.01%)</title><rect x="37.1174%" y="373" width="0.0105%" height="15" fill="rgb(207,163,36)" fg:x="28302" fg:w="8"/><text x="37.3674%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (8 samples, 0.01%)</title><rect x="37.3233%" y="357" width="0.0105%" height="15" fill="rgb(208,122,22)" fg:x="28459" fg:w="8"/><text x="37.5733%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (160 samples, 0.21%)</title><rect x="37.1279%" y="389" width="0.2098%" height="15" fill="rgb(207,104,49)" fg:x="28310" fg:w="160"/><text x="37.3779%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (158 samples, 0.21%)</title><rect x="37.1305%" y="373" width="0.2072%" height="15" fill="rgb(248,211,50)" fg:x="28312" fg:w="158"/><text x="37.3805%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (613 samples, 0.80%)</title><rect x="36.5639%" y="485" width="0.8039%" height="15" fill="rgb(217,13,45)" fg:x="27880" fg:w="613"/><text x="36.8139%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (583 samples, 0.76%)</title><rect x="36.6033%" y="469" width="0.7646%" height="15" fill="rgb(211,216,49)" fg:x="27910" fg:w="583"/><text x="36.8533%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (578 samples, 0.76%)</title><rect x="36.6098%" y="453" width="0.7580%" height="15" fill="rgb(221,58,53)" fg:x="27915" fg:w="578"/><text x="36.8598%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (377 samples, 0.49%)</title><rect x="36.8734%" y="437" width="0.4944%" height="15" fill="rgb(220,112,41)" fg:x="28116" fg:w="377"/><text x="37.1234%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (374 samples, 0.49%)</title><rect x="36.8774%" y="421" width="0.4905%" height="15" fill="rgb(236,38,28)" fg:x="28119" fg:w="374"/><text x="37.1274%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (251 samples, 0.33%)</title><rect x="37.0387%" y="405" width="0.3292%" height="15" fill="rgb(227,195,22)" fg:x="28242" fg:w="251"/><text x="37.2887%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (21 samples, 0.03%)</title><rect x="37.3403%" y="389" width="0.0275%" height="15" fill="rgb(214,55,33)" fg:x="28472" fg:w="21"/><text x="37.5903%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (731 samples, 0.96%)</title><rect x="36.4131%" y="501" width="0.9587%" height="15" fill="rgb(248,80,13)" fg:x="27765" fg:w="731"/><text x="36.6631%" y="511.50"></text></g><g><title>_int_free (20 samples, 0.03%)</title><rect x="37.4898%" y="437" width="0.0262%" height="15" fill="rgb(238,52,6)" fg:x="28586" fg:w="20"/><text x="37.7398%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 0.07%)</title><rect x="37.4452%" y="469" width="0.0734%" height="15" fill="rgb(224,198,47)" fg:x="28552" fg:w="56"/><text x="37.6952%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.05%)</title><rect x="37.4662%" y="453" width="0.0525%" height="15" fill="rgb(233,171,20)" fg:x="28568" fg:w="40"/><text x="37.7162%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (73 samples, 0.10%)</title><rect x="37.5790%" y="453" width="0.0957%" height="15" fill="rgb(241,30,25)" fg:x="28654" fg:w="73"/><text x="37.8290%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (72 samples, 0.09%)</title><rect x="37.5803%" y="437" width="0.0944%" height="15" fill="rgb(207,171,38)" fg:x="28655" fg:w="72"/><text x="37.8303%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (992 samples, 1.30%)</title><rect x="36.3803%" y="517" width="1.3010%" height="15" fill="rgb(234,70,1)" fg:x="27740" fg:w="992"/><text x="36.6303%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (230 samples, 0.30%)</title><rect x="37.3797%" y="501" width="0.3016%" height="15" fill="rgb(232,178,18)" fg:x="28502" fg:w="230"/><text x="37.6297%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (222 samples, 0.29%)</title><rect x="37.3902%" y="485" width="0.2911%" height="15" fill="rgb(241,78,40)" fg:x="28510" fg:w="222"/><text x="37.6402%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (124 samples, 0.16%)</title><rect x="37.5187%" y="469" width="0.1626%" height="15" fill="rgb(222,35,25)" fg:x="28608" fg:w="124"/><text x="37.7687%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="37.7521%" y="469" width="0.0367%" height="15" fill="rgb(207,92,16)" fg:x="28786" fg:w="28"/><text x="38.0021%" y="479.50"></text></g><g><title>day1::day16_part2::get_key (13,015 samples, 17.07%)</title><rect x="20.7515%" y="533" width="17.0689%" height="15" fill="rgb(216,59,51)" fg:x="15823" fg:w="13015"/><text x="21.0015%" y="543.50">day1::day16_part2::get_key</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (106 samples, 0.14%)</title><rect x="37.6813%" y="517" width="0.1390%" height="15" fill="rgb(213,80,28)" fg:x="28732" fg:w="106"/><text x="37.9313%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (104 samples, 0.14%)</title><rect x="37.6839%" y="501" width="0.1364%" height="15" fill="rgb(220,93,7)" fg:x="28734" fg:w="104"/><text x="37.9339%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (78 samples, 0.10%)</title><rect x="37.7180%" y="485" width="0.1023%" height="15" fill="rgb(225,24,44)" fg:x="28760" fg:w="78"/><text x="37.9680%" y="495.50"></text></g><g><title>core::ptr::null (24 samples, 0.03%)</title><rect x="37.7889%" y="469" width="0.0315%" height="15" fill="rgb(243,74,40)" fg:x="28814" fg:w="24"/><text x="38.0389%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.02%)</title><rect x="37.7967%" y="453" width="0.0236%" height="15" fill="rgb(228,39,7)" fg:x="28820" fg:w="18"/><text x="38.0467%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70 samples, 0.09%)</title><rect x="38.0000%" y="405" width="0.0918%" height="15" fill="rgb(227,79,8)" fg:x="28975" fg:w="70"/><text x="38.2500%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (280 samples, 0.37%)</title><rect x="37.9607%" y="453" width="0.3672%" height="15" fill="rgb(236,58,11)" fg:x="28945" fg:w="280"/><text x="38.2107%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (273 samples, 0.36%)</title><rect x="37.9698%" y="437" width="0.3580%" height="15" fill="rgb(249,63,35)" fg:x="28952" fg:w="273"/><text x="38.2198%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (273 samples, 0.36%)</title><rect x="37.9698%" y="421" width="0.3580%" height="15" fill="rgb(252,114,16)" fg:x="28952" fg:w="273"/><text x="38.2198%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (180 samples, 0.24%)</title><rect x="38.0918%" y="405" width="0.2361%" height="15" fill="rgb(254,151,24)" fg:x="29045" fg:w="180"/><text x="38.3418%" y="415.50"></text></g><g><title>[libc-2.31.so] (37 samples, 0.05%)</title><rect x="38.3423%" y="437" width="0.0485%" height="15" fill="rgb(253,54,39)" fg:x="29236" fg:w="37"/><text x="38.5923%" y="447.50"></text></g><g><title>[libc-2.31.so] (38 samples, 0.05%)</title><rect x="38.3934%" y="421" width="0.0498%" height="15" fill="rgb(243,25,45)" fg:x="29275" fg:w="38"/><text x="38.6434%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (112 samples, 0.15%)</title><rect x="38.3279%" y="453" width="0.1469%" height="15" fill="rgb(234,134,9)" fg:x="29225" fg:w="112"/><text x="38.5779%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (64 samples, 0.08%)</title><rect x="38.3908%" y="437" width="0.0839%" height="15" fill="rgb(227,166,31)" fg:x="29273" fg:w="64"/><text x="38.6408%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.03%)</title><rect x="38.4433%" y="421" width="0.0315%" height="15" fill="rgb(245,143,41)" fg:x="29313" fg:w="24"/><text x="38.6933%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="38.5456%" y="357" width="0.0393%" height="15" fill="rgb(238,181,32)" fg:x="29391" fg:w="30"/><text x="38.7956%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="38.5561%" y="341" width="0.0289%" height="15" fill="rgb(224,113,18)" fg:x="29399" fg:w="22"/><text x="38.8061%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (91 samples, 0.12%)</title><rect x="38.4879%" y="389" width="0.1193%" height="15" fill="rgb(240,229,28)" fg:x="29347" fg:w="91"/><text x="38.7379%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (91 samples, 0.12%)</title><rect x="38.4879%" y="373" width="0.1193%" height="15" fill="rgb(250,185,3)" fg:x="29347" fg:w="91"/><text x="38.7379%" y="383.50"></text></g><g><title>core::ptr::null_mut (17 samples, 0.02%)</title><rect x="38.5849%" y="357" width="0.0223%" height="15" fill="rgb(212,59,25)" fg:x="29421" fg:w="17"/><text x="38.8349%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.02%)</title><rect x="38.5862%" y="341" width="0.0210%" height="15" fill="rgb(221,87,20)" fg:x="29422" fg:w="16"/><text x="38.8362%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (103 samples, 0.14%)</title><rect x="38.4852%" y="405" width="0.1351%" height="15" fill="rgb(213,74,28)" fg:x="29345" fg:w="103"/><text x="38.7352%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.01%)</title><rect x="38.6072%" y="389" width="0.0131%" height="15" fill="rgb(224,132,34)" fg:x="29438" fg:w="10"/><text x="38.8572%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (105 samples, 0.14%)</title><rect x="38.4839%" y="421" width="0.1377%" height="15" fill="rgb(222,101,24)" fg:x="29344" fg:w="105"/><text x="38.7339%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (163 samples, 0.21%)</title><rect x="38.7239%" y="341" width="0.2138%" height="15" fill="rgb(254,142,4)" fg:x="29527" fg:w="163"/><text x="38.9739%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="38.9246%" y="325" width="0.0131%" height="15" fill="rgb(230,229,49)" fg:x="29680" fg:w="10"/><text x="39.1746%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (44 samples, 0.06%)</title><rect x="38.9377%" y="341" width="0.0577%" height="15" fill="rgb(238,70,47)" fg:x="29690" fg:w="44"/><text x="39.1877%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="38.9954%" y="341" width="0.0157%" height="15" fill="rgb(231,160,17)" fg:x="29734" fg:w="12"/><text x="39.2454%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (303 samples, 0.40%)</title><rect x="38.6243%" y="357" width="0.3974%" height="15" fill="rgb(218,68,53)" fg:x="29451" fg:w="303"/><text x="38.8743%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.01%)</title><rect x="39.0111%" y="341" width="0.0105%" height="15" fill="rgb(236,111,10)" fg:x="29746" fg:w="8"/><text x="39.2611%" y="351.50"></text></g><g><title>core::cmp::min (26 samples, 0.03%)</title><rect x="39.0505%" y="325" width="0.0341%" height="15" fill="rgb(224,34,41)" fg:x="29776" fg:w="26"/><text x="39.3005%" y="335.50"></text></g><g><title>core::cmp::Ord::min (25 samples, 0.03%)</title><rect x="39.0518%" y="309" width="0.0328%" height="15" fill="rgb(241,118,19)" fg:x="29777" fg:w="25"/><text x="39.3018%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (921 samples, 1.21%)</title><rect x="37.9200%" y="485" width="1.2079%" height="15" fill="rgb(238,129,25)" fg:x="28914" fg:w="921"/><text x="38.1700%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (919 samples, 1.21%)</title><rect x="37.9226%" y="469" width="1.2052%" height="15" fill="rgb(238,22,31)" fg:x="28916" fg:w="919"/><text x="38.1726%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (498 samples, 0.65%)</title><rect x="38.4748%" y="453" width="0.6531%" height="15" fill="rgb(222,174,48)" fg:x="29337" fg:w="498"/><text x="38.7248%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (497 samples, 0.65%)</title><rect x="38.4761%" y="437" width="0.6518%" height="15" fill="rgb(206,152,40)" fg:x="29338" fg:w="497"/><text x="38.7261%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (386 samples, 0.51%)</title><rect x="38.6216%" y="421" width="0.5062%" height="15" fill="rgb(218,99,54)" fg:x="29449" fg:w="386"/><text x="38.8716%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (386 samples, 0.51%)</title><rect x="38.6216%" y="405" width="0.5062%" height="15" fill="rgb(220,174,26)" fg:x="29449" fg:w="386"/><text x="38.8716%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (384 samples, 0.50%)</title><rect x="38.6243%" y="389" width="0.5036%" height="15" fill="rgb(245,116,9)" fg:x="29451" fg:w="384"/><text x="38.8743%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (384 samples, 0.50%)</title><rect x="38.6243%" y="373" width="0.5036%" height="15" fill="rgb(209,72,35)" fg:x="29451" fg:w="384"/><text x="38.8743%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u8 (81 samples, 0.11%)</title><rect x="39.0216%" y="357" width="0.1062%" height="15" fill="rgb(226,126,21)" fg:x="29754" fg:w="81"/><text x="39.2716%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (80 samples, 0.10%)</title><rect x="39.0230%" y="341" width="0.1049%" height="15" fill="rgb(227,192,1)" fg:x="29755" fg:w="80"/><text x="39.2730%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (33 samples, 0.04%)</title><rect x="39.0846%" y="325" width="0.0433%" height="15" fill="rgb(237,180,29)" fg:x="29802" fg:w="33"/><text x="39.3346%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (20 samples, 0.03%)</title><rect x="39.1410%" y="469" width="0.0262%" height="15" fill="rgb(230,197,35)" fg:x="29845" fg:w="20"/><text x="39.3910%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.01%)</title><rect x="39.1541%" y="453" width="0.0131%" height="15" fill="rgb(246,193,31)" fg:x="29855" fg:w="10"/><text x="39.4041%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (13 samples, 0.02%)</title><rect x="39.1895%" y="453" width="0.0170%" height="15" fill="rgb(241,36,4)" fg:x="29882" fg:w="13"/><text x="39.4395%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.02%)</title><rect x="39.1908%" y="437" width="0.0157%" height="15" fill="rgb(241,130,17)" fg:x="29883" fg:w="12"/><text x="39.4408%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="39.3521%" y="421" width="0.0105%" height="15" fill="rgb(206,137,32)" fg:x="30006" fg:w="8"/><text x="39.6021%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.11%)</title><rect x="39.2931%" y="437" width="0.1062%" height="15" fill="rgb(237,228,51)" fg:x="29961" fg:w="81"/><text x="39.5431%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (28 samples, 0.04%)</title><rect x="39.3626%" y="421" width="0.0367%" height="15" fill="rgb(243,6,42)" fg:x="30014" fg:w="28"/><text x="39.6126%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (9 samples, 0.01%)</title><rect x="39.3875%" y="405" width="0.0118%" height="15" fill="rgb(251,74,28)" fg:x="30033" fg:w="9"/><text x="39.6375%" y="415.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (9 samples, 0.01%)</title><rect x="39.4216%" y="405" width="0.0118%" height="15" fill="rgb(218,20,49)" fg:x="30059" fg:w="9"/><text x="39.6716%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (452 samples, 0.59%)</title><rect x="39.4584%" y="341" width="0.5928%" height="15" fill="rgb(238,28,14)" fg:x="30087" fg:w="452"/><text x="39.7084%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (63 samples, 0.08%)</title><rect x="40.1049%" y="325" width="0.0826%" height="15" fill="rgb(229,40,46)" fg:x="30580" fg:w="63"/><text x="40.3549%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (40 samples, 0.05%)</title><rect x="40.1351%" y="309" width="0.0525%" height="15" fill="rgb(244,195,20)" fg:x="30603" fg:w="40"/><text x="40.3851%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (562 samples, 0.74%)</title><rect x="39.4570%" y="357" width="0.7370%" height="15" fill="rgb(253,56,35)" fg:x="30086" fg:w="562"/><text x="39.7070%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (109 samples, 0.14%)</title><rect x="40.0511%" y="341" width="0.1430%" height="15" fill="rgb(210,149,44)" fg:x="30539" fg:w="109"/><text x="40.3011%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (582 samples, 0.76%)</title><rect x="39.4374%" y="373" width="0.7633%" height="15" fill="rgb(240,135,12)" fg:x="30071" fg:w="582"/><text x="39.6874%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (586 samples, 0.77%)</title><rect x="39.4374%" y="389" width="0.7685%" height="15" fill="rgb(251,24,50)" fg:x="30071" fg:w="586"/><text x="39.6874%" y="399.50"></text></g><g><title>[libc-2.31.so] (346 samples, 0.45%)</title><rect x="40.2570%" y="325" width="0.4538%" height="15" fill="rgb(243,200,47)" fg:x="30696" fg:w="346"/><text x="40.5070%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (996 samples, 1.31%)</title><rect x="39.4098%" y="421" width="1.3062%" height="15" fill="rgb(224,166,26)" fg:x="30050" fg:w="996"/><text x="39.6598%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (978 samples, 1.28%)</title><rect x="39.4334%" y="405" width="1.2826%" height="15" fill="rgb(233,0,47)" fg:x="30068" fg:w="978"/><text x="39.6834%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (389 samples, 0.51%)</title><rect x="40.2059%" y="389" width="0.5102%" height="15" fill="rgb(253,80,5)" fg:x="30657" fg:w="389"/><text x="40.4559%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (385 samples, 0.50%)</title><rect x="40.2111%" y="373" width="0.5049%" height="15" fill="rgb(214,133,25)" fg:x="30661" fg:w="385"/><text x="40.4611%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (384 samples, 0.50%)</title><rect x="40.2125%" y="357" width="0.5036%" height="15" fill="rgb(209,27,14)" fg:x="30662" fg:w="384"/><text x="40.4625%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (382 samples, 0.50%)</title><rect x="40.2151%" y="341" width="0.5010%" height="15" fill="rgb(219,102,51)" fg:x="30664" fg:w="382"/><text x="40.4651%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (24 samples, 0.03%)</title><rect x="40.7161%" y="421" width="0.0315%" height="15" fill="rgb(237,18,16)" fg:x="31046" fg:w="24"/><text x="40.9661%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="40.7318%" y="405" width="0.0157%" height="15" fill="rgb(241,85,17)" fg:x="31058" fg:w="12"/><text x="40.9818%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1,057 samples, 1.39%)</title><rect x="39.4007%" y="437" width="1.3862%" height="15" fill="rgb(236,90,42)" fg:x="30043" fg:w="1057"/><text x="39.6507%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (30 samples, 0.04%)</title><rect x="40.7475%" y="421" width="0.0393%" height="15" fill="rgb(249,57,21)" fg:x="31070" fg:w="30"/><text x="40.9975%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (27 samples, 0.04%)</title><rect x="40.7515%" y="405" width="0.0354%" height="15" fill="rgb(243,12,36)" fg:x="31073" fg:w="27"/><text x="41.0015%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (40 samples, 0.05%)</title><rect x="40.7895%" y="437" width="0.0525%" height="15" fill="rgb(253,128,47)" fg:x="31102" fg:w="40"/><text x="41.0395%" y="447.50"></text></g><g><title>core::cmp::Ord::min (38 samples, 0.05%)</title><rect x="40.7921%" y="421" width="0.0498%" height="15" fill="rgb(207,33,20)" fg:x="31104" fg:w="38"/><text x="41.0421%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (20 samples, 0.03%)</title><rect x="40.8157%" y="405" width="0.0262%" height="15" fill="rgb(233,215,35)" fg:x="31122" fg:w="20"/><text x="41.0657%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (325 samples, 0.43%)</title><rect x="40.8420%" y="437" width="0.4262%" height="15" fill="rgb(249,188,52)" fg:x="31142" fg:w="325"/><text x="41.0920%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (304 samples, 0.40%)</title><rect x="40.8695%" y="421" width="0.3987%" height="15" fill="rgb(225,12,32)" fg:x="31163" fg:w="304"/><text x="41.1195%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (304 samples, 0.40%)</title><rect x="40.8695%" y="405" width="0.3987%" height="15" fill="rgb(247,98,14)" fg:x="31163" fg:w="304"/><text x="41.1195%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (65 samples, 0.09%)</title><rect x="41.3246%" y="421" width="0.0852%" height="15" fill="rgb(247,219,48)" fg:x="31510" fg:w="65"/><text x="41.5746%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (25 samples, 0.03%)</title><rect x="41.3770%" y="405" width="0.0328%" height="15" fill="rgb(253,60,48)" fg:x="31550" fg:w="25"/><text x="41.6270%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (12 samples, 0.02%)</title><rect x="41.3941%" y="389" width="0.0157%" height="15" fill="rgb(245,15,52)" fg:x="31563" fg:w="12"/><text x="41.6441%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (59 samples, 0.08%)</title><rect x="41.4098%" y="421" width="0.0774%" height="15" fill="rgb(220,133,28)" fg:x="31575" fg:w="59"/><text x="41.6598%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (27 samples, 0.04%)</title><rect x="41.4518%" y="405" width="0.0354%" height="15" fill="rgb(217,180,4)" fg:x="31607" fg:w="27"/><text x="41.7018%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (272 samples, 0.36%)</title><rect x="41.2682%" y="437" width="0.3567%" height="15" fill="rgb(251,24,1)" fg:x="31467" fg:w="272"/><text x="41.5182%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (105 samples, 0.14%)</title><rect x="41.4872%" y="421" width="0.1377%" height="15" fill="rgb(212,185,49)" fg:x="31634" fg:w="105"/><text x="41.7372%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (94 samples, 0.12%)</title><rect x="41.5016%" y="405" width="0.1233%" height="15" fill="rgb(215,175,22)" fg:x="31645" fg:w="94"/><text x="41.7516%" y="415.50"></text></g><g><title>core::core_arch::simd::i8x16::new (19 samples, 0.02%)</title><rect x="41.6000%" y="389" width="0.0249%" height="15" fill="rgb(250,205,14)" fg:x="31720" fg:w="19"/><text x="41.8500%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (15 samples, 0.02%)</title><rect x="41.6354%" y="405" width="0.0197%" height="15" fill="rgb(225,211,22)" fg:x="31747" fg:w="15"/><text x="41.8854%" y="415.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (11 samples, 0.01%)</title><rect x="41.6407%" y="389" width="0.0144%" height="15" fill="rgb(251,179,42)" fg:x="31751" fg:w="11"/><text x="41.8907%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.02%)</title><rect x="41.6551%" y="405" width="0.0223%" height="15" fill="rgb(208,216,51)" fg:x="31762" fg:w="17"/><text x="41.9051%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,962 samples, 3.88%)</title><rect x="37.8243%" y="533" width="3.8846%" height="15" fill="rgb(235,36,11)" fg:x="28841" fg:w="2962"/><text x="38.0743%" y="543.50">std:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,952 samples, 3.87%)</title><rect x="37.8374%" y="517" width="3.8715%" height="15" fill="rgb(213,189,28)" fg:x="28851" fg:w="2952"/><text x="38.0874%" y="527.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,922 samples, 3.83%)</title><rect x="37.8767%" y="501" width="3.8321%" height="15" fill="rgb(227,203,42)" fg:x="28881" fg:w="2922"/><text x="38.1267%" y="511.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,968 samples, 2.58%)</title><rect x="39.1279%" y="485" width="2.5810%" height="15" fill="rgb(244,72,36)" fg:x="29835" fg:w="1968"/><text x="39.3779%" y="495.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,938 samples, 2.54%)</title><rect x="39.1672%" y="469" width="2.5416%" height="15" fill="rgb(213,53,17)" fg:x="29865" fg:w="1938"/><text x="39.4172%" y="479.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1,908 samples, 2.50%)</title><rect x="39.2066%" y="453" width="2.5023%" height="15" fill="rgb(207,167,3)" fg:x="29895" fg:w="1908"/><text x="39.4566%" y="463.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (64 samples, 0.08%)</title><rect x="41.6249%" y="437" width="0.0839%" height="15" fill="rgb(216,98,30)" fg:x="31739" fg:w="64"/><text x="41.8749%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (64 samples, 0.08%)</title><rect x="41.6249%" y="421" width="0.0839%" height="15" fill="rgb(236,123,15)" fg:x="31739" fg:w="64"/><text x="41.8749%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (24 samples, 0.03%)</title><rect x="41.6774%" y="405" width="0.0315%" height="15" fill="rgb(248,81,50)" fg:x="31779" fg:w="24"/><text x="41.9274%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (22 samples, 0.03%)</title><rect x="41.6800%" y="389" width="0.0289%" height="15" fill="rgb(214,120,4)" fg:x="31781" fg:w="22"/><text x="41.9300%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="41.7167%" y="421" width="0.0131%" height="15" fill="rgb(208,179,34)" fg:x="31809" fg:w="10"/><text x="41.9667%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (42 samples, 0.06%)</title><rect x="41.7102%" y="469" width="0.0551%" height="15" fill="rgb(227,140,7)" fg:x="31804" fg:w="42"/><text x="41.9602%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (41 samples, 0.05%)</title><rect x="41.7115%" y="453" width="0.0538%" height="15" fill="rgb(214,22,6)" fg:x="31805" fg:w="41"/><text x="41.9615%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (41 samples, 0.05%)</title><rect x="41.7115%" y="437" width="0.0538%" height="15" fill="rgb(207,137,27)" fg:x="31805" fg:w="41"/><text x="41.9615%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.04%)</title><rect x="41.7298%" y="421" width="0.0354%" height="15" fill="rgb(210,8,46)" fg:x="31819" fg:w="27"/><text x="41.9798%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.01%)</title><rect x="41.7652%" y="469" width="0.0131%" height="15" fill="rgb(240,16,54)" fg:x="31846" fg:w="10"/><text x="42.0152%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.02%)</title><rect x="41.7797%" y="405" width="0.0170%" height="15" fill="rgb(211,209,29)" fg:x="31857" fg:w="13"/><text x="42.0297%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.02%)</title><rect x="41.7797%" y="389" width="0.0170%" height="15" fill="rgb(226,228,24)" fg:x="31857" fg:w="13"/><text x="42.0297%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.02%)</title><rect x="41.7797%" y="421" width="0.0184%" height="15" fill="rgb(222,84,9)" fg:x="31857" fg:w="14"/><text x="42.0297%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="41.7797%" y="437" width="0.0210%" height="15" fill="rgb(234,203,30)" fg:x="31857" fg:w="16"/><text x="42.0297%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.03%)</title><rect x="41.8098%" y="357" width="0.0275%" height="15" fill="rgb(238,109,14)" fg:x="31880" fg:w="21"/><text x="42.0598%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.04%)</title><rect x="41.8033%" y="373" width="0.0380%" height="15" fill="rgb(233,206,34)" fg:x="31875" fg:w="29"/><text x="42.0533%" y="383.50"></text></g><g><title>core::cmp::min (9 samples, 0.01%)</title><rect x="41.8452%" y="341" width="0.0118%" height="15" fill="rgb(220,167,47)" fg:x="31907" fg:w="9"/><text x="42.0952%" y="351.50"></text></g><g><title>hashbrown::map::make_insert_hash (115 samples, 0.15%)</title><rect x="41.7089%" y="501" width="0.1508%" height="15" fill="rgb(238,105,10)" fg:x="31803" fg:w="115"/><text x="41.9589%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (115 samples, 0.15%)</title><rect x="41.7089%" y="485" width="0.1508%" height="15" fill="rgb(213,227,17)" fg:x="31803" fg:w="115"/><text x="41.9589%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (62 samples, 0.08%)</title><rect x="41.7784%" y="469" width="0.0813%" height="15" fill="rgb(217,132,38)" fg:x="31856" fg:w="62"/><text x="42.0284%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (62 samples, 0.08%)</title><rect x="41.7784%" y="453" width="0.0813%" height="15" fill="rgb(242,146,4)" fg:x="31856" fg:w="62"/><text x="42.0284%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (45 samples, 0.06%)</title><rect x="41.8007%" y="437" width="0.0590%" height="15" fill="rgb(212,61,9)" fg:x="31873" fg:w="45"/><text x="42.0507%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (45 samples, 0.06%)</title><rect x="41.8007%" y="421" width="0.0590%" height="15" fill="rgb(247,126,22)" fg:x="31873" fg:w="45"/><text x="42.0507%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (44 samples, 0.06%)</title><rect x="41.8020%" y="405" width="0.0577%" height="15" fill="rgb(220,196,2)" fg:x="31874" fg:w="44"/><text x="42.0520%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (44 samples, 0.06%)</title><rect x="41.8020%" y="389" width="0.0577%" height="15" fill="rgb(208,46,4)" fg:x="31874" fg:w="44"/><text x="42.0520%" y="399.50"></text></g><g><title>core::hash::Hasher::write_u8 (14 samples, 0.02%)</title><rect x="41.8413%" y="373" width="0.0184%" height="15" fill="rgb(252,104,46)" fg:x="31904" fg:w="14"/><text x="42.0913%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="41.8413%" y="357" width="0.0184%" height="15" fill="rgb(237,152,48)" fg:x="31904" fg:w="14"/><text x="42.0913%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="41.9108%" y="437" width="0.0105%" height="15" fill="rgb(221,59,37)" fg:x="31957" fg:w="8"/><text x="42.1608%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (36 samples, 0.05%)</title><rect x="41.8951%" y="453" width="0.0472%" height="15" fill="rgb(209,202,51)" fg:x="31945" fg:w="36"/><text x="42.1451%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (16 samples, 0.02%)</title><rect x="41.9213%" y="437" width="0.0210%" height="15" fill="rgb(228,81,30)" fg:x="31965" fg:w="16"/><text x="42.1713%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (15 samples, 0.02%)</title><rect x="41.9226%" y="421" width="0.0197%" height="15" fill="rgb(227,42,39)" fg:x="31966" fg:w="15"/><text x="42.1726%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.02%)</title><rect x="41.9528%" y="421" width="0.0157%" height="15" fill="rgb(221,26,2)" fg:x="31989" fg:w="12"/><text x="42.2028%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (94 samples, 0.12%)</title><rect x="41.8597%" y="501" width="0.1233%" height="15" fill="rgb(254,61,31)" fg:x="31918" fg:w="94"/><text x="42.1097%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (94 samples, 0.12%)</title><rect x="41.8597%" y="485" width="0.1233%" height="15" fill="rgb(222,173,38)" fg:x="31918" fg:w="94"/><text x="42.1097%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (93 samples, 0.12%)</title><rect x="41.8610%" y="469" width="0.1220%" height="15" fill="rgb(218,50,12)" fg:x="31919" fg:w="93"/><text x="42.1110%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (31 samples, 0.04%)</title><rect x="41.9423%" y="453" width="0.0407%" height="15" fill="rgb(223,88,40)" fg:x="31981" fg:w="31"/><text x="42.1923%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (31 samples, 0.04%)</title><rect x="41.9423%" y="437" width="0.0407%" height="15" fill="rgb(237,54,19)" fg:x="31981" fg:w="31"/><text x="42.1923%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (11 samples, 0.01%)</title><rect x="41.9685%" y="421" width="0.0144%" height="15" fill="rgb(251,129,25)" fg:x="32001" fg:w="11"/><text x="42.2185%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (11 samples, 0.01%)</title><rect x="41.9685%" y="405" width="0.0144%" height="15" fill="rgb(238,97,19)" fg:x="32001" fg:w="11"/><text x="42.2185%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (19 samples, 0.02%)</title><rect x="41.9921%" y="469" width="0.0249%" height="15" fill="rgb(240,169,18)" fg:x="32019" fg:w="19"/><text x="42.2421%" y="479.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="41.9934%" y="453" width="0.0236%" height="15" fill="rgb(230,187,49)" fg:x="32020" fg:w="18"/><text x="42.2434%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (20 samples, 0.03%)</title><rect x="41.9921%" y="485" width="0.0262%" height="15" fill="rgb(209,44,26)" fg:x="32019" fg:w="20"/><text x="42.2421%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (91 samples, 0.12%)</title><rect x="42.0970%" y="421" width="0.1193%" height="15" fill="rgb(244,0,6)" fg:x="32099" fg:w="91"/><text x="42.3470%" y="431.50"></text></g><g><title>[libc-2.31.so] (91 samples, 0.12%)</title><rect x="42.0970%" y="405" width="0.1193%" height="15" fill="rgb(248,18,21)" fg:x="32099" fg:w="91"/><text x="42.3470%" y="415.50"></text></g><g><title>[unknown] (75 samples, 0.10%)</title><rect x="42.1180%" y="389" width="0.0984%" height="15" fill="rgb(245,180,19)" fg:x="32115" fg:w="75"/><text x="42.3680%" y="399.50"></text></g><g><title>[unknown] (64 samples, 0.08%)</title><rect x="42.1325%" y="373" width="0.0839%" height="15" fill="rgb(252,118,36)" fg:x="32126" fg:w="64"/><text x="42.3825%" y="383.50"></text></g><g><title>[unknown] (64 samples, 0.08%)</title><rect x="42.1325%" y="357" width="0.0839%" height="15" fill="rgb(210,224,19)" fg:x="32126" fg:w="64"/><text x="42.3825%" y="367.50"></text></g><g><title>[unknown] (62 samples, 0.08%)</title><rect x="42.1351%" y="341" width="0.0813%" height="15" fill="rgb(218,30,24)" fg:x="32128" fg:w="62"/><text x="42.3851%" y="351.50"></text></g><g><title>[unknown] (59 samples, 0.08%)</title><rect x="42.1390%" y="325" width="0.0774%" height="15" fill="rgb(219,75,50)" fg:x="32131" fg:w="59"/><text x="42.3890%" y="335.50"></text></g><g><title>[unknown] (54 samples, 0.07%)</title><rect x="42.1456%" y="309" width="0.0708%" height="15" fill="rgb(234,72,50)" fg:x="32136" fg:w="54"/><text x="42.3956%" y="319.50"></text></g><g><title>[unknown] (53 samples, 0.07%)</title><rect x="42.1469%" y="293" width="0.0695%" height="15" fill="rgb(219,100,48)" fg:x="32137" fg:w="53"/><text x="42.3969%" y="303.50"></text></g><g><title>[unknown] (48 samples, 0.06%)</title><rect x="42.1534%" y="277" width="0.0630%" height="15" fill="rgb(253,5,41)" fg:x="32142" fg:w="48"/><text x="42.4034%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.05%)</title><rect x="42.1666%" y="261" width="0.0498%" height="15" fill="rgb(247,181,11)" fg:x="32152" fg:w="38"/><text x="42.4166%" y="271.50"></text></g><g><title>[unknown] (28 samples, 0.04%)</title><rect x="42.1797%" y="245" width="0.0367%" height="15" fill="rgb(222,223,25)" fg:x="32162" fg:w="28"/><text x="42.4297%" y="255.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="42.1823%" y="229" width="0.0341%" height="15" fill="rgb(214,198,28)" fg:x="32164" fg:w="26"/><text x="42.4323%" y="239.50"></text></g><g><title>core::ptr::read (12 samples, 0.02%)</title><rect x="42.2413%" y="373" width="0.0157%" height="15" fill="rgb(230,46,43)" fg:x="32209" fg:w="12"/><text x="42.4913%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37 samples, 0.05%)</title><rect x="42.2164%" y="421" width="0.0485%" height="15" fill="rgb(233,65,53)" fg:x="32190" fg:w="37"/><text x="42.4664%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (34 samples, 0.04%)</title><rect x="42.2203%" y="405" width="0.0446%" height="15" fill="rgb(221,121,27)" fg:x="32193" fg:w="34"/><text x="42.4703%" y="415.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="42.2400%" y="389" width="0.0249%" height="15" fill="rgb(247,70,47)" fg:x="32208" fg:w="19"/><text x="42.4900%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50 samples, 0.07%)</title><rect x="42.3279%" y="309" width="0.0656%" height="15" fill="rgb(228,85,35)" fg:x="32275" fg:w="50"/><text x="42.5779%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="42.6098%" y="293" width="0.0131%" height="15" fill="rgb(209,50,18)" fg:x="32490" fg:w="10"/><text x="42.8598%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (177 samples, 0.23%)</title><rect x="42.3934%" y="309" width="0.2321%" height="15" fill="rgb(250,19,35)" fg:x="32325" fg:w="177"/><text x="42.6434%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (246 samples, 0.32%)</title><rect x="42.3043%" y="357" width="0.3226%" height="15" fill="rgb(253,107,29)" fg:x="32257" fg:w="246"/><text x="42.5543%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (246 samples, 0.32%)</title><rect x="42.3043%" y="341" width="0.3226%" height="15" fill="rgb(252,179,29)" fg:x="32257" fg:w="246"/><text x="42.5543%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (246 samples, 0.32%)</title><rect x="42.3043%" y="325" width="0.3226%" height="15" fill="rgb(238,194,6)" fg:x="32257" fg:w="246"/><text x="42.5543%" y="335.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.04%)</title><rect x="42.6308%" y="341" width="0.0354%" height="15" fill="rgb(238,164,29)" fg:x="32506" fg:w="27"/><text x="42.8808%" y="351.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.07%)</title><rect x="42.6675%" y="325" width="0.0669%" height="15" fill="rgb(224,25,9)" fg:x="32534" fg:w="51"/><text x="42.9175%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (88 samples, 0.12%)</title><rect x="42.6269%" y="357" width="0.1154%" height="15" fill="rgb(244,153,23)" fg:x="32503" fg:w="88"/><text x="42.8769%" y="367.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (58 samples, 0.08%)</title><rect x="42.6662%" y="341" width="0.0761%" height="15" fill="rgb(212,203,14)" fg:x="32533" fg:w="58"/><text x="42.9162%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (44 samples, 0.06%)</title><rect x="42.7738%" y="293" width="0.0577%" height="15" fill="rgb(220,164,20)" fg:x="32615" fg:w="44"/><text x="43.0238%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (43 samples, 0.06%)</title><rect x="42.7751%" y="277" width="0.0564%" height="15" fill="rgb(222,203,48)" fg:x="32616" fg:w="43"/><text x="43.0251%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.03%)</title><rect x="42.8052%" y="261" width="0.0262%" height="15" fill="rgb(215,159,22)" fg:x="32639" fg:w="20"/><text x="43.0552%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="42.8184%" y="245" width="0.0131%" height="15" fill="rgb(216,183,47)" fg:x="32649" fg:w="10"/><text x="43.0684%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.08%)</title><rect x="42.7593%" y="309" width="0.0761%" height="15" fill="rgb(229,195,25)" fg:x="32604" fg:w="58"/><text x="43.0093%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (59 samples, 0.08%)</title><rect x="42.7593%" y="325" width="0.0774%" height="15" fill="rgb(224,132,51)" fg:x="32604" fg:w="59"/><text x="43.0093%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (135 samples, 0.18%)</title><rect x="42.9115%" y="245" width="0.1770%" height="15" fill="rgb(240,63,7)" fg:x="32720" fg:w="135"/><text x="43.1615%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="43.0780%" y="229" width="0.0105%" height="15" fill="rgb(249,182,41)" fg:x="32847" fg:w="8"/><text x="43.3280%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (39 samples, 0.05%)</title><rect x="43.0898%" y="245" width="0.0511%" height="15" fill="rgb(243,47,26)" fg:x="32856" fg:w="39"/><text x="43.3398%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (436 samples, 0.57%)</title><rect x="43.1410%" y="245" width="0.5718%" height="15" fill="rgb(233,48,2)" fg:x="32895" fg:w="436"/><text x="43.3910%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (662 samples, 0.87%)</title><rect x="42.8511%" y="261" width="0.8682%" height="15" fill="rgb(244,165,34)" fg:x="32674" fg:w="662"/><text x="43.1011%" y="271.50"></text></g><g><title>core::cmp::min (19 samples, 0.02%)</title><rect x="43.7561%" y="229" width="0.0249%" height="15" fill="rgb(207,89,7)" fg:x="33364" fg:w="19"/><text x="44.0061%" y="239.50"></text></g><g><title>core::cmp::Ord::min (17 samples, 0.02%)</title><rect x="43.7587%" y="213" width="0.0223%" height="15" fill="rgb(244,117,36)" fg:x="33366" fg:w="17"/><text x="44.0087%" y="223.50"></text></g><g><title>core::hash::Hasher::write_u8 (66 samples, 0.09%)</title><rect x="43.7193%" y="261" width="0.0866%" height="15" fill="rgb(226,144,34)" fg:x="33336" fg:w="66"/><text x="43.9693%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (63 samples, 0.08%)</title><rect x="43.7233%" y="245" width="0.0826%" height="15" fill="rgb(213,23,19)" fg:x="33339" fg:w="63"/><text x="43.9733%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (19 samples, 0.02%)</title><rect x="43.7810%" y="229" width="0.0249%" height="15" fill="rgb(217,75,12)" fg:x="33383" fg:w="19"/><text x="44.0310%" y="239.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1,162 samples, 1.52%)</title><rect x="42.2859%" y="405" width="1.5239%" height="15" fill="rgb(224,159,17)" fg:x="32243" fg:w="1162"/><text x="42.5359%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (1,161 samples, 1.52%)</title><rect x="42.2872%" y="389" width="1.5226%" height="15" fill="rgb(217,118,1)" fg:x="32244" fg:w="1161"/><text x="42.5372%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,159 samples, 1.52%)</title><rect x="42.2898%" y="373" width="1.5200%" height="15" fill="rgb(232,180,48)" fg:x="32246" fg:w="1159"/><text x="42.5398%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (814 samples, 1.07%)</title><rect x="42.7423%" y="357" width="1.0675%" height="15" fill="rgb(230,27,33)" fg:x="32591" fg:w="814"/><text x="42.9923%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (812 samples, 1.06%)</title><rect x="42.7449%" y="341" width="1.0649%" height="15" fill="rgb(205,31,21)" fg:x="32593" fg:w="812"/><text x="42.9949%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (742 samples, 0.97%)</title><rect x="42.8367%" y="325" width="0.9731%" height="15" fill="rgb(253,59,4)" fg:x="32663" fg:w="742"/><text x="43.0867%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (742 samples, 0.97%)</title><rect x="42.8367%" y="309" width="0.9731%" height="15" fill="rgb(224,201,9)" fg:x="32663" fg:w="742"/><text x="43.0867%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (741 samples, 0.97%)</title><rect x="42.8380%" y="293" width="0.9718%" height="15" fill="rgb(229,206,30)" fg:x="32664" fg:w="741"/><text x="43.0880%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (741 samples, 0.97%)</title><rect x="42.8380%" y="277" width="0.9718%" height="15" fill="rgb(212,67,47)" fg:x="32664" fg:w="741"/><text x="43.0880%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (26 samples, 0.03%)</title><rect x="43.8098%" y="405" width="0.0341%" height="15" fill="rgb(211,96,50)" fg:x="33405" fg:w="26"/><text x="44.0598%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (18 samples, 0.02%)</title><rect x="43.8203%" y="389" width="0.0236%" height="15" fill="rgb(252,114,18)" fg:x="33413" fg:w="18"/><text x="44.0703%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.01%)</title><rect x="43.8308%" y="373" width="0.0131%" height="15" fill="rgb(223,58,37)" fg:x="33421" fg:w="10"/><text x="44.0808%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.01%)</title><rect x="43.8308%" y="357" width="0.0131%" height="15" fill="rgb(237,70,4)" fg:x="33421" fg:w="10"/><text x="44.0808%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (32 samples, 0.04%)</title><rect x="43.8439%" y="389" width="0.0420%" height="15" fill="rgb(244,85,46)" fg:x="33431" fg:w="32"/><text x="44.0939%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.01%)</title><rect x="43.8754%" y="373" width="0.0105%" height="15" fill="rgb(223,39,52)" fg:x="33455" fg:w="8"/><text x="44.1254%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1,231 samples, 1.61%)</title><rect x="42.2728%" y="421" width="1.6144%" height="15" fill="rgb(218,200,14)" fg:x="32233" fg:w="1231"/><text x="42.5228%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (33 samples, 0.04%)</title><rect x="43.8439%" y="405" width="0.0433%" height="15" fill="rgb(208,171,16)" fg:x="33431" fg:w="33"/><text x="44.0939%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (22 samples, 0.03%)</title><rect x="43.8872%" y="421" width="0.0289%" height="15" fill="rgb(234,200,18)" fg:x="33464" fg:w="22"/><text x="44.1372%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (8 samples, 0.01%)</title><rect x="43.9161%" y="421" width="0.0105%" height="15" fill="rgb(228,45,11)" fg:x="33486" fg:w="8"/><text x="44.1661%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="43.9161%" y="405" width="0.0105%" height="15" fill="rgb(237,182,11)" fg:x="33486" fg:w="8"/><text x="44.1661%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (24 samples, 0.03%)</title><rect x="44.0223%" y="389" width="0.0315%" height="15" fill="rgb(241,175,49)" fg:x="33567" fg:w="24"/><text x="44.2723%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (14 samples, 0.02%)</title><rect x="44.0354%" y="373" width="0.0184%" height="15" fill="rgb(247,38,35)" fg:x="33577" fg:w="14"/><text x="44.2854%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (24 samples, 0.03%)</title><rect x="44.0551%" y="389" width="0.0315%" height="15" fill="rgb(228,39,49)" fg:x="33592" fg:w="24"/><text x="44.3051%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%)</title><rect x="44.0761%" y="373" width="0.0105%" height="15" fill="rgb(226,101,26)" fg:x="33608" fg:w="8"/><text x="44.3261%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (147 samples, 0.19%)</title><rect x="43.9528%" y="405" width="0.1928%" height="15" fill="rgb(206,141,19)" fg:x="33514" fg:w="147"/><text x="44.2028%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (45 samples, 0.06%)</title><rect x="44.0866%" y="389" width="0.0590%" height="15" fill="rgb(211,200,13)" fg:x="33616" fg:w="45"/><text x="44.3366%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (44 samples, 0.06%)</title><rect x="44.0879%" y="373" width="0.0577%" height="15" fill="rgb(241,121,6)" fg:x="33617" fg:w="44"/><text x="44.3379%" y="383.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (21 samples, 0.03%)</title><rect x="44.1180%" y="357" width="0.0275%" height="15" fill="rgb(234,221,29)" fg:x="33640" fg:w="21"/><text x="44.3680%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (9 samples, 0.01%)</title><rect x="44.1338%" y="341" width="0.0118%" height="15" fill="rgb(229,136,5)" fg:x="33652" fg:w="9"/><text x="44.3838%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (20 samples, 0.03%)</title><rect x="44.1469%" y="389" width="0.0262%" height="15" fill="rgb(238,36,11)" fg:x="33662" fg:w="20"/><text x="44.3969%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (208 samples, 0.27%)</title><rect x="43.9266%" y="421" width="0.2728%" height="15" fill="rgb(251,55,41)" fg:x="33494" fg:w="208"/><text x="44.1766%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (41 samples, 0.05%)</title><rect x="44.1456%" y="405" width="0.0538%" height="15" fill="rgb(242,34,40)" fg:x="33661" fg:w="41"/><text x="44.3956%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (20 samples, 0.03%)</title><rect x="44.1731%" y="389" width="0.0262%" height="15" fill="rgb(215,42,17)" fg:x="33682" fg:w="20"/><text x="44.4231%" y="399.50"></text></g><g><title>core::cmp::Ord::min (18 samples, 0.02%)</title><rect x="44.1757%" y="373" width="0.0236%" height="15" fill="rgb(207,44,46)" fg:x="33684" fg:w="18"/><text x="44.4257%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,660 samples, 2.18%)</title><rect x="42.0236%" y="485" width="2.1770%" height="15" fill="rgb(211,206,28)" fg:x="32043" fg:w="1660"/><text x="42.2736%" y="495.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,660 samples, 2.18%)</title><rect x="42.0236%" y="469" width="2.1770%" height="15" fill="rgb(237,167,16)" fg:x="32043" fg:w="1660"/><text x="42.2736%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1,660 samples, 2.18%)</title><rect x="42.0236%" y="453" width="2.1770%" height="15" fill="rgb(233,66,6)" fg:x="32043" fg:w="1660"/><text x="42.2736%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1,658 samples, 2.17%)</title><rect x="42.0262%" y="437" width="2.1744%" height="15" fill="rgb(246,123,29)" fg:x="32045" fg:w="1658"/><text x="42.2762%" y="447.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (26 samples, 0.03%)</title><rect x="44.2020%" y="485" width="0.0341%" height="15" fill="rgb(209,62,40)" fg:x="33704" fg:w="26"/><text x="44.4520%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (11 samples, 0.01%)</title><rect x="44.2216%" y="469" width="0.0144%" height="15" fill="rgb(218,4,25)" fg:x="33719" fg:w="11"/><text x="44.4716%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.01%)</title><rect x="44.2216%" y="453" width="0.0144%" height="15" fill="rgb(253,91,49)" fg:x="33719" fg:w="11"/><text x="44.4716%" y="463.50"></text></g><g><title>day1::day16_part2::bt (21,589 samples, 28.31%)</title><rect x="15.9331%" y="549" width="28.3134%" height="15" fill="rgb(228,155,29)" fg:x="12149" fg:w="21589"/><text x="16.1831%" y="559.50">day1::day16_part2::bt</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,935 samples, 2.54%)</title><rect x="41.7089%" y="533" width="2.5377%" height="15" fill="rgb(243,57,37)" fg:x="31803" fg:w="1935"/><text x="41.9589%" y="543.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,935 samples, 2.54%)</title><rect x="41.7089%" y="517" width="2.5377%" height="15" fill="rgb(244,167,17)" fg:x="31803" fg:w="1935"/><text x="41.9589%" y="527.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,726 samples, 2.26%)</title><rect x="41.9830%" y="501" width="2.2636%" height="15" fill="rgb(207,181,38)" fg:x="32012" fg:w="1726"/><text x="42.2330%" y="511.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (8 samples, 0.01%)</title><rect x="44.2361%" y="485" width="0.0105%" height="15" fill="rgb(211,8,23)" fg:x="33730" fg:w="8"/><text x="44.4861%" y="495.50"></text></g><g><title>alloc::string::String::new (50 samples, 0.07%)</title><rect x="44.5102%" y="517" width="0.0656%" height="15" fill="rgb(235,11,44)" fg:x="33939" fg:w="50"/><text x="44.7602%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="44.5626%" y="501" width="0.0131%" height="15" fill="rgb(248,18,52)" fg:x="33979" fg:w="10"/><text x="44.8126%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.01%)</title><rect x="44.7738%" y="389" width="0.0105%" height="15" fill="rgb(208,4,7)" fg:x="34140" fg:w="8"/><text x="45.0238%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (64 samples, 0.08%)</title><rect x="44.8931%" y="373" width="0.0839%" height="15" fill="rgb(240,17,39)" fg:x="34231" fg:w="64"/><text x="45.1431%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (34 samples, 0.04%)</title><rect x="44.9325%" y="357" width="0.0446%" height="15" fill="rgb(207,170,3)" fg:x="34261" fg:w="34"/><text x="45.1825%" y="367.50"></text></g><g><title>core::ptr::invalid_mut (19 samples, 0.02%)</title><rect x="44.9770%" y="357" width="0.0249%" height="15" fill="rgb(236,100,52)" fg:x="34295" fg:w="19"/><text x="45.2270%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (200 samples, 0.26%)</title><rect x="44.7711%" y="405" width="0.2623%" height="15" fill="rgb(246,78,51)" fg:x="34138" fg:w="200"/><text x="45.0211%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (190 samples, 0.25%)</title><rect x="44.7843%" y="389" width="0.2492%" height="15" fill="rgb(211,17,15)" fg:x="34148" fg:w="190"/><text x="45.0343%" y="399.50"></text></g><g><title>core::ptr::null_mut (43 samples, 0.06%)</title><rect x="44.9770%" y="373" width="0.0564%" height="15" fill="rgb(209,59,46)" fg:x="34295" fg:w="43"/><text x="45.2270%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (24 samples, 0.03%)</title><rect x="45.0020%" y="357" width="0.0315%" height="15" fill="rgb(210,92,25)" fg:x="34314" fg:w="24"/><text x="45.2520%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (10 samples, 0.01%)</title><rect x="45.0977%" y="357" width="0.0131%" height="15" fill="rgb(238,174,52)" fg:x="34387" fg:w="10"/><text x="45.3477%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (46 samples, 0.06%)</title><rect x="45.0584%" y="373" width="0.0603%" height="15" fill="rgb(230,73,7)" fg:x="34357" fg:w="46"/><text x="45.3084%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.03%)</title><rect x="45.1948%" y="341" width="0.0315%" height="15" fill="rgb(243,124,40)" fg:x="34461" fg:w="24"/><text x="45.4448%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.01%)</title><rect x="45.2275%" y="341" width="0.0105%" height="15" fill="rgb(244,170,11)" fg:x="34486" fg:w="8"/><text x="45.4775%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="45.2643%" y="325" width="0.0157%" height="15" fill="rgb(207,114,54)" fg:x="34514" fg:w="12"/><text x="45.5143%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (55 samples, 0.07%)</title><rect x="45.2380%" y="341" width="0.0721%" height="15" fill="rgb(205,42,20)" fg:x="34494" fg:w="55"/><text x="45.4880%" y="351.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (19 samples, 0.02%)</title><rect x="45.2852%" y="325" width="0.0249%" height="15" fill="rgb(230,30,28)" fg:x="34530" fg:w="19"/><text x="45.5352%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="45.4689%" y="293" width="0.0105%" height="15" fill="rgb(205,73,54)" fg:x="34670" fg:w="8"/><text x="45.7189%" y="303.50"></text></g><g><title>__GI___libc_malloc (67 samples, 0.09%)</title><rect x="45.5030%" y="277" width="0.0879%" height="15" fill="rgb(254,227,23)" fg:x="34696" fg:w="67"/><text x="45.7530%" y="287.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.12%)</title><rect x="45.4793%" y="293" width="0.1167%" height="15" fill="rgb(228,202,34)" fg:x="34678" fg:w="89"/><text x="45.7293%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::size (11 samples, 0.01%)</title><rect x="45.5961%" y="293" width="0.0144%" height="15" fill="rgb(222,225,37)" fg:x="34767" fg:w="11"/><text x="45.8461%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (88 samples, 0.12%)</title><rect x="45.7390%" y="261" width="0.1154%" height="15" fill="rgb(221,14,54)" fg:x="34876" fg:w="88"/><text x="45.9890%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (65 samples, 0.09%)</title><rect x="45.7692%" y="245" width="0.0852%" height="15" fill="rgb(254,102,2)" fg:x="34899" fg:w="65"/><text x="46.0192%" y="255.50"></text></g><g><title>core::ptr::invalid_mut (12 samples, 0.02%)</title><rect x="45.8544%" y="245" width="0.0157%" height="15" fill="rgb(232,104,17)" fg:x="34964" fg:w="12"/><text x="46.1044%" y="255.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (214 samples, 0.28%)</title><rect x="45.6170%" y="293" width="0.2807%" height="15" fill="rgb(250,220,14)" fg:x="34783" fg:w="214"/><text x="45.8670%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (199 samples, 0.26%)</title><rect x="45.6367%" y="277" width="0.2610%" height="15" fill="rgb(241,158,9)" fg:x="34798" fg:w="199"/><text x="45.8867%" y="287.50"></text></g><g><title>core::ptr::null_mut (33 samples, 0.04%)</title><rect x="45.8544%" y="261" width="0.0433%" height="15" fill="rgb(246,9,43)" fg:x="34964" fg:w="33"/><text x="46.1044%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (21 samples, 0.03%)</title><rect x="45.8702%" y="245" width="0.0275%" height="15" fill="rgb(206,73,33)" fg:x="34976" fg:w="21"/><text x="46.1202%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (407 samples, 0.53%)</title><rect x="45.3836%" y="325" width="0.5338%" height="15" fill="rgb(222,79,8)" fg:x="34605" fg:w="407"/><text x="45.6336%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (404 samples, 0.53%)</title><rect x="45.3875%" y="309" width="0.5298%" height="15" fill="rgb(234,8,54)" fg:x="34608" fg:w="404"/><text x="45.6375%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (15 samples, 0.02%)</title><rect x="45.8977%" y="293" width="0.0197%" height="15" fill="rgb(209,134,38)" fg:x="34997" fg:w="15"/><text x="46.1477%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (12 samples, 0.02%)</title><rect x="45.9016%" y="277" width="0.0157%" height="15" fill="rgb(230,127,29)" fg:x="35000" fg:w="12"/><text x="46.1516%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (12 samples, 0.02%)</title><rect x="45.9016%" y="261" width="0.0157%" height="15" fill="rgb(242,44,41)" fg:x="35000" fg:w="12"/><text x="46.1516%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (48 samples, 0.06%)</title><rect x="45.9174%" y="325" width="0.0630%" height="15" fill="rgb(222,56,43)" fg:x="35012" fg:w="48"/><text x="46.1674%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (583 samples, 0.76%)</title><rect x="45.3102%" y="341" width="0.7646%" height="15" fill="rgb(238,39,47)" fg:x="34549" fg:w="583"/><text x="45.5602%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (72 samples, 0.09%)</title><rect x="45.9803%" y="325" width="0.0944%" height="15" fill="rgb(226,79,43)" fg:x="35060" fg:w="72"/><text x="46.2303%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (26 samples, 0.03%)</title><rect x="46.2911%" y="309" width="0.0341%" height="15" fill="rgb(242,105,53)" fg:x="35297" fg:w="26"/><text x="46.5411%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (196 samples, 0.26%)</title><rect x="46.0748%" y="341" width="0.2570%" height="15" fill="rgb(251,132,46)" fg:x="35132" fg:w="196"/><text x="46.3248%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (195 samples, 0.26%)</title><rect x="46.0761%" y="325" width="0.2557%" height="15" fill="rgb(231,77,14)" fg:x="35133" fg:w="195"/><text x="46.3261%" y="335.50"></text></g><g><title>core::cmp::max (165 samples, 0.22%)</title><rect x="46.3318%" y="341" width="0.2164%" height="15" fill="rgb(240,135,9)" fg:x="35328" fg:w="165"/><text x="46.5818%" y="351.50"></text></g><g><title>core::cmp::Ord::max (163 samples, 0.21%)</title><rect x="46.3344%" y="325" width="0.2138%" height="15" fill="rgb(248,109,14)" fg:x="35330" fg:w="163"/><text x="46.5844%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (105 samples, 0.14%)</title><rect x="46.4105%" y="309" width="0.1377%" height="15" fill="rgb(227,146,52)" fg:x="35388" fg:w="105"/><text x="46.6605%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (76 samples, 0.10%)</title><rect x="46.5482%" y="341" width="0.0997%" height="15" fill="rgb(232,54,3)" fg:x="35493" fg:w="76"/><text x="46.7982%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (27 samples, 0.04%)</title><rect x="46.6125%" y="325" width="0.0354%" height="15" fill="rgb(229,201,43)" fg:x="35542" fg:w="27"/><text x="46.8625%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,181 samples, 1.55%)</title><rect x="45.1226%" y="357" width="1.5489%" height="15" fill="rgb(252,161,33)" fg:x="34406" fg:w="1181"/><text x="45.3726%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (18 samples, 0.02%)</title><rect x="46.6479%" y="341" width="0.0236%" height="15" fill="rgb(226,146,40)" fg:x="35569" fg:w="18"/><text x="46.8979%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,265 samples, 1.66%)</title><rect x="45.0374%" y="405" width="1.6590%" height="15" fill="rgb(219,47,25)" fg:x="34341" fg:w="1265"/><text x="45.2874%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,262 samples, 1.66%)</title><rect x="45.0413%" y="389" width="1.6551%" height="15" fill="rgb(250,135,13)" fg:x="34344" fg:w="1262"/><text x="45.2913%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,203 samples, 1.58%)</title><rect x="45.1187%" y="373" width="1.5777%" height="15" fill="rgb(219,229,18)" fg:x="34403" fg:w="1203"/><text x="45.3687%" y="383.50"></text></g><g><title>alloc::raw_vec::handle_reserve (19 samples, 0.02%)</title><rect x="46.6715%" y="357" width="0.0249%" height="15" fill="rgb(217,152,27)" fg:x="35587" fg:w="19"/><text x="46.9215%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.01%)</title><rect x="46.6846%" y="341" width="0.0118%" height="15" fill="rgb(225,71,47)" fg:x="35597" fg:w="9"/><text x="46.9346%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="46.6964%" y="405" width="0.0170%" height="15" fill="rgb(220,139,14)" fg:x="35606" fg:w="13"/><text x="46.9464%" y="415.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.01%)</title><rect x="46.7016%" y="389" width="0.0118%" height="15" fill="rgb(247,54,32)" fg:x="35610" fg:w="9"/><text x="46.9516%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,524 samples, 2.00%)</title><rect x="44.7200%" y="421" width="1.9987%" height="15" fill="rgb(252,131,39)" fg:x="34099" fg:w="1524"/><text x="44.9700%" y="431.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,584 samples, 2.08%)</title><rect x="44.7161%" y="437" width="2.0774%" height="15" fill="rgb(210,108,39)" fg:x="34096" fg:w="1584"/><text x="44.9661%" y="447.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (57 samples, 0.07%)</title><rect x="46.7187%" y="421" width="0.0748%" height="15" fill="rgb(205,23,29)" fg:x="35623" fg:w="57"/><text x="46.9687%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (37 samples, 0.05%)</title><rect x="46.7449%" y="405" width="0.0485%" height="15" fill="rgb(246,139,46)" fg:x="35643" fg:w="37"/><text x="46.9949%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts (22 samples, 0.03%)</title><rect x="46.7646%" y="389" width="0.0289%" height="15" fill="rgb(250,81,26)" fg:x="35658" fg:w="22"/><text x="47.0146%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (15 samples, 0.02%)</title><rect x="46.7738%" y="373" width="0.0197%" height="15" fill="rgb(214,104,7)" fg:x="35665" fg:w="15"/><text x="47.0238%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (15 samples, 0.02%)</title><rect x="46.7738%" y="357" width="0.0197%" height="15" fill="rgb(233,189,8)" fg:x="35665" fg:w="15"/><text x="47.0238%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (52 samples, 0.07%)</title><rect x="46.8879%" y="389" width="0.0682%" height="15" fill="rgb(228,141,17)" fg:x="35752" fg:w="52"/><text x="47.1379%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (145 samples, 0.19%)</title><rect x="46.8184%" y="405" width="0.1902%" height="15" fill="rgb(247,157,1)" fg:x="35699" fg:w="145"/><text x="47.0684%" y="415.50"></text></g><g><title>core::ptr::null (40 samples, 0.05%)</title><rect x="46.9561%" y="389" width="0.0525%" height="15" fill="rgb(249,225,5)" fg:x="35804" fg:w="40"/><text x="47.2061%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (37 samples, 0.05%)</title><rect x="46.9600%" y="373" width="0.0485%" height="15" fill="rgb(242,55,13)" fg:x="35807" fg:w="37"/><text x="47.2100%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,772 samples, 2.32%)</title><rect x="44.6872%" y="453" width="2.3239%" height="15" fill="rgb(230,49,50)" fg:x="34074" fg:w="1772"/><text x="44.9372%" y="463.50">a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (166 samples, 0.22%)</title><rect x="46.7934%" y="437" width="0.2177%" height="15" fill="rgb(241,111,38)" fg:x="35680" fg:w="166"/><text x="47.0434%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (163 samples, 0.21%)</title><rect x="46.7974%" y="421" width="0.2138%" height="15" fill="rgb(252,155,4)" fg:x="35683" fg:w="163"/><text x="47.0474%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,831 samples, 2.40%)</title><rect x="44.6374%" y="485" width="2.4013%" height="15" fill="rgb(212,69,32)" fg:x="34036" fg:w="1831"/><text x="44.8874%" y="495.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (1,797 samples, 2.36%)</title><rect x="44.6820%" y="469" width="2.3567%" height="15" fill="rgb(243,107,47)" fg:x="34070" fg:w="1797"/><text x="44.9320%" y="479.50">a..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (21 samples, 0.03%)</title><rect x="47.0111%" y="453" width="0.0275%" height="15" fill="rgb(247,130,12)" fg:x="35846" fg:w="21"/><text x="47.2611%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad_integral (58 samples, 0.08%)</title><rect x="47.0400%" y="485" width="0.0761%" height="15" fill="rgb(233,74,16)" fg:x="35868" fg:w="58"/><text x="47.2900%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (14 samples, 0.02%)</title><rect x="47.0977%" y="469" width="0.0184%" height="15" fill="rgb(208,58,18)" fg:x="35912" fg:w="14"/><text x="47.3477%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.06%)</title><rect x="47.1161%" y="485" width="0.0577%" height="15" fill="rgb(242,225,1)" fg:x="35926" fg:w="44"/><text x="47.3661%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1,979 samples, 2.60%)</title><rect x="44.5797%" y="517" width="2.5954%" height="15" fill="rgb(249,39,40)" fg:x="33992" fg:w="1979"/><text x="44.8297%" y="527.50">co..</text></g><g><title>core::fmt::num::imp::fmt_u64 (1,976 samples, 2.59%)</title><rect x="44.5836%" y="501" width="2.5915%" height="15" fill="rgb(207,72,44)" fg:x="33995" fg:w="1976"/><text x="44.8336%" y="511.50">co..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,091 samples, 2.74%)</title><rect x="44.4774%" y="533" width="2.7423%" height="15" fill="rgb(215,193,12)" fg:x="33914" fg:w="2091"/><text x="44.7274%" y="543.50">&lt;T..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (34 samples, 0.04%)</title><rect x="47.1751%" y="517" width="0.0446%" height="15" fill="rgb(248,41,39)" fg:x="35971" fg:w="34"/><text x="47.4251%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (91 samples, 0.12%)</title><rect x="47.3325%" y="469" width="0.1193%" height="15" fill="rgb(253,85,4)" fg:x="36091" fg:w="91"/><text x="47.5825%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (58 samples, 0.08%)</title><rect x="47.3757%" y="453" width="0.0761%" height="15" fill="rgb(243,70,31)" fg:x="36124" fg:w="58"/><text x="47.6257%" y="463.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="47.4518%" y="453" width="0.0105%" height="15" fill="rgb(253,195,26)" fg:x="36182" fg:w="8"/><text x="47.7018%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (187 samples, 0.25%)</title><rect x="47.2354%" y="501" width="0.2452%" height="15" fill="rgb(243,42,11)" fg:x="36017" fg:w="187"/><text x="47.4854%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (180 samples, 0.24%)</title><rect x="47.2446%" y="485" width="0.2361%" height="15" fill="rgb(239,66,17)" fg:x="36024" fg:w="180"/><text x="47.4946%" y="495.50"></text></g><g><title>core::ptr::null_mut (22 samples, 0.03%)</title><rect x="47.4518%" y="469" width="0.0289%" height="15" fill="rgb(217,132,21)" fg:x="36182" fg:w="22"/><text x="47.7018%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="47.4623%" y="453" width="0.0184%" height="15" fill="rgb(252,202,21)" fg:x="36190" fg:w="14"/><text x="47.7123%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (209 samples, 0.27%)</title><rect x="47.2197%" y="533" width="0.2741%" height="15" fill="rgb(233,98,36)" fg:x="36005" fg:w="209"/><text x="47.4697%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (201 samples, 0.26%)</title><rect x="47.2302%" y="517" width="0.2636%" height="15" fill="rgb(216,153,54)" fg:x="36013" fg:w="201"/><text x="47.4802%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.01%)</title><rect x="47.4807%" y="501" width="0.0131%" height="15" fill="rgb(250,99,7)" fg:x="36204" fg:w="10"/><text x="47.7307%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.01%)</title><rect x="47.4807%" y="485" width="0.0131%" height="15" fill="rgb(207,56,50)" fg:x="36204" fg:w="10"/><text x="47.7307%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.01%)</title><rect x="47.4820%" y="469" width="0.0118%" height="15" fill="rgb(244,61,34)" fg:x="36205" fg:w="9"/><text x="47.7320%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (64 samples, 0.08%)</title><rect x="47.7089%" y="485" width="0.0839%" height="15" fill="rgb(241,50,38)" fg:x="36378" fg:w="64"/><text x="47.9589%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (40 samples, 0.05%)</title><rect x="47.7403%" y="469" width="0.0525%" height="15" fill="rgb(212,166,30)" fg:x="36402" fg:w="40"/><text x="47.9903%" y="479.50"></text></g><g><title>core::ptr::invalid_mut (15 samples, 0.02%)</title><rect x="47.7928%" y="469" width="0.0197%" height="15" fill="rgb(249,127,32)" fg:x="36442" fg:w="15"/><text x="48.0428%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (234 samples, 0.31%)</title><rect x="47.5344%" y="517" width="0.3069%" height="15" fill="rgb(209,103,0)" fg:x="36245" fg:w="234"/><text x="47.7844%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (226 samples, 0.30%)</title><rect x="47.5449%" y="501" width="0.2964%" height="15" fill="rgb(238,209,51)" fg:x="36253" fg:w="226"/><text x="47.7949%" y="511.50"></text></g><g><title>core::ptr::null_mut (37 samples, 0.05%)</title><rect x="47.7928%" y="485" width="0.0485%" height="15" fill="rgb(237,56,23)" fg:x="36442" fg:w="37"/><text x="48.0428%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (22 samples, 0.03%)</title><rect x="47.8125%" y="469" width="0.0289%" height="15" fill="rgb(215,153,46)" fg:x="36457" fg:w="22"/><text x="48.0625%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (295 samples, 0.39%)</title><rect x="47.4938%" y="533" width="0.3869%" height="15" fill="rgb(224,49,31)" fg:x="36214" fg:w="295"/><text x="47.7438%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (30 samples, 0.04%)</title><rect x="47.8413%" y="517" width="0.0393%" height="15" fill="rgb(250,18,42)" fg:x="36479" fg:w="30"/><text x="48.0913%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (28 samples, 0.04%)</title><rect x="47.8439%" y="501" width="0.0367%" height="15" fill="rgb(215,176,39)" fg:x="36481" fg:w="28"/><text x="48.0939%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (28 samples, 0.04%)</title><rect x="47.8439%" y="485" width="0.0367%" height="15" fill="rgb(223,77,29)" fg:x="36481" fg:w="28"/><text x="48.0939%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.01%)</title><rect x="47.8964%" y="501" width="0.0105%" height="15" fill="rgb(234,94,52)" fg:x="36521" fg:w="8"/><text x="48.1464%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (75 samples, 0.10%)</title><rect x="47.9856%" y="485" width="0.0984%" height="15" fill="rgb(220,154,50)" fg:x="36589" fg:w="75"/><text x="48.2356%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (54 samples, 0.07%)</title><rect x="48.0131%" y="469" width="0.0708%" height="15" fill="rgb(212,11,10)" fg:x="36610" fg:w="54"/><text x="48.2631%" y="479.50"></text></g><g><title>core::ptr::invalid_mut (15 samples, 0.02%)</title><rect x="48.0839%" y="469" width="0.0197%" height="15" fill="rgb(205,166,19)" fg:x="36664" fg:w="15"/><text x="48.3339%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (175 samples, 0.23%)</title><rect x="47.8938%" y="517" width="0.2295%" height="15" fill="rgb(244,198,16)" fg:x="36519" fg:w="175"/><text x="48.1438%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (165 samples, 0.22%)</title><rect x="47.9069%" y="501" width="0.2164%" height="15" fill="rgb(219,69,12)" fg:x="36529" fg:w="165"/><text x="48.1569%" y="511.50"></text></g><g><title>core::ptr::null_mut (30 samples, 0.04%)</title><rect x="48.0839%" y="485" width="0.0393%" height="15" fill="rgb(245,30,7)" fg:x="36664" fg:w="30"/><text x="48.3339%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (15 samples, 0.02%)</title><rect x="48.1036%" y="469" width="0.0197%" height="15" fill="rgb(218,221,48)" fg:x="36679" fg:w="15"/><text x="48.3536%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (192 samples, 0.25%)</title><rect x="47.8807%" y="533" width="0.2518%" height="15" fill="rgb(216,66,15)" fg:x="36509" fg:w="192"/><text x="48.1307%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (41 samples, 0.05%)</title><rect x="48.8603%" y="437" width="0.0538%" height="15" fill="rgb(226,122,50)" fg:x="37256" fg:w="41"/><text x="49.1103%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (193 samples, 0.25%)</title><rect x="48.6807%" y="453" width="0.2531%" height="15" fill="rgb(239,156,16)" fg:x="37119" fg:w="193"/><text x="48.9307%" y="463.50"></text></g><g><title>core::ptr::null (15 samples, 0.02%)</title><rect x="48.9141%" y="437" width="0.0197%" height="15" fill="rgb(224,27,38)" fg:x="37297" fg:w="15"/><text x="49.1641%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.01%)</title><rect x="48.9233%" y="421" width="0.0105%" height="15" fill="rgb(224,39,27)" fg:x="37304" fg:w="8"/><text x="49.1733%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (171 samples, 0.22%)</title><rect x="49.1593%" y="437" width="0.2243%" height="15" fill="rgb(215,92,29)" fg:x="37484" fg:w="171"/><text x="49.4093%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (124 samples, 0.16%)</title><rect x="49.2210%" y="421" width="0.1626%" height="15" fill="rgb(207,159,16)" fg:x="37531" fg:w="124"/><text x="49.4710%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (22 samples, 0.03%)</title><rect x="49.3836%" y="421" width="0.0289%" height="15" fill="rgb(238,163,47)" fg:x="37655" fg:w="22"/><text x="49.6336%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (398 samples, 0.52%)</title><rect x="48.9338%" y="453" width="0.5220%" height="15" fill="rgb(219,91,49)" fg:x="37312" fg:w="398"/><text x="49.1838%" y="463.50"></text></g><g><title>core::ptr::null_mut (55 samples, 0.07%)</title><rect x="49.3836%" y="437" width="0.0721%" height="15" fill="rgb(227,167,31)" fg:x="37655" fg:w="55"/><text x="49.6336%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (33 samples, 0.04%)</title><rect x="49.4125%" y="421" width="0.0433%" height="15" fill="rgb(234,80,54)" fg:x="37677" fg:w="33"/><text x="49.6625%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (640 samples, 0.84%)</title><rect x="48.6282%" y="469" width="0.8393%" height="15" fill="rgb(212,114,2)" fg:x="37079" fg:w="640"/><text x="48.8782%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (9 samples, 0.01%)</title><rect x="49.4557%" y="453" width="0.0118%" height="15" fill="rgb(234,50,24)" fg:x="37710" fg:w="9"/><text x="49.7057%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (79 samples, 0.10%)</title><rect x="49.7285%" y="341" width="0.1036%" height="15" fill="rgb(221,68,8)" fg:x="37918" fg:w="79"/><text x="49.9785%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (57 samples, 0.07%)</title><rect x="49.7574%" y="325" width="0.0748%" height="15" fill="rgb(254,180,31)" fg:x="37940" fg:w="57"/><text x="50.0074%" y="335.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="49.8321%" y="325" width="0.0105%" height="15" fill="rgb(247,130,50)" fg:x="37997" fg:w="8"/><text x="50.0821%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (197 samples, 0.26%)</title><rect x="49.6118%" y="373" width="0.2584%" height="15" fill="rgb(211,109,4)" fg:x="37829" fg:w="197"/><text x="49.8618%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (190 samples, 0.25%)</title><rect x="49.6210%" y="357" width="0.2492%" height="15" fill="rgb(238,50,21)" fg:x="37836" fg:w="190"/><text x="49.8710%" y="367.50"></text></g><g><title>core::ptr::null_mut (29 samples, 0.04%)</title><rect x="49.8321%" y="341" width="0.0380%" height="15" fill="rgb(225,57,45)" fg:x="37997" fg:w="29"/><text x="50.0821%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (21 samples, 0.03%)</title><rect x="49.8426%" y="325" width="0.0275%" height="15" fill="rgb(209,196,50)" fg:x="38005" fg:w="21"/><text x="50.0926%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (211 samples, 0.28%)</title><rect x="49.6013%" y="389" width="0.2767%" height="15" fill="rgb(242,140,13)" fg:x="37821" fg:w="211"/><text x="49.8513%" y="399.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (220 samples, 0.29%)</title><rect x="49.5921%" y="421" width="0.2885%" height="15" fill="rgb(217,111,7)" fg:x="37814" fg:w="220"/><text x="49.8421%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (219 samples, 0.29%)</title><rect x="49.5934%" y="405" width="0.2872%" height="15" fill="rgb(253,193,51)" fg:x="37815" fg:w="219"/><text x="49.8434%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,011 samples, 1.33%)</title><rect x="48.5679%" y="485" width="1.3259%" height="15" fill="rgb(252,70,29)" fg:x="37033" fg:w="1011"/><text x="48.8179%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (324 samples, 0.42%)</title><rect x="49.4689%" y="469" width="0.4249%" height="15" fill="rgb(232,127,12)" fg:x="37720" fg:w="324"/><text x="49.7189%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (264 samples, 0.35%)</title><rect x="49.5475%" y="453" width="0.3462%" height="15" fill="rgb(211,180,21)" fg:x="37780" fg:w="264"/><text x="49.7975%" y="463.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (251 samples, 0.33%)</title><rect x="49.5646%" y="437" width="0.3292%" height="15" fill="rgb(229,72,13)" fg:x="37793" fg:w="251"/><text x="49.8146%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (85 samples, 0.11%)</title><rect x="49.8938%" y="485" width="0.1115%" height="15" fill="rgb(240,211,49)" fg:x="38044" fg:w="85"/><text x="50.1438%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (44 samples, 0.06%)</title><rect x="50.0511%" y="469" width="0.0577%" height="15" fill="rgb(219,149,40)" fg:x="38164" fg:w="44"/><text x="50.3011%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (71 samples, 0.09%)</title><rect x="50.1928%" y="453" width="0.0931%" height="15" fill="rgb(210,127,46)" fg:x="38272" fg:w="71"/><text x="50.4428%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (51 samples, 0.07%)</title><rect x="50.2190%" y="437" width="0.0669%" height="15" fill="rgb(220,106,7)" fg:x="38292" fg:w="51"/><text x="50.4690%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (153 samples, 0.20%)</title><rect x="50.1089%" y="469" width="0.2007%" height="15" fill="rgb(249,31,22)" fg:x="38208" fg:w="153"/><text x="50.3589%" y="479.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.02%)</title><rect x="50.2859%" y="453" width="0.0236%" height="15" fill="rgb(253,1,49)" fg:x="38343" fg:w="18"/><text x="50.5359%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.02%)</title><rect x="50.2859%" y="437" width="0.0236%" height="15" fill="rgb(227,144,33)" fg:x="38343" fg:w="18"/><text x="50.5359%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (240 samples, 0.31%)</title><rect x="50.0052%" y="485" width="0.3148%" height="15" fill="rgb(249,163,44)" fg:x="38129" fg:w="240"/><text x="50.2552%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (8 samples, 0.01%)</title><rect x="50.3095%" y="469" width="0.0105%" height="15" fill="rgb(234,15,39)" fg:x="38361" fg:w="8"/><text x="50.5595%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (54 samples, 0.07%)</title><rect x="50.4223%" y="405" width="0.0708%" height="15" fill="rgb(207,66,16)" fg:x="38447" fg:w="54"/><text x="50.6723%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (30 samples, 0.04%)</title><rect x="50.4538%" y="389" width="0.0393%" height="15" fill="rgb(233,112,24)" fg:x="38471" fg:w="30"/><text x="50.7038%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (116 samples, 0.15%)</title><rect x="50.3436%" y="437" width="0.1521%" height="15" fill="rgb(230,90,22)" fg:x="38387" fg:w="116"/><text x="50.5936%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (116 samples, 0.15%)</title><rect x="50.3436%" y="421" width="0.1521%" height="15" fill="rgb(229,61,13)" fg:x="38387" fg:w="116"/><text x="50.5936%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (133 samples, 0.17%)</title><rect x="50.3279%" y="453" width="0.1744%" height="15" fill="rgb(225,57,24)" fg:x="38375" fg:w="133"/><text x="50.5779%" y="463.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (145 samples, 0.19%)</title><rect x="50.3200%" y="485" width="0.1902%" height="15" fill="rgb(208,169,48)" fg:x="38369" fg:w="145"/><text x="50.5700%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (144 samples, 0.19%)</title><rect x="50.3213%" y="469" width="0.1889%" height="15" fill="rgb(244,218,51)" fg:x="38370" fg:w="144"/><text x="50.5713%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (59 samples, 0.08%)</title><rect x="50.7200%" y="405" width="0.0774%" height="15" fill="rgb(214,148,10)" fg:x="38674" fg:w="59"/><text x="50.9700%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (42 samples, 0.06%)</title><rect x="50.7423%" y="389" width="0.0551%" height="15" fill="rgb(225,174,27)" fg:x="38691" fg:w="42"/><text x="50.9923%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (14 samples, 0.02%)</title><rect x="50.7974%" y="389" width="0.0184%" height="15" fill="rgb(230,96,26)" fg:x="38733" fg:w="14"/><text x="51.0474%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (203 samples, 0.27%)</title><rect x="50.5757%" y="437" width="0.2662%" height="15" fill="rgb(232,10,30)" fg:x="38564" fg:w="203"/><text x="50.8257%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (182 samples, 0.24%)</title><rect x="50.6033%" y="421" width="0.2387%" height="15" fill="rgb(222,8,50)" fg:x="38585" fg:w="182"/><text x="50.8533%" y="431.50"></text></g><g><title>core::ptr::null_mut (34 samples, 0.04%)</title><rect x="50.7974%" y="405" width="0.0446%" height="15" fill="rgb(213,81,27)" fg:x="38733" fg:w="34"/><text x="51.0474%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (20 samples, 0.03%)</title><rect x="50.8157%" y="389" width="0.0262%" height="15" fill="rgb(245,50,10)" fg:x="38747" fg:w="20"/><text x="51.0657%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (15 samples, 0.02%)</title><rect x="50.8892%" y="389" width="0.0197%" height="15" fill="rgb(216,100,18)" fg:x="38803" fg:w="15"/><text x="51.1392%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (59 samples, 0.08%)</title><rect x="50.8420%" y="437" width="0.0774%" height="15" fill="rgb(236,147,54)" fg:x="38767" fg:w="59"/><text x="51.0920%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (55 samples, 0.07%)</title><rect x="50.8472%" y="421" width="0.0721%" height="15" fill="rgb(205,143,26)" fg:x="38771" fg:w="55"/><text x="51.0972%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (46 samples, 0.06%)</title><rect x="50.8590%" y="405" width="0.0603%" height="15" fill="rgb(236,26,9)" fg:x="38780" fg:w="46"/><text x="51.1090%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (8 samples, 0.01%)</title><rect x="50.9089%" y="389" width="0.0105%" height="15" fill="rgb(221,165,53)" fg:x="38818" fg:w="8"/><text x="51.1589%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.03%)</title><rect x="50.9193%" y="437" width="0.0275%" height="15" fill="rgb(214,110,17)" fg:x="38826" fg:w="21"/><text x="51.1693%" y="447.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.02%)</title><rect x="50.9311%" y="421" width="0.0157%" height="15" fill="rgb(237,197,12)" fg:x="38835" fg:w="12"/><text x="51.1811%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (320 samples, 0.42%)</title><rect x="50.5416%" y="453" width="0.4197%" height="15" fill="rgb(205,84,17)" fg:x="38538" fg:w="320"/><text x="50.7916%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.01%)</title><rect x="50.9469%" y="437" width="0.0144%" height="15" fill="rgb(237,18,45)" fg:x="38847" fg:w="11"/><text x="51.1969%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="50.9508%" y="421" width="0.0105%" height="15" fill="rgb(221,87,14)" fg:x="38850" fg:w="8"/><text x="51.2008%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (410 samples, 0.54%)</title><rect x="50.5351%" y="469" width="0.5377%" height="15" fill="rgb(238,186,15)" fg:x="38533" fg:w="410"/><text x="50.7851%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (85 samples, 0.11%)</title><rect x="50.9613%" y="453" width="0.1115%" height="15" fill="rgb(208,115,11)" fg:x="38858" fg:w="85"/><text x="51.2113%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (64 samples, 0.08%)</title><rect x="50.9889%" y="437" width="0.0839%" height="15" fill="rgb(254,175,0)" fg:x="38879" fg:w="64"/><text x="51.2389%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts (39 samples, 0.05%)</title><rect x="51.0216%" y="421" width="0.0511%" height="15" fill="rgb(227,24,42)" fg:x="38904" fg:w="39"/><text x="51.2716%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts (19 samples, 0.02%)</title><rect x="51.0479%" y="405" width="0.0249%" height="15" fill="rgb(223,211,37)" fg:x="38924" fg:w="19"/><text x="51.2979%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (19 samples, 0.02%)</title><rect x="51.0479%" y="389" width="0.0249%" height="15" fill="rgb(235,49,27)" fg:x="38924" fg:w="19"/><text x="51.2979%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (51 samples, 0.07%)</title><rect x="51.2144%" y="421" width="0.0669%" height="15" fill="rgb(254,97,51)" fg:x="39051" fg:w="51"/><text x="51.4644%" y="431.50"></text></g><g><title>core::ptr::invalid (8 samples, 0.01%)</title><rect x="51.2813%" y="405" width="0.0105%" height="15" fill="rgb(249,51,40)" fg:x="39102" fg:w="8"/><text x="51.5313%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (175 samples, 0.23%)</title><rect x="51.1095%" y="437" width="0.2295%" height="15" fill="rgb(210,128,45)" fg:x="38971" fg:w="175"/><text x="51.3595%" y="447.50"></text></g><g><title>core::ptr::null (44 samples, 0.06%)</title><rect x="51.2813%" y="421" width="0.0577%" height="15" fill="rgb(224,137,50)" fg:x="39102" fg:w="44"/><text x="51.5313%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (36 samples, 0.05%)</title><rect x="51.2918%" y="405" width="0.0472%" height="15" fill="rgb(242,15,9)" fg:x="39110" fg:w="36"/><text x="51.5418%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (634 samples, 0.83%)</title><rect x="50.5102%" y="485" width="0.8315%" height="15" fill="rgb(233,187,41)" fg:x="38514" fg:w="634"/><text x="50.7602%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (205 samples, 0.27%)</title><rect x="51.0728%" y="469" width="0.2689%" height="15" fill="rgb(227,2,29)" fg:x="38943" fg:w="205"/><text x="51.3228%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (205 samples, 0.27%)</title><rect x="51.0728%" y="453" width="0.2689%" height="15" fill="rgb(222,70,3)" fg:x="38943" fg:w="205"/><text x="51.3228%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (91 samples, 0.12%)</title><rect x="51.4846%" y="437" width="0.1193%" height="15" fill="rgb(213,11,42)" fg:x="39257" fg:w="91"/><text x="51.7346%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (68 samples, 0.09%)</title><rect x="51.5148%" y="421" width="0.0892%" height="15" fill="rgb(225,150,9)" fg:x="39280" fg:w="68"/><text x="51.7648%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (10 samples, 0.01%)</title><rect x="51.6039%" y="421" width="0.0131%" height="15" fill="rgb(230,162,45)" fg:x="39348" fg:w="10"/><text x="51.8539%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (199 samples, 0.26%)</title><rect x="51.3652%" y="469" width="0.2610%" height="15" fill="rgb(222,14,52)" fg:x="39166" fg:w="199"/><text x="51.6152%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (193 samples, 0.25%)</title><rect x="51.3731%" y="453" width="0.2531%" height="15" fill="rgb(254,198,14)" fg:x="39172" fg:w="193"/><text x="51.6231%" y="463.50"></text></g><g><title>core::ptr::null_mut (17 samples, 0.02%)</title><rect x="51.6039%" y="437" width="0.0223%" height="15" fill="rgb(220,217,30)" fg:x="39348" fg:w="17"/><text x="51.8539%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.01%)</title><rect x="51.6328%" y="437" width="0.0118%" height="15" fill="rgb(215,146,41)" fg:x="39370" fg:w="9"/><text x="51.8828%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (228 samples, 0.30%)</title><rect x="51.3482%" y="485" width="0.2990%" height="15" fill="rgb(217,27,36)" fg:x="39153" fg:w="228"/><text x="51.5982%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (12 samples, 0.02%)</title><rect x="51.6315%" y="469" width="0.0157%" height="15" fill="rgb(219,218,39)" fg:x="39369" fg:w="12"/><text x="51.8815%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (12 samples, 0.02%)</title><rect x="51.6315%" y="453" width="0.0157%" height="15" fill="rgb(219,4,42)" fg:x="39369" fg:w="12"/><text x="51.8815%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.02%)</title><rect x="51.9370%" y="389" width="0.0223%" height="15" fill="rgb(249,119,36)" fg:x="39602" fg:w="17"/><text x="52.1870%" y="399.50"></text></g><g><title>__GI___libc_malloc (157 samples, 0.21%)</title><rect x="51.9725%" y="373" width="0.2059%" height="15" fill="rgb(209,23,33)" fg:x="39629" fg:w="157"/><text x="52.2225%" y="383.50"></text></g><g><title>_int_malloc (44 samples, 0.06%)</title><rect x="52.1207%" y="357" width="0.0577%" height="15" fill="rgb(211,10,0)" fg:x="39742" fg:w="44"/><text x="52.3707%" y="367.50"></text></g><g><title>alloc::alloc::alloc (180 samples, 0.24%)</title><rect x="51.9593%" y="389" width="0.2361%" height="15" fill="rgb(208,99,37)" fg:x="39619" fg:w="180"/><text x="52.2093%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (11 samples, 0.01%)</title><rect x="52.1954%" y="389" width="0.0144%" height="15" fill="rgb(213,132,31)" fg:x="39799" fg:w="11"/><text x="52.4454%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (90 samples, 0.12%)</title><rect x="52.3108%" y="357" width="0.1180%" height="15" fill="rgb(243,129,40)" fg:x="39887" fg:w="90"/><text x="52.5608%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (74 samples, 0.10%)</title><rect x="52.3318%" y="341" width="0.0970%" height="15" fill="rgb(210,66,33)" fg:x="39903" fg:w="74"/><text x="52.5818%" y="351.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.01%)</title><rect x="52.4289%" y="341" width="0.0118%" height="15" fill="rgb(209,189,4)" fg:x="39977" fg:w="9"/><text x="52.6789%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (196 samples, 0.26%)</title><rect x="52.2098%" y="389" width="0.2570%" height="15" fill="rgb(214,107,37)" fg:x="39810" fg:w="196"/><text x="52.4598%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (180 samples, 0.24%)</title><rect x="52.2308%" y="373" width="0.2361%" height="15" fill="rgb(245,88,54)" fg:x="39826" fg:w="180"/><text x="52.4808%" y="383.50"></text></g><g><title>core::ptr::null_mut (29 samples, 0.04%)</title><rect x="52.4289%" y="357" width="0.0380%" height="15" fill="rgb(205,146,20)" fg:x="39977" fg:w="29"/><text x="52.6789%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (20 samples, 0.03%)</title><rect x="52.4407%" y="341" width="0.0262%" height="15" fill="rgb(220,161,25)" fg:x="39986" fg:w="20"/><text x="52.6907%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (502 samples, 0.66%)</title><rect x="51.8439%" y="421" width="0.6584%" height="15" fill="rgb(215,152,15)" fg:x="39531" fg:w="502"/><text x="52.0939%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (499 samples, 0.65%)</title><rect x="51.8479%" y="405" width="0.6544%" height="15" fill="rgb(233,192,44)" fg:x="39534" fg:w="499"/><text x="52.0979%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (27 samples, 0.04%)</title><rect x="52.4669%" y="389" width="0.0354%" height="15" fill="rgb(240,170,46)" fg:x="40006" fg:w="27"/><text x="52.7169%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (26 samples, 0.03%)</title><rect x="52.4682%" y="373" width="0.0341%" height="15" fill="rgb(207,104,33)" fg:x="40007" fg:w="26"/><text x="52.7182%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (24 samples, 0.03%)</title><rect x="52.4708%" y="357" width="0.0315%" height="15" fill="rgb(219,21,39)" fg:x="40009" fg:w="24"/><text x="52.7208%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (26 samples, 0.03%)</title><rect x="52.6911%" y="389" width="0.0341%" height="15" fill="rgb(214,133,29)" fg:x="40177" fg:w="26"/><text x="52.9411%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (170 samples, 0.22%)</title><rect x="52.5062%" y="405" width="0.2230%" height="15" fill="rgb(226,93,6)" fg:x="40036" fg:w="170"/><text x="52.7562%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (173 samples, 0.23%)</title><rect x="52.5036%" y="421" width="0.2269%" height="15" fill="rgb(252,222,34)" fg:x="40034" fg:w="173"/><text x="52.7536%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (17 samples, 0.02%)</title><rect x="52.7305%" y="421" width="0.0223%" height="15" fill="rgb(252,92,48)" fg:x="40207" fg:w="17"/><text x="52.9805%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (864 samples, 1.13%)</title><rect x="51.6472%" y="485" width="1.1331%" height="15" fill="rgb(245,223,24)" fg:x="39381" fg:w="864"/><text x="51.8972%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (863 samples, 1.13%)</title><rect x="51.6485%" y="469" width="1.1318%" height="15" fill="rgb(205,176,3)" fg:x="39382" fg:w="863"/><text x="51.8985%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (862 samples, 1.13%)</title><rect x="51.6498%" y="453" width="1.1305%" height="15" fill="rgb(235,151,15)" fg:x="39383" fg:w="862"/><text x="51.8998%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (858 samples, 1.13%)</title><rect x="51.6551%" y="437" width="1.1252%" height="15" fill="rgb(237,209,11)" fg:x="39387" fg:w="858"/><text x="51.9051%" y="447.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (21 samples, 0.03%)</title><rect x="52.7528%" y="421" width="0.0275%" height="15" fill="rgb(243,227,24)" fg:x="40224" fg:w="21"/><text x="53.0028%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (44 samples, 0.06%)</title><rect x="52.7803%" y="485" width="0.0577%" height="15" fill="rgb(239,193,16)" fg:x="40245" fg:w="44"/><text x="53.0303%" y="495.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (8 samples, 0.01%)</title><rect x="52.8275%" y="469" width="0.0105%" height="15" fill="rgb(231,27,9)" fg:x="40281" fg:w="8"/><text x="53.0775%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (98 samples, 0.13%)</title><rect x="52.8380%" y="485" width="0.1285%" height="15" fill="rgb(219,169,10)" fg:x="40289" fg:w="98"/><text x="53.0880%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (33 samples, 0.04%)</title><rect x="52.9233%" y="469" width="0.0433%" height="15" fill="rgb(244,229,43)" fg:x="40354" fg:w="33"/><text x="53.1733%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (76 samples, 0.10%)</title><rect x="53.3836%" y="421" width="0.0997%" height="15" fill="rgb(254,38,20)" fg:x="40705" fg:w="76"/><text x="53.6336%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::from_output (10 samples, 0.01%)</title><rect x="53.4833%" y="421" width="0.0131%" height="15" fill="rgb(250,47,30)" fg:x="40781" fg:w="10"/><text x="53.7333%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (78 samples, 0.10%)</title><rect x="53.8046%" y="389" width="0.1023%" height="15" fill="rgb(224,124,36)" fg:x="41026" fg:w="78"/><text x="54.0546%" y="399.50"></text></g><g><title>core::ptr::invalid (21 samples, 0.03%)</title><rect x="53.9069%" y="373" width="0.0275%" height="15" fill="rgb(246,68,51)" fg:x="41104" fg:w="21"/><text x="54.1569%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (302 samples, 0.40%)</title><rect x="53.5764%" y="405" width="0.3961%" height="15" fill="rgb(253,43,49)" fg:x="40852" fg:w="302"/><text x="53.8264%" y="415.50"></text></g><g><title>core::ptr::null (50 samples, 0.07%)</title><rect x="53.9069%" y="389" width="0.0656%" height="15" fill="rgb(219,54,36)" fg:x="41104" fg:w="50"/><text x="54.1569%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (29 samples, 0.04%)</title><rect x="53.9344%" y="373" width="0.0380%" height="15" fill="rgb(227,133,34)" fg:x="41125" fg:w="29"/><text x="54.1844%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (194 samples, 0.25%)</title><rect x="54.3423%" y="389" width="0.2544%" height="15" fill="rgb(247,227,15)" fg:x="41436" fg:w="194"/><text x="54.5923%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (123 samples, 0.16%)</title><rect x="54.4354%" y="373" width="0.1613%" height="15" fill="rgb(229,96,14)" fg:x="41507" fg:w="123"/><text x="54.6854%" y="383.50"></text></g><g><title>core::ptr::invalid_mut (32 samples, 0.04%)</title><rect x="54.5967%" y="373" width="0.0420%" height="15" fill="rgb(220,79,17)" fg:x="41630" fg:w="32"/><text x="54.8467%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (554 samples, 0.73%)</title><rect x="53.9725%" y="405" width="0.7266%" height="15" fill="rgb(205,131,53)" fg:x="41154" fg:w="554"/><text x="54.2225%" y="415.50"></text></g><g><title>core::ptr::null_mut (78 samples, 0.10%)</title><rect x="54.5967%" y="389" width="0.1023%" height="15" fill="rgb(209,50,29)" fg:x="41630" fg:w="78"/><text x="54.8467%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (46 samples, 0.06%)</title><rect x="54.6387%" y="373" width="0.0603%" height="15" fill="rgb(245,86,46)" fg:x="41662" fg:w="46"/><text x="54.8887%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (25 samples, 0.03%)</title><rect x="54.7384%" y="389" width="0.0328%" height="15" fill="rgb(235,66,46)" fg:x="41738" fg:w="25"/><text x="54.9884%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (25 samples, 0.03%)</title><rect x="54.7384%" y="373" width="0.0328%" height="15" fill="rgb(232,148,31)" fg:x="41738" fg:w="25"/><text x="54.9884%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (974 samples, 1.28%)</title><rect x="53.4964%" y="421" width="1.2774%" height="15" fill="rgb(217,149,8)" fg:x="40791" fg:w="974"/><text x="53.7464%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (57 samples, 0.07%)</title><rect x="54.6990%" y="405" width="0.0748%" height="15" fill="rgb(209,183,11)" fg:x="41708" fg:w="57"/><text x="54.9490%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10 samples, 0.01%)</title><rect x="55.0007%" y="325" width="0.0131%" height="15" fill="rgb(208,55,20)" fg:x="41938" fg:w="10"/><text x="55.2507%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (138 samples, 0.18%)</title><rect x="55.2262%" y="309" width="0.1810%" height="15" fill="rgb(218,39,14)" fg:x="42110" fg:w="138"/><text x="55.4762%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (95 samples, 0.12%)</title><rect x="55.2826%" y="293" width="0.1246%" height="15" fill="rgb(216,169,33)" fg:x="42153" fg:w="95"/><text x="55.5326%" y="303.50"></text></g><g><title>core::ptr::invalid_mut (16 samples, 0.02%)</title><rect x="55.4072%" y="293" width="0.0210%" height="15" fill="rgb(233,80,24)" fg:x="42248" fg:w="16"/><text x="55.6572%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (349 samples, 0.46%)</title><rect x="54.9928%" y="341" width="0.4577%" height="15" fill="rgb(213,179,31)" fg:x="41932" fg:w="349"/><text x="55.2428%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (333 samples, 0.44%)</title><rect x="55.0138%" y="325" width="0.4367%" height="15" fill="rgb(209,19,5)" fg:x="41948" fg:w="333"/><text x="55.2638%" y="335.50"></text></g><g><title>core::ptr::null_mut (33 samples, 0.04%)</title><rect x="55.4072%" y="309" width="0.0433%" height="15" fill="rgb(219,18,35)" fg:x="42248" fg:w="33"/><text x="55.6572%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (17 samples, 0.02%)</title><rect x="55.4282%" y="293" width="0.0223%" height="15" fill="rgb(209,169,16)" fg:x="42264" fg:w="17"/><text x="55.6782%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (380 samples, 0.50%)</title><rect x="54.9718%" y="357" width="0.4984%" height="15" fill="rgb(245,90,51)" fg:x="41916" fg:w="380"/><text x="55.2218%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (15 samples, 0.02%)</title><rect x="55.4505%" y="341" width="0.0197%" height="15" fill="rgb(220,99,45)" fg:x="42281" fg:w="15"/><text x="55.7005%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts (15 samples, 0.02%)</title><rect x="55.4505%" y="325" width="0.0197%" height="15" fill="rgb(249,89,25)" fg:x="42281" fg:w="15"/><text x="55.7005%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (15 samples, 0.02%)</title><rect x="55.4505%" y="309" width="0.0197%" height="15" fill="rgb(239,193,0)" fg:x="42281" fg:w="15"/><text x="55.7005%" y="319.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (398 samples, 0.52%)</title><rect x="54.9495%" y="389" width="0.5220%" height="15" fill="rgb(231,126,1)" fg:x="41899" fg:w="398"/><text x="55.1995%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (388 samples, 0.51%)</title><rect x="54.9626%" y="373" width="0.5089%" height="15" fill="rgb(243,166,3)" fg:x="41909" fg:w="388"/><text x="55.2126%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (453 samples, 0.59%)</title><rect x="54.8997%" y="405" width="0.5941%" height="15" fill="rgb(223,22,34)" fg:x="41861" fg:w="453"/><text x="55.1497%" y="415.50"></text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (17 samples, 0.02%)</title><rect x="55.4715%" y="389" width="0.0223%" height="15" fill="rgb(251,52,51)" fg:x="42297" fg:w="17"/><text x="55.7215%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,048 samples, 2.69%)</title><rect x="53.0334%" y="453" width="2.6859%" height="15" fill="rgb(221,165,28)" fg:x="40438" fg:w="2048"/><text x="53.2834%" y="463.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,016 samples, 2.64%)</title><rect x="53.0754%" y="437" width="2.6439%" height="15" fill="rgb(218,121,47)" fg:x="40470" fg:w="2016"/><text x="53.3254%" y="447.50">co..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (720 samples, 0.94%)</title><rect x="54.7751%" y="421" width="0.9443%" height="15" fill="rgb(209,120,9)" fg:x="41766" fg:w="720"/><text x="55.0251%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (172 samples, 0.23%)</title><rect x="55.4938%" y="405" width="0.2256%" height="15" fill="rgb(236,68,12)" fg:x="42314" fg:w="172"/><text x="55.7438%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (154 samples, 0.20%)</title><rect x="55.5174%" y="389" width="0.2020%" height="15" fill="rgb(225,194,26)" fg:x="42332" fg:w="154"/><text x="55.7674%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (43 samples, 0.06%)</title><rect x="55.6630%" y="373" width="0.0564%" height="15" fill="rgb(231,84,39)" fg:x="42443" fg:w="43"/><text x="55.9130%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (8 samples, 0.01%)</title><rect x="55.7193%" y="453" width="0.0105%" height="15" fill="rgb(210,11,45)" fg:x="42486" fg:w="8"/><text x="55.9693%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (43 samples, 0.06%)</title><rect x="55.8111%" y="405" width="0.0564%" height="15" fill="rgb(224,54,52)" fg:x="42556" fg:w="43"/><text x="56.0611%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,226 samples, 2.92%)</title><rect x="52.9666%" y="485" width="2.9193%" height="15" fill="rgb(238,102,14)" fg:x="40387" fg:w="2226"/><text x="53.2166%" y="495.50">co..</text></g><g><title>alloc::str::join_generic_copy::{{closure}} (2,183 samples, 2.86%)</title><rect x="53.0230%" y="469" width="2.8630%" height="15" fill="rgb(243,160,52)" fg:x="40430" fg:w="2183"/><text x="53.2730%" y="479.50">al..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (119 samples, 0.16%)</title><rect x="55.7298%" y="453" width="0.1561%" height="15" fill="rgb(216,114,19)" fg:x="42494" fg:w="119"/><text x="55.9798%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (119 samples, 0.16%)</title><rect x="55.7298%" y="437" width="0.1561%" height="15" fill="rgb(244,166,37)" fg:x="42494" fg:w="119"/><text x="55.9798%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (105 samples, 0.14%)</title><rect x="55.7482%" y="421" width="0.1377%" height="15" fill="rgb(246,29,44)" fg:x="42508" fg:w="105"/><text x="55.9982%" y="431.50"></text></g><g><title>core::ptr::null (14 samples, 0.02%)</title><rect x="55.8675%" y="405" width="0.0184%" height="15" fill="rgb(215,56,53)" fg:x="42599" fg:w="14"/><text x="56.1175%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (12 samples, 0.02%)</title><rect x="55.8702%" y="389" width="0.0157%" height="15" fill="rgb(217,60,2)" fg:x="42601" fg:w="12"/><text x="56.1202%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (20 samples, 0.03%)</title><rect x="55.8859%" y="485" width="0.0262%" height="15" fill="rgb(207,26,24)" fg:x="42613" fg:w="20"/><text x="56.1359%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="55.9489%" y="469" width="0.0157%" height="15" fill="rgb(252,210,15)" fg:x="42661" fg:w="12"/><text x="56.1989%" y="479.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.01%)</title><rect x="55.9515%" y="453" width="0.0131%" height="15" fill="rgb(253,209,26)" fg:x="42663" fg:w="10"/><text x="56.2015%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (44 samples, 0.06%)</title><rect x="55.9121%" y="485" width="0.0577%" height="15" fill="rgb(238,170,14)" fg:x="42633" fg:w="44"/><text x="56.1621%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (45 samples, 0.06%)</title><rect x="56.0538%" y="421" width="0.0590%" height="15" fill="rgb(216,178,15)" fg:x="42741" fg:w="45"/><text x="56.3038%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (112 samples, 0.15%)</title><rect x="55.9698%" y="485" width="0.1469%" height="15" fill="rgb(250,197,2)" fg:x="42677" fg:w="112"/><text x="56.2198%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (83 samples, 0.11%)</title><rect x="56.0079%" y="469" width="0.1089%" height="15" fill="rgb(212,70,42)" fg:x="42706" fg:w="83"/><text x="56.2579%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (82 samples, 0.11%)</title><rect x="56.0092%" y="453" width="0.1075%" height="15" fill="rgb(227,213,9)" fg:x="42707" fg:w="82"/><text x="56.2592%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (70 samples, 0.09%)</title><rect x="56.0249%" y="437" width="0.0918%" height="15" fill="rgb(245,99,25)" fg:x="42719" fg:w="70"/><text x="56.2749%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (43 samples, 0.06%)</title><rect x="56.3961%" y="437" width="0.0564%" height="15" fill="rgb(250,82,29)" fg:x="43002" fg:w="43"/><text x="56.6461%" y="447.50"></text></g><g><title>core::ptr::invalid (15 samples, 0.02%)</title><rect x="56.4525%" y="421" width="0.0197%" height="15" fill="rgb(241,226,54)" fg:x="43045" fg:w="15"/><text x="56.7025%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (200 samples, 0.26%)</title><rect x="56.2544%" y="453" width="0.2623%" height="15" fill="rgb(221,99,41)" fg:x="42894" fg:w="200"/><text x="56.5044%" y="463.50"></text></g><g><title>core::ptr::null (49 samples, 0.06%)</title><rect x="56.4525%" y="437" width="0.0643%" height="15" fill="rgb(213,90,21)" fg:x="43045" fg:w="49"/><text x="56.7025%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (34 samples, 0.04%)</title><rect x="56.4721%" y="421" width="0.0446%" height="15" fill="rgb(205,208,24)" fg:x="43060" fg:w="34"/><text x="56.7221%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (308 samples, 0.40%)</title><rect x="56.1167%" y="485" width="0.4039%" height="15" fill="rgb(246,31,12)" fg:x="42789" fg:w="308"/><text x="56.3667%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (304 samples, 0.40%)</title><rect x="56.1220%" y="469" width="0.3987%" height="15" fill="rgb(213,154,6)" fg:x="42793" fg:w="304"/><text x="56.3720%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (38 samples, 0.05%)</title><rect x="56.5207%" y="485" width="0.0498%" height="15" fill="rgb(222,163,29)" fg:x="43097" fg:w="38"/><text x="56.7707%" y="495.50"></text></g><g><title>core::ptr::metadata::metadata (36 samples, 0.05%)</title><rect x="56.5233%" y="469" width="0.0472%" height="15" fill="rgb(227,201,8)" fg:x="43099" fg:w="36"/><text x="56.7733%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.01%)</title><rect x="56.6623%" y="453" width="0.0105%" height="15" fill="rgb(233,9,32)" fg:x="43205" fg:w="8"/><text x="56.9123%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="56.6623%" y="437" width="0.0105%" height="15" fill="rgb(217,54,24)" fg:x="43205" fg:w="8"/><text x="56.9123%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (121 samples, 0.16%)</title><rect x="56.6872%" y="421" width="0.1587%" height="15" fill="rgb(235,192,0)" fg:x="43224" fg:w="121"/><text x="56.9372%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (219 samples, 0.29%)</title><rect x="56.5705%" y="485" width="0.2872%" height="15" fill="rgb(235,45,9)" fg:x="43135" fg:w="219"/><text x="56.8205%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (168 samples, 0.22%)</title><rect x="56.6374%" y="469" width="0.2203%" height="15" fill="rgb(246,42,40)" fg:x="43186" fg:w="168"/><text x="56.8874%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (137 samples, 0.18%)</title><rect x="56.6780%" y="453" width="0.1797%" height="15" fill="rgb(248,111,24)" fg:x="43217" fg:w="137"/><text x="56.9280%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (133 samples, 0.17%)</title><rect x="56.6833%" y="437" width="0.1744%" height="15" fill="rgb(249,65,22)" fg:x="43221" fg:w="133"/><text x="56.9333%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (9 samples, 0.01%)</title><rect x="56.8459%" y="421" width="0.0118%" height="15" fill="rgb(238,111,51)" fg:x="43345" fg:w="9"/><text x="57.0959%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (39 samples, 0.05%)</title><rect x="56.8577%" y="485" width="0.0511%" height="15" fill="rgb(250,118,22)" fg:x="43354" fg:w="39"/><text x="57.1077%" y="495.50"></text></g><g><title>core::ptr::slice_from_raw_parts (39 samples, 0.05%)</title><rect x="56.8577%" y="469" width="0.0511%" height="15" fill="rgb(234,84,26)" fg:x="43354" fg:w="39"/><text x="57.1077%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (39 samples, 0.05%)</title><rect x="56.8577%" y="453" width="0.0511%" height="15" fill="rgb(243,172,12)" fg:x="43354" fg:w="39"/><text x="57.1077%" y="463.50"></text></g><g><title>alloc::str::join_generic_copy (6,706 samples, 8.79%)</title><rect x="48.1430%" y="501" width="8.7948%" height="15" fill="rgb(236,150,49)" fg:x="36709" fg:w="6706"/><text x="48.3930%" y="511.50">alloc::str::..</text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (22 samples, 0.03%)</title><rect x="56.9089%" y="485" width="0.0289%" height="15" fill="rgb(225,197,26)" fg:x="43393" fg:w="22"/><text x="57.1589%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (15 samples, 0.02%)</title><rect x="56.9180%" y="469" width="0.0197%" height="15" fill="rgb(214,17,42)" fg:x="43400" fg:w="15"/><text x="57.1680%" y="479.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (43 samples, 0.06%)</title><rect x="56.9377%" y="501" width="0.0564%" height="15" fill="rgb(224,165,40)" fg:x="43415" fg:w="43"/><text x="57.1877%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (6,758 samples, 8.86%)</title><rect x="48.1325%" y="533" width="8.8630%" height="15" fill="rgb(246,100,4)" fg:x="36701" fg:w="6758"/><text x="48.3825%" y="543.50">alloc::slice:..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6,754 samples, 8.86%)</title><rect x="48.1377%" y="517" width="8.8577%" height="15" fill="rgb(222,103,0)" fg:x="36705" fg:w="6754"/><text x="48.3877%" y="527.50">alloc::str::&lt;..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (29 samples, 0.04%)</title><rect x="57.4033%" y="453" width="0.0380%" height="15" fill="rgb(227,189,26)" fg:x="43770" fg:w="29"/><text x="57.6533%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 0.30%)</title><rect x="57.1908%" y="501" width="0.3043%" height="15" fill="rgb(214,202,17)" fg:x="43608" fg:w="232"/><text x="57.4408%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (186 samples, 0.24%)</title><rect x="57.2511%" y="485" width="0.2439%" height="15" fill="rgb(229,111,3)" fg:x="43654" fg:w="186"/><text x="57.5011%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (178 samples, 0.23%)</title><rect x="57.2616%" y="469" width="0.2334%" height="15" fill="rgb(229,172,15)" fg:x="43662" fg:w="178"/><text x="57.5116%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (40 samples, 0.05%)</title><rect x="57.4426%" y="453" width="0.0525%" height="15" fill="rgb(230,224,35)" fg:x="43800" fg:w="40"/><text x="57.6926%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.02%)</title><rect x="57.6525%" y="485" width="0.0210%" height="15" fill="rgb(251,141,6)" fg:x="43960" fg:w="16"/><text x="57.9025%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.01%)</title><rect x="57.6616%" y="469" width="0.0118%" height="15" fill="rgb(225,208,6)" fg:x="43967" fg:w="9"/><text x="57.9116%" y="479.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="57.6734%" y="485" width="0.0197%" height="15" fill="rgb(246,181,16)" fg:x="43976" fg:w="15"/><text x="57.9234%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.01%)</title><rect x="57.8400%" y="389" width="0.0105%" height="15" fill="rgb(227,129,36)" fg:x="44103" fg:w="8"/><text x="58.0900%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (130 samples, 0.17%)</title><rect x="58.0105%" y="373" width="0.1705%" height="15" fill="rgb(248,117,24)" fg:x="44233" fg:w="130"/><text x="58.2605%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (70 samples, 0.09%)</title><rect x="58.0892%" y="357" width="0.0918%" height="15" fill="rgb(214,185,35)" fg:x="44293" fg:w="70"/><text x="58.3392%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (277 samples, 0.36%)</title><rect x="57.8321%" y="405" width="0.3633%" height="15" fill="rgb(236,150,34)" fg:x="44097" fg:w="277"/><text x="58.0821%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (263 samples, 0.34%)</title><rect x="57.8505%" y="389" width="0.3449%" height="15" fill="rgb(243,228,27)" fg:x="44111" fg:w="263"/><text x="58.1005%" y="399.50"></text></g><g><title>core::ptr::null_mut (11 samples, 0.01%)</title><rect x="58.1810%" y="373" width="0.0144%" height="15" fill="rgb(245,77,44)" fg:x="44363" fg:w="11"/><text x="58.4310%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (299 samples, 0.39%)</title><rect x="57.8164%" y="421" width="0.3921%" height="15" fill="rgb(235,214,42)" fg:x="44085" fg:w="299"/><text x="58.0664%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.01%)</title><rect x="58.1954%" y="405" width="0.0131%" height="15" fill="rgb(221,74,3)" fg:x="44374" fg:w="10"/><text x="58.4454%" y="415.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.03%)</title><rect x="58.3266%" y="373" width="0.0262%" height="15" fill="rgb(206,121,29)" fg:x="44474" fg:w="20"/><text x="58.5766%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (517 samples, 0.68%)</title><rect x="57.6931%" y="485" width="0.6780%" height="15" fill="rgb(249,131,53)" fg:x="43991" fg:w="517"/><text x="57.9431%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::lt (500 samples, 0.66%)</title><rect x="57.7154%" y="469" width="0.6557%" height="15" fill="rgb(236,170,29)" fg:x="44008" fg:w="500"/><text x="57.9654%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (438 samples, 0.57%)</title><rect x="57.7967%" y="453" width="0.5744%" height="15" fill="rgb(247,96,15)" fg:x="44070" fg:w="438"/><text x="58.0467%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (431 samples, 0.57%)</title><rect x="57.8059%" y="437" width="0.5652%" height="15" fill="rgb(211,210,7)" fg:x="44077" fg:w="431"/><text x="58.0559%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (124 samples, 0.16%)</title><rect x="58.2085%" y="421" width="0.1626%" height="15" fill="rgb(240,88,50)" fg:x="44384" fg:w="124"/><text x="58.4585%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (117 samples, 0.15%)</title><rect x="58.2177%" y="405" width="0.1534%" height="15" fill="rgb(209,229,26)" fg:x="44391" fg:w="117"/><text x="58.4677%" y="415.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (95 samples, 0.12%)</title><rect x="58.2466%" y="389" width="0.1246%" height="15" fill="rgb(210,68,23)" fg:x="44413" fg:w="95"/><text x="58.4966%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (14 samples, 0.02%)</title><rect x="58.3528%" y="373" width="0.0184%" height="15" fill="rgb(229,180,13)" fg:x="44494" fg:w="14"/><text x="58.6028%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::slice::insert_head::InsertionHole&lt;alloc::string::String&gt;&gt; (9 samples, 0.01%)</title><rect x="58.3711%" y="485" width="0.0118%" height="15" fill="rgb(236,53,44)" fg:x="44508" fg:w="9"/><text x="58.6211%" y="495.50"></text></g><g><title>core::ptr::read (42 samples, 0.06%)</title><rect x="58.3830%" y="485" width="0.0551%" height="15" fill="rgb(244,214,29)" fg:x="44517" fg:w="42"/><text x="58.6330%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (31 samples, 0.04%)</title><rect x="58.3974%" y="469" width="0.0407%" height="15" fill="rgb(220,75,29)" fg:x="44528" fg:w="31"/><text x="58.6474%" y="479.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (17 samples, 0.02%)</title><rect x="58.4157%" y="453" width="0.0223%" height="15" fill="rgb(214,183,37)" fg:x="44542" fg:w="17"/><text x="58.6657%" y="463.50"></text></g><g><title>alloc::slice::insert_head (720 samples, 0.94%)</title><rect x="57.4951%" y="501" width="0.9443%" height="15" fill="rgb(239,117,29)" fg:x="43840" fg:w="720"/><text x="57.7451%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::rev (42 samples, 0.06%)</title><rect x="58.4393%" y="501" width="0.0551%" height="15" fill="rgb(237,171,35)" fg:x="44560" fg:w="42"/><text x="58.6893%" y="511.50"></text></g><g><title>core::iter::adapters::rev::Rev&lt;T&gt;::new (21 samples, 0.03%)</title><rect x="58.4669%" y="485" width="0.0275%" height="15" fill="rgb(229,178,53)" fg:x="44581" fg:w="21"/><text x="58.7169%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (9 samples, 0.01%)</title><rect x="58.4944%" y="501" width="0.0118%" height="15" fill="rgb(210,102,19)" fg:x="44602" fg:w="9"/><text x="58.7444%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.02%)</title><rect x="58.5810%" y="437" width="0.0210%" height="15" fill="rgb(235,127,22)" fg:x="44668" fg:w="16"/><text x="58.8310%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.02%)</title><rect x="58.5823%" y="421" width="0.0197%" height="15" fill="rgb(244,31,31)" fg:x="44669" fg:w="15"/><text x="58.8323%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (1,259 samples, 1.65%)</title><rect x="56.9954%" y="533" width="1.6511%" height="15" fill="rgb(231,43,21)" fg:x="43459" fg:w="1259"/><text x="57.2454%" y="543.50"></text></g><g><title>alloc::slice::merge_sort (1,250 samples, 1.64%)</title><rect x="57.0072%" y="517" width="1.6393%" height="15" fill="rgb(217,131,35)" fg:x="43468" fg:w="1250"/><text x="57.2572%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (107 samples, 0.14%)</title><rect x="58.5062%" y="501" width="0.1403%" height="15" fill="rgb(221,149,4)" fg:x="44611" fg:w="107"/><text x="58.7562%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (83 samples, 0.11%)</title><rect x="58.5377%" y="485" width="0.1089%" height="15" fill="rgb(232,170,28)" fg:x="44635" fg:w="83"/><text x="58.7877%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (68 samples, 0.09%)</title><rect x="58.5574%" y="469" width="0.0892%" height="15" fill="rgb(238,56,10)" fg:x="44650" fg:w="68"/><text x="58.8074%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (52 samples, 0.07%)</title><rect x="58.5784%" y="453" width="0.0682%" height="15" fill="rgb(235,196,14)" fg:x="44666" fg:w="52"/><text x="58.8284%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (34 samples, 0.04%)</title><rect x="58.6020%" y="437" width="0.0446%" height="15" fill="rgb(216,45,48)" fg:x="44684" fg:w="34"/><text x="58.8520%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (34 samples, 0.04%)</title><rect x="58.6020%" y="421" width="0.0446%" height="15" fill="rgb(238,213,17)" fg:x="44684" fg:w="34"/><text x="58.8520%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (80 samples, 0.10%)</title><rect x="58.8026%" y="437" width="0.1049%" height="15" fill="rgb(212,13,2)" fg:x="44837" fg:w="80"/><text x="59.0526%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (62 samples, 0.08%)</title><rect x="58.8262%" y="421" width="0.0813%" height="15" fill="rgb(240,114,20)" fg:x="44855" fg:w="62"/><text x="59.0762%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (30 samples, 0.04%)</title><rect x="58.9075%" y="421" width="0.0393%" height="15" fill="rgb(228,41,40)" fg:x="44917" fg:w="30"/><text x="59.1575%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (201 samples, 0.26%)</title><rect x="58.7056%" y="469" width="0.2636%" height="15" fill="rgb(244,132,35)" fg:x="44763" fg:w="201"/><text x="58.9556%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (194 samples, 0.25%)</title><rect x="58.7148%" y="453" width="0.2544%" height="15" fill="rgb(253,189,4)" fg:x="44770" fg:w="194"/><text x="58.9648%" y="463.50"></text></g><g><title>core::ptr::null_mut (47 samples, 0.06%)</title><rect x="58.9075%" y="437" width="0.0616%" height="15" fill="rgb(224,37,19)" fg:x="44917" fg:w="47"/><text x="59.1575%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (17 samples, 0.02%)</title><rect x="58.9469%" y="421" width="0.0223%" height="15" fill="rgb(235,223,18)" fg:x="44947" fg:w="17"/><text x="59.1969%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (20 samples, 0.03%)</title><rect x="59.0138%" y="437" width="0.0262%" height="15" fill="rgb(235,163,25)" fg:x="44998" fg:w="20"/><text x="59.2638%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (8 samples, 0.01%)</title><rect x="59.0295%" y="421" width="0.0105%" height="15" fill="rgb(217,145,28)" fg:x="45010" fg:w="8"/><text x="59.2795%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.04%)</title><rect x="59.1318%" y="405" width="0.0433%" height="15" fill="rgb(223,223,32)" fg:x="45088" fg:w="33"/><text x="59.3818%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.02%)</title><rect x="59.2236%" y="389" width="0.0170%" height="15" fill="rgb(227,189,39)" fg:x="45158" fg:w="13"/><text x="59.4736%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="59.2262%" y="373" width="0.0144%" height="15" fill="rgb(248,10,22)" fg:x="45160" fg:w="11"/><text x="59.4762%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (164 samples, 0.22%)</title><rect x="59.2407%" y="389" width="0.2151%" height="15" fill="rgb(248,46,39)" fg:x="45171" fg:w="164"/><text x="59.4907%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (160 samples, 0.21%)</title><rect x="59.2459%" y="373" width="0.2098%" height="15" fill="rgb(248,113,48)" fg:x="45175" fg:w="160"/><text x="59.4959%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (229 samples, 0.30%)</title><rect x="59.1764%" y="405" width="0.3003%" height="15" fill="rgb(245,16,25)" fg:x="45122" fg:w="229"/><text x="59.4264%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (14 samples, 0.02%)</title><rect x="59.4584%" y="389" width="0.0184%" height="15" fill="rgb(249,152,16)" fg:x="45337" fg:w="14"/><text x="59.7084%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (18 samples, 0.02%)</title><rect x="59.4911%" y="389" width="0.0236%" height="15" fill="rgb(250,16,1)" fg:x="45362" fg:w="18"/><text x="59.7411%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (46 samples, 0.06%)</title><rect x="59.4767%" y="405" width="0.0603%" height="15" fill="rgb(249,138,3)" fg:x="45351" fg:w="46"/><text x="59.7267%" y="415.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (17 samples, 0.02%)</title><rect x="59.5148%" y="389" width="0.0223%" height="15" fill="rgb(227,71,41)" fg:x="45380" fg:w="17"/><text x="59.7648%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="59.8321%" y="357" width="0.0170%" height="15" fill="rgb(209,184,23)" fg:x="45622" fg:w="13"/><text x="60.0821%" y="367.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="60.1285%" y="309" width="0.0236%" height="15" fill="rgb(223,215,31)" fg:x="45848" fg:w="18"/><text x="60.3785%" y="319.50"></text></g><g><title>_int_free (49 samples, 0.06%)</title><rect x="60.1561%" y="309" width="0.0643%" height="15" fill="rgb(210,146,28)" fg:x="45869" fg:w="49"/><text x="60.4061%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="60.3502%" y="293" width="0.0118%" height="15" fill="rgb(209,183,41)" fg:x="46017" fg:w="9"/><text x="60.6002%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="60.3502%" y="277" width="0.0118%" height="15" fill="rgb(209,224,45)" fg:x="46017" fg:w="9"/><text x="60.6002%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="60.3502%" y="261" width="0.0118%" height="15" fill="rgb(224,209,51)" fg:x="46017" fg:w="9"/><text x="60.6002%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="60.3502%" y="245" width="0.0118%" height="15" fill="rgb(223,17,39)" fg:x="46017" fg:w="9"/><text x="60.6002%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="60.3515%" y="229" width="0.0105%" height="15" fill="rgb(234,204,37)" fg:x="46018" fg:w="8"/><text x="60.6015%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="60.3515%" y="213" width="0.0105%" height="15" fill="rgb(236,120,5)" fg:x="46018" fg:w="8"/><text x="60.6015%" y="223.50"></text></g><g><title>__GI___libc_realloc (335 samples, 0.44%)</title><rect x="59.9252%" y="341" width="0.4393%" height="15" fill="rgb(248,97,27)" fg:x="45693" fg:w="335"/><text x="60.1752%" y="351.50"></text></g><g><title>_int_realloc (217 samples, 0.28%)</title><rect x="60.0800%" y="325" width="0.2846%" height="15" fill="rgb(240,66,17)" fg:x="45811" fg:w="217"/><text x="60.3300%" y="335.50"></text></g><g><title>_int_malloc (110 samples, 0.14%)</title><rect x="60.2203%" y="309" width="0.1443%" height="15" fill="rgb(210,79,3)" fg:x="45918" fg:w="110"/><text x="60.4703%" y="319.50"></text></g><g><title>__rdl_realloc (8 samples, 0.01%)</title><rect x="60.3646%" y="341" width="0.0105%" height="15" fill="rgb(214,176,27)" fg:x="46028" fg:w="8"/><text x="60.6146%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::align (8 samples, 0.01%)</title><rect x="60.3764%" y="341" width="0.0105%" height="15" fill="rgb(235,185,3)" fg:x="46037" fg:w="8"/><text x="60.6264%" y="351.50"></text></g><g><title>alloc::alloc::realloc (410 samples, 0.54%)</title><rect x="59.8505%" y="357" width="0.5377%" height="15" fill="rgb(227,24,12)" fg:x="45636" fg:w="410"/><text x="60.1005%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::size (8 samples, 0.01%)</title><rect x="60.3948%" y="357" width="0.0105%" height="15" fill="rgb(252,169,48)" fg:x="46051" fg:w="8"/><text x="60.6448%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (122 samples, 0.16%)</title><rect x="60.5941%" y="325" width="0.1600%" height="15" fill="rgb(212,65,1)" fg:x="46203" fg:w="122"/><text x="60.8441%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (99 samples, 0.13%)</title><rect x="60.6243%" y="309" width="0.1298%" height="15" fill="rgb(242,39,24)" fg:x="46226" fg:w="99"/><text x="60.8743%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (22 samples, 0.03%)</title><rect x="60.7541%" y="309" width="0.0289%" height="15" fill="rgb(249,32,23)" fg:x="46325" fg:w="22"/><text x="61.0041%" y="319.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (302 samples, 0.40%)</title><rect x="60.4131%" y="357" width="0.3961%" height="15" fill="rgb(251,195,23)" fg:x="46065" fg:w="302"/><text x="60.6631%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (261 samples, 0.34%)</title><rect x="60.4669%" y="341" width="0.3423%" height="15" fill="rgb(236,174,8)" fg:x="46106" fg:w="261"/><text x="60.7169%" y="351.50"></text></g><g><title>core::ptr::null_mut (42 samples, 0.06%)</title><rect x="60.7541%" y="325" width="0.0551%" height="15" fill="rgb(220,197,8)" fg:x="46325" fg:w="42"/><text x="61.0041%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (20 samples, 0.03%)</title><rect x="60.7830%" y="309" width="0.0262%" height="15" fill="rgb(240,108,37)" fg:x="46347" fg:w="20"/><text x="61.0330%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (31 samples, 0.04%)</title><rect x="60.8118%" y="325" width="0.0407%" height="15" fill="rgb(232,176,24)" fg:x="46369" fg:w="31"/><text x="61.0618%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (918 samples, 1.20%)</title><rect x="59.6511%" y="389" width="1.2039%" height="15" fill="rgb(243,35,29)" fg:x="45484" fg:w="918"/><text x="59.9011%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (909 samples, 1.19%)</title><rect x="59.6630%" y="373" width="1.1921%" height="15" fill="rgb(210,37,18)" fg:x="45493" fg:w="909"/><text x="59.9130%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (35 samples, 0.05%)</title><rect x="60.8092%" y="357" width="0.0459%" height="15" fill="rgb(224,184,40)" fg:x="46367" fg:w="35"/><text x="61.0592%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (34 samples, 0.04%)</title><rect x="60.8105%" y="341" width="0.0446%" height="15" fill="rgb(236,39,29)" fg:x="46368" fg:w="34"/><text x="61.0605%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.03%)</title><rect x="60.8551%" y="389" width="0.0315%" height="15" fill="rgb(232,48,39)" fg:x="46402" fg:w="24"/><text x="61.1051%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::align (10 samples, 0.01%)</title><rect x="60.8892%" y="389" width="0.0131%" height="15" fill="rgb(236,34,42)" fg:x="46428" fg:w="10"/><text x="61.1392%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,108 samples, 1.45%)</title><rect x="59.5370%" y="405" width="1.4531%" height="15" fill="rgb(243,106,37)" fg:x="45397" fg:w="1108"/><text x="59.7870%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (67 samples, 0.09%)</title><rect x="60.9023%" y="389" width="0.0879%" height="15" fill="rgb(218,96,6)" fg:x="46438" fg:w="67"/><text x="61.1523%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (8 samples, 0.01%)</title><rect x="61.2931%" y="373" width="0.0105%" height="15" fill="rgb(235,130,12)" fg:x="46736" fg:w="8"/><text x="61.5431%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (22 samples, 0.03%)</title><rect x="61.3036%" y="373" width="0.0289%" height="15" fill="rgb(231,95,0)" fg:x="46744" fg:w="22"/><text x="61.5536%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (263 samples, 0.34%)</title><rect x="60.9902%" y="405" width="0.3449%" height="15" fill="rgb(228,12,23)" fg:x="46505" fg:w="263"/><text x="61.2402%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (261 samples, 0.34%)</title><rect x="60.9928%" y="389" width="0.3423%" height="15" fill="rgb(216,12,1)" fg:x="46507" fg:w="261"/><text x="61.2428%" y="399.50"></text></g><g><title>core::cmp::max (119 samples, 0.16%)</title><rect x="61.3351%" y="405" width="0.1561%" height="15" fill="rgb(219,59,3)" fg:x="46768" fg:w="119"/><text x="61.5851%" y="415.50"></text></g><g><title>core::cmp::Ord::max (117 samples, 0.15%)</title><rect x="61.3377%" y="389" width="0.1534%" height="15" fill="rgb(215,208,46)" fg:x="46770" fg:w="117"/><text x="61.5877%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (54 samples, 0.07%)</title><rect x="61.4203%" y="373" width="0.0708%" height="15" fill="rgb(254,224,29)" fg:x="46833" fg:w="54"/><text x="61.6703%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (79 samples, 0.10%)</title><rect x="61.4911%" y="405" width="0.1036%" height="15" fill="rgb(232,14,29)" fg:x="46887" fg:w="79"/><text x="61.7411%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (33 samples, 0.04%)</title><rect x="61.5515%" y="389" width="0.0433%" height="15" fill="rgb(208,45,52)" fg:x="46933" fg:w="33"/><text x="61.8015%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,968 samples, 2.58%)</title><rect x="59.0466%" y="421" width="2.5810%" height="15" fill="rgb(234,191,28)" fg:x="45023" fg:w="1968"/><text x="59.2966%" y="431.50">al..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (25 samples, 0.03%)</title><rect x="61.5948%" y="405" width="0.0328%" height="15" fill="rgb(244,67,43)" fg:x="46966" fg:w="25"/><text x="61.8448%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,032 samples, 2.66%)</title><rect x="58.9784%" y="469" width="2.6649%" height="15" fill="rgb(236,189,24)" fg:x="44971" fg:w="2032"/><text x="59.2284%" y="479.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,023 samples, 2.65%)</title><rect x="58.9902%" y="453" width="2.6531%" height="15" fill="rgb(239,214,33)" fg:x="44980" fg:w="2023"/><text x="59.2402%" y="463.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,985 samples, 2.60%)</title><rect x="59.0400%" y="437" width="2.6033%" height="15" fill="rgb(226,176,41)" fg:x="45018" fg:w="1985"/><text x="59.2900%" y="447.50">al..</text></g><g><title>alloc::raw_vec::handle_reserve (12 samples, 0.02%)</title><rect x="61.6275%" y="421" width="0.0157%" height="15" fill="rgb(248,47,8)" fg:x="46991" fg:w="12"/><text x="61.8775%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="61.6433%" y="469" width="0.0118%" height="15" fill="rgb(218,81,44)" fg:x="47003" fg:w="9"/><text x="61.8933%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,283 samples, 2.99%)</title><rect x="58.6636%" y="485" width="2.9941%" height="15" fill="rgb(213,98,6)" fg:x="44731" fg:w="2283"/><text x="58.9136%" y="495.50">all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,396 samples, 3.14%)</title><rect x="58.6570%" y="501" width="3.1423%" height="15" fill="rgb(222,85,22)" fg:x="44726" fg:w="2396"/><text x="58.9070%" y="511.50">&lt;al..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (108 samples, 0.14%)</title><rect x="61.6577%" y="485" width="0.1416%" height="15" fill="rgb(239,46,39)" fg:x="47014" fg:w="108"/><text x="61.9077%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (83 samples, 0.11%)</title><rect x="61.6905%" y="469" width="0.1089%" height="15" fill="rgb(237,12,29)" fg:x="47039" fg:w="83"/><text x="61.9405%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts (25 samples, 0.03%)</title><rect x="61.7666%" y="453" width="0.0328%" height="15" fill="rgb(214,77,8)" fg:x="47097" fg:w="25"/><text x="62.0166%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (18 samples, 0.02%)</title><rect x="61.7757%" y="437" width="0.0236%" height="15" fill="rgb(217,168,37)" fg:x="47104" fg:w="18"/><text x="62.0257%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.02%)</title><rect x="61.7757%" y="421" width="0.0236%" height="15" fill="rgb(221,217,23)" fg:x="47104" fg:w="18"/><text x="62.0257%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (44 samples, 0.06%)</title><rect x="62.0170%" y="453" width="0.0577%" height="15" fill="rgb(243,229,36)" fg:x="47288" fg:w="44"/><text x="62.2670%" y="463.50"></text></g><g><title>core::ptr::invalid (34 samples, 0.04%)</title><rect x="62.0748%" y="437" width="0.0446%" height="15" fill="rgb(251,163,40)" fg:x="47332" fg:w="34"/><text x="62.3248%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,677 samples, 3.51%)</title><rect x="58.6531%" y="517" width="3.5108%" height="15" fill="rgb(237,222,12)" fg:x="44723" fg:w="2677"/><text x="58.9031%" y="527.50">all..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (278 samples, 0.36%)</title><rect x="61.7993%" y="501" width="0.3646%" height="15" fill="rgb(248,132,6)" fg:x="47122" fg:w="278"/><text x="62.0493%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (277 samples, 0.36%)</title><rect x="61.8007%" y="485" width="0.3633%" height="15" fill="rgb(227,167,50)" fg:x="47123" fg:w="277"/><text x="62.0507%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (220 samples, 0.29%)</title><rect x="61.8754%" y="469" width="0.2885%" height="15" fill="rgb(242,84,37)" fg:x="47180" fg:w="220"/><text x="62.1254%" y="479.50"></text></g><g><title>core::ptr::null (68 samples, 0.09%)</title><rect x="62.0748%" y="453" width="0.0892%" height="15" fill="rgb(212,4,50)" fg:x="47332" fg:w="68"/><text x="62.3248%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (34 samples, 0.04%)</title><rect x="62.1193%" y="437" width="0.0446%" height="15" fill="rgb(230,228,32)" fg:x="47366" fg:w="34"/><text x="62.3693%" y="447.50"></text></g><g><title>alloc::string::String::push_str (2,686 samples, 3.52%)</title><rect x="58.6466%" y="533" width="3.5226%" height="15" fill="rgb(248,217,23)" fg:x="44718" fg:w="2686"/><text x="58.8966%" y="543.50">all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (79 samples, 0.10%)</title><rect x="62.5639%" y="437" width="0.1036%" height="15" fill="rgb(238,197,32)" fg:x="47705" fg:w="79"/><text x="62.8139%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (74 samples, 0.10%)</title><rect x="62.5705%" y="421" width="0.0970%" height="15" fill="rgb(236,106,1)" fg:x="47710" fg:w="74"/><text x="62.8205%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (75 samples, 0.10%)</title><rect x="62.7646%" y="405" width="0.0984%" height="15" fill="rgb(219,228,13)" fg:x="47858" fg:w="75"/><text x="63.0146%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (51 samples, 0.07%)</title><rect x="62.7961%" y="389" width="0.0669%" height="15" fill="rgb(238,30,35)" fg:x="47882" fg:w="51"/><text x="63.0461%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (11 samples, 0.01%)</title><rect x="62.8630%" y="389" width="0.0144%" height="15" fill="rgb(236,70,23)" fg:x="47933" fg:w="11"/><text x="63.1130%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (178 samples, 0.23%)</title><rect x="62.6675%" y="437" width="0.2334%" height="15" fill="rgb(249,104,48)" fg:x="47784" fg:w="178"/><text x="62.9175%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (170 samples, 0.22%)</title><rect x="62.6780%" y="421" width="0.2230%" height="15" fill="rgb(254,117,50)" fg:x="47792" fg:w="170"/><text x="62.9280%" y="431.50"></text></g><g><title>core::ptr::null_mut (29 samples, 0.04%)</title><rect x="62.8630%" y="405" width="0.0380%" height="15" fill="rgb(223,152,4)" fg:x="47933" fg:w="29"/><text x="63.1130%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.02%)</title><rect x="62.8774%" y="389" width="0.0236%" height="15" fill="rgb(245,6,2)" fg:x="47944" fg:w="18"/><text x="63.1274%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (49 samples, 0.06%)</title><rect x="62.9010%" y="437" width="0.0643%" height="15" fill="rgb(249,150,24)" fg:x="47962" fg:w="49"/><text x="63.1510%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.05%)</title><rect x="62.9180%" y="421" width="0.0472%" height="15" fill="rgb(228,185,42)" fg:x="47975" fg:w="36"/><text x="63.1680%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (26 samples, 0.03%)</title><rect x="62.9311%" y="405" width="0.0341%" height="15" fill="rgb(226,39,33)" fg:x="47985" fg:w="26"/><text x="63.1811%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold (21 samples, 0.03%)</title><rect x="63.1410%" y="405" width="0.0275%" height="15" fill="rgb(221,166,19)" fg:x="48145" fg:w="21"/><text x="63.3910%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (95 samples, 0.12%)</title><rect x="63.7718%" y="357" width="0.1246%" height="15" fill="rgb(209,109,2)" fg:x="48626" fg:w="95"/><text x="64.0218%" y="367.50"></text></g><g><title>core::ptr::invalid (13 samples, 0.02%)</title><rect x="63.8964%" y="341" width="0.0170%" height="15" fill="rgb(252,216,26)" fg:x="48721" fg:w="13"/><text x="64.1464%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (403 samples, 0.53%)</title><rect x="63.4334%" y="373" width="0.5285%" height="15" fill="rgb(227,173,36)" fg:x="48368" fg:w="403"/><text x="63.6834%" y="383.50"></text></g><g><title>core::ptr::null (50 samples, 0.07%)</title><rect x="63.8964%" y="357" width="0.0656%" height="15" fill="rgb(209,90,7)" fg:x="48721" fg:w="50"/><text x="64.1464%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (37 samples, 0.05%)</title><rect x="63.9134%" y="341" width="0.0485%" height="15" fill="rgb(250,194,11)" fg:x="48734" fg:w="37"/><text x="64.1634%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (159 samples, 0.21%)</title><rect x="64.3331%" y="357" width="0.2085%" height="15" fill="rgb(220,72,50)" fg:x="49054" fg:w="159"/><text x="64.5831%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (91 samples, 0.12%)</title><rect x="64.4223%" y="341" width="0.1193%" height="15" fill="rgb(222,106,48)" fg:x="49122" fg:w="91"/><text x="64.6723%" y="351.50"></text></g><g><title>core::ptr::invalid_mut (13 samples, 0.02%)</title><rect x="64.5416%" y="341" width="0.0170%" height="15" fill="rgb(216,220,45)" fg:x="49213" fg:w="13"/><text x="64.7916%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (487 samples, 0.64%)</title><rect x="63.9620%" y="373" width="0.6387%" height="15" fill="rgb(234,112,18)" fg:x="48771" fg:w="487"/><text x="64.2120%" y="383.50"></text></g><g><title>core::ptr::null_mut (45 samples, 0.06%)</title><rect x="64.5416%" y="357" width="0.0590%" height="15" fill="rgb(206,179,9)" fg:x="49213" fg:w="45"/><text x="64.7916%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (32 samples, 0.04%)</title><rect x="64.5587%" y="341" width="0.0420%" height="15" fill="rgb(215,115,40)" fg:x="49226" fg:w="32"/><text x="64.8087%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,012 samples, 1.33%)</title><rect x="63.3246%" y="389" width="1.3272%" height="15" fill="rgb(222,69,34)" fg:x="48285" fg:w="1012"/><text x="63.5746%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (39 samples, 0.05%)</title><rect x="64.6007%" y="373" width="0.0511%" height="15" fill="rgb(209,161,10)" fg:x="49258" fg:w="39"/><text x="64.8507%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (21 samples, 0.03%)</title><rect x="64.6243%" y="357" width="0.0275%" height="15" fill="rgb(217,6,38)" fg:x="49276" fg:w="21"/><text x="64.8743%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (20 samples, 0.03%)</title><rect x="64.6256%" y="341" width="0.0262%" height="15" fill="rgb(229,229,48)" fg:x="49277" fg:w="20"/><text x="64.8756%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (52 samples, 0.07%)</title><rect x="64.9941%" y="341" width="0.0682%" height="15" fill="rgb(225,21,28)" fg:x="49558" fg:w="52"/><text x="65.2441%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (52 samples, 0.07%)</title><rect x="64.9941%" y="325" width="0.0682%" height="15" fill="rgb(206,33,13)" fg:x="49558" fg:w="52"/><text x="65.2441%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (213 samples, 0.28%)</title><rect x="64.8157%" y="373" width="0.2793%" height="15" fill="rgb(242,178,17)" fg:x="49422" fg:w="213"/><text x="65.0657%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (101 samples, 0.13%)</title><rect x="64.9626%" y="357" width="0.1325%" height="15" fill="rgb(220,162,5)" fg:x="49534" fg:w="101"/><text x="65.2126%" y="367.50"></text></g><g><title>core::ptr::write (25 samples, 0.03%)</title><rect x="65.0623%" y="341" width="0.0328%" height="15" fill="rgb(210,33,43)" fg:x="49610" fg:w="25"/><text x="65.3123%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9 samples, 0.01%)</title><rect x="65.2131%" y="213" width="0.0118%" height="15" fill="rgb(216,116,54)" fg:x="49725" fg:w="9"/><text x="65.4631%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (29 samples, 0.04%)</title><rect x="65.2538%" y="197" width="0.0380%" height="15" fill="rgb(249,92,24)" fg:x="49756" fg:w="29"/><text x="65.5038%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (17 samples, 0.02%)</title><rect x="65.2695%" y="181" width="0.0223%" height="15" fill="rgb(231,189,14)" fg:x="49768" fg:w="17"/><text x="65.5195%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (64 samples, 0.08%)</title><rect x="65.2118%" y="229" width="0.0839%" height="15" fill="rgb(230,8,41)" fg:x="49724" fg:w="64"/><text x="65.4618%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (54 samples, 0.07%)</title><rect x="65.2249%" y="213" width="0.0708%" height="15" fill="rgb(249,7,27)" fg:x="49734" fg:w="54"/><text x="65.4749%" y="223.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.04%)</title><rect x="65.4164%" y="133" width="0.0407%" height="15" fill="rgb(232,86,5)" fg:x="49880" fg:w="31"/><text x="65.6664%" y="143.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.05%)</title><rect x="65.4111%" y="149" width="0.0485%" height="15" fill="rgb(224,175,18)" fg:x="49876" fg:w="37"/><text x="65.6611%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (25 samples, 0.03%)</title><rect x="65.5134%" y="117" width="0.0328%" height="15" fill="rgb(220,129,12)" fg:x="49954" fg:w="25"/><text x="65.7634%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.02%)</title><rect x="65.5279%" y="101" width="0.0184%" height="15" fill="rgb(210,19,36)" fg:x="49965" fg:w="14"/><text x="65.7779%" y="111.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (67 samples, 0.09%)</title><rect x="65.4636%" y="149" width="0.0879%" height="15" fill="rgb(219,96,14)" fg:x="49916" fg:w="67"/><text x="65.7136%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (60 samples, 0.08%)</title><rect x="65.4728%" y="133" width="0.0787%" height="15" fill="rgb(249,106,1)" fg:x="49923" fg:w="60"/><text x="65.7228%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.17%)</title><rect x="65.3849%" y="181" width="0.1744%" height="15" fill="rgb(249,155,20)" fg:x="49856" fg:w="133"/><text x="65.6349%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (131 samples, 0.17%)</title><rect x="65.3875%" y="165" width="0.1718%" height="15" fill="rgb(244,168,9)" fg:x="49858" fg:w="131"/><text x="65.6375%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (9 samples, 0.01%)</title><rect x="65.6656%" y="149" width="0.0118%" height="15" fill="rgb(216,23,50)" fg:x="50070" fg:w="9"/><text x="65.9156%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (91 samples, 0.12%)</title><rect x="65.5607%" y="165" width="0.1193%" height="15" fill="rgb(224,219,20)" fg:x="49990" fg:w="91"/><text x="65.8107%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array (94 samples, 0.12%)</title><rect x="65.5593%" y="181" width="0.1233%" height="15" fill="rgb(222,156,15)" fg:x="49989" fg:w="94"/><text x="65.8093%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="65.6826%" y="181" width="0.0105%" height="15" fill="rgb(231,97,17)" fg:x="50083" fg:w="8"/><text x="65.9326%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (307 samples, 0.40%)</title><rect x="65.2957%" y="229" width="0.4026%" height="15" fill="rgb(218,70,48)" fg:x="49788" fg:w="307"/><text x="65.5457%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (307 samples, 0.40%)</title><rect x="65.2957%" y="213" width="0.4026%" height="15" fill="rgb(212,196,52)" fg:x="49788" fg:w="307"/><text x="65.5457%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (304 samples, 0.40%)</title><rect x="65.2997%" y="197" width="0.3987%" height="15" fill="rgb(243,203,18)" fg:x="49791" fg:w="304"/><text x="65.5497%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.01%)</title><rect x="65.6984%" y="229" width="0.0105%" height="15" fill="rgb(252,125,41)" fg:x="50095" fg:w="8"/><text x="65.9484%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (412 samples, 0.54%)</title><rect x="65.1869%" y="309" width="0.5403%" height="15" fill="rgb(223,180,33)" fg:x="49705" fg:w="412"/><text x="65.4369%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (410 samples, 0.54%)</title><rect x="65.1895%" y="293" width="0.5377%" height="15" fill="rgb(254,159,46)" fg:x="49707" fg:w="410"/><text x="65.4395%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (410 samples, 0.54%)</title><rect x="65.1895%" y="277" width="0.5377%" height="15" fill="rgb(254,38,10)" fg:x="49707" fg:w="410"/><text x="65.4395%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (409 samples, 0.54%)</title><rect x="65.1908%" y="261" width="0.5364%" height="15" fill="rgb(208,217,32)" fg:x="49708" fg:w="409"/><text x="65.4408%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (406 samples, 0.53%)</title><rect x="65.1948%" y="245" width="0.5325%" height="15" fill="rgb(221,120,13)" fg:x="49711" fg:w="406"/><text x="65.4448%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (14 samples, 0.02%)</title><rect x="65.7089%" y="229" width="0.0184%" height="15" fill="rgb(246,54,52)" fg:x="50103" fg:w="14"/><text x="65.9589%" y="239.50"></text></g><g><title>core::ptr::metadata::metadata (12 samples, 0.02%)</title><rect x="65.7115%" y="213" width="0.0157%" height="15" fill="rgb(242,34,25)" fg:x="50105" fg:w="12"/><text x="65.9615%" y="223.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (431 samples, 0.57%)</title><rect x="65.1698%" y="357" width="0.5652%" height="15" fill="rgb(247,209,9)" fg:x="49692" fg:w="431"/><text x="65.4198%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (422 samples, 0.55%)</title><rect x="65.1816%" y="341" width="0.5534%" height="15" fill="rgb(228,71,26)" fg:x="49701" fg:w="422"/><text x="65.4316%" y="351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (421 samples, 0.55%)</title><rect x="65.1830%" y="325" width="0.5521%" height="15" fill="rgb(222,145,49)" fg:x="49702" fg:w="421"/><text x="65.4330%" y="335.50"></text></g><g><title>alloc::string::String::new (236 samples, 0.31%)</title><rect x="65.8505%" y="325" width="0.3095%" height="15" fill="rgb(218,121,17)" fg:x="50211" fg:w="236"/><text x="66.1005%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (9 samples, 0.01%)</title><rect x="66.1482%" y="309" width="0.0118%" height="15" fill="rgb(244,50,7)" fg:x="50438" fg:w="9"/><text x="66.3982%" y="319.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (11 samples, 0.01%)</title><rect x="66.1797%" y="309" width="0.0144%" height="15" fill="rgb(246,229,37)" fg:x="50462" fg:w="11"/><text x="66.4297%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (18 samples, 0.02%)</title><rect x="66.4866%" y="197" width="0.0236%" height="15" fill="rgb(225,18,5)" fg:x="50696" fg:w="18"/><text x="66.7366%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (216 samples, 0.28%)</title><rect x="66.8210%" y="181" width="0.2833%" height="15" fill="rgb(213,204,8)" fg:x="50951" fg:w="216"/><text x="67.0710%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (147 samples, 0.19%)</title><rect x="66.9115%" y="165" width="0.1928%" height="15" fill="rgb(238,103,6)" fg:x="51020" fg:w="147"/><text x="67.1615%" y="175.50"></text></g><g><title>core::ptr::invalid_mut (35 samples, 0.05%)</title><rect x="67.1043%" y="165" width="0.0459%" height="15" fill="rgb(222,25,35)" fg:x="51167" fg:w="35"/><text x="67.3543%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (585 samples, 0.77%)</title><rect x="66.4839%" y="213" width="0.7672%" height="15" fill="rgb(213,203,35)" fg:x="50694" fg:w="585"/><text x="66.7339%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (565 samples, 0.74%)</title><rect x="66.5102%" y="197" width="0.7410%" height="15" fill="rgb(221,79,53)" fg:x="50714" fg:w="565"/><text x="66.7602%" y="207.50"></text></g><g><title>core::ptr::null_mut (112 samples, 0.15%)</title><rect x="67.1043%" y="181" width="0.1469%" height="15" fill="rgb(243,200,35)" fg:x="51167" fg:w="112"/><text x="67.3543%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (77 samples, 0.10%)</title><rect x="67.1502%" y="165" width="0.1010%" height="15" fill="rgb(248,60,25)" fg:x="51202" fg:w="77"/><text x="67.4002%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (10 samples, 0.01%)</title><rect x="67.2511%" y="213" width="0.0131%" height="15" fill="rgb(227,53,46)" fg:x="51279" fg:w="10"/><text x="67.5011%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (16 samples, 0.02%)</title><rect x="67.3836%" y="165" width="0.0210%" height="15" fill="rgb(216,120,32)" fg:x="51380" fg:w="16"/><text x="67.6336%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (65 samples, 0.09%)</title><rect x="67.3298%" y="181" width="0.0852%" height="15" fill="rgb(220,134,1)" fg:x="51339" fg:w="65"/><text x="67.5798%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (8 samples, 0.01%)</title><rect x="67.4046%" y="165" width="0.0105%" height="15" fill="rgb(237,168,5)" fg:x="51396" fg:w="8"/><text x="67.6546%" y="175.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (97 samples, 0.13%)</title><rect x="67.6866%" y="149" width="0.1272%" height="15" fill="rgb(231,100,33)" fg:x="51611" fg:w="97"/><text x="67.9366%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (48 samples, 0.06%)</title><rect x="67.8138%" y="149" width="0.0630%" height="15" fill="rgb(236,177,47)" fg:x="51708" fg:w="48"/><text x="68.0638%" y="159.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (67 samples, 0.09%)</title><rect x="67.9567%" y="133" width="0.0879%" height="15" fill="rgb(235,7,49)" fg:x="51817" fg:w="67"/><text x="68.2067%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (200 samples, 0.26%)</title><rect x="67.8767%" y="149" width="0.2623%" height="15" fill="rgb(232,119,22)" fg:x="51756" fg:w="200"/><text x="68.1267%" y="159.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (66 samples, 0.09%)</title><rect x="68.0525%" y="133" width="0.0866%" height="15" fill="rgb(254,73,53)" fg:x="51890" fg:w="66"/><text x="68.3025%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="68.5718%" y="101" width="0.0105%" height="15" fill="rgb(251,35,20)" fg:x="52286" fg:w="8"/><text x="68.8218%" y="111.50"></text></g><g><title>__GI___libc_malloc (93 samples, 0.12%)</title><rect x="68.6387%" y="85" width="0.1220%" height="15" fill="rgb(241,119,20)" fg:x="52337" fg:w="93"/><text x="68.8887%" y="95.50"></text></g><g><title>__rdl_alloc (8 samples, 0.01%)</title><rect x="68.7607%" y="85" width="0.0105%" height="15" fill="rgb(207,102,14)" fg:x="52430" fg:w="8"/><text x="69.0107%" y="95.50"></text></g><g><title>__rust_alloc (11 samples, 0.01%)</title><rect x="68.7711%" y="85" width="0.0144%" height="15" fill="rgb(248,201,50)" fg:x="52438" fg:w="11"/><text x="69.0211%" y="95.50"></text></g><g><title>alloc::alloc::alloc (166 samples, 0.22%)</title><rect x="68.5823%" y="101" width="0.2177%" height="15" fill="rgb(222,185,44)" fg:x="52294" fg:w="166"/><text x="68.8323%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::size (51 samples, 0.07%)</title><rect x="68.8000%" y="101" width="0.0669%" height="15" fill="rgb(218,107,18)" fg:x="52460" fg:w="51"/><text x="69.0500%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (215 samples, 0.28%)</title><rect x="69.1856%" y="69" width="0.2820%" height="15" fill="rgb(237,177,39)" fg:x="52754" fg:w="215"/><text x="69.4356%" y="79.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (140 samples, 0.18%)</title><rect x="69.2839%" y="53" width="0.1836%" height="15" fill="rgb(246,69,6)" fg:x="52829" fg:w="140"/><text x="69.5339%" y="63.50"></text></g><g><title>core::ptr::invalid_mut (19 samples, 0.02%)</title><rect x="69.4675%" y="53" width="0.0249%" height="15" fill="rgb(234,208,37)" fg:x="52969" fg:w="19"/><text x="69.7175%" y="63.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (523 samples, 0.69%)</title><rect x="68.8748%" y="101" width="0.6859%" height="15" fill="rgb(225,4,6)" fg:x="52517" fg:w="523"/><text x="69.1248%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (482 samples, 0.63%)</title><rect x="68.9285%" y="85" width="0.6321%" height="15" fill="rgb(233,45,0)" fg:x="52558" fg:w="482"/><text x="69.1785%" y="95.50"></text></g><g><title>core::ptr::null_mut (71 samples, 0.09%)</title><rect x="69.4675%" y="69" width="0.0931%" height="15" fill="rgb(226,136,5)" fg:x="52969" fg:w="71"/><text x="69.7175%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (52 samples, 0.07%)</title><rect x="69.4925%" y="53" width="0.0682%" height="15" fill="rgb(211,91,47)" fg:x="52988" fg:w="52"/><text x="69.7425%" y="63.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (948 samples, 1.24%)</title><rect x="68.3502%" y="133" width="1.2433%" height="15" fill="rgb(242,88,51)" fg:x="52117" fg:w="948"/><text x="68.6002%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (944 samples, 1.24%)</title><rect x="68.3554%" y="117" width="1.2380%" height="15" fill="rgb(230,91,28)" fg:x="52121" fg:w="944"/><text x="68.6054%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (25 samples, 0.03%)</title><rect x="69.5607%" y="101" width="0.0328%" height="15" fill="rgb(254,186,29)" fg:x="53040" fg:w="25"/><text x="69.8107%" y="111.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (24 samples, 0.03%)</title><rect x="69.5620%" y="85" width="0.0315%" height="15" fill="rgb(238,6,4)" fg:x="53041" fg:w="24"/><text x="69.8120%" y="95.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (21 samples, 0.03%)</title><rect x="69.5659%" y="69" width="0.0275%" height="15" fill="rgb(221,151,16)" fg:x="53044" fg:w="21"/><text x="69.8159%" y="79.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (110 samples, 0.14%)</title><rect x="69.5934%" y="133" width="0.1443%" height="15" fill="rgb(251,143,52)" fg:x="53065" fg:w="110"/><text x="69.8434%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,539 samples, 2.02%)</title><rect x="68.1390%" y="149" width="2.0184%" height="15" fill="rgb(206,90,15)" fg:x="51956" fg:w="1539"/><text x="68.3890%" y="159.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (319 samples, 0.42%)</title><rect x="69.7390%" y="133" width="0.4184%" height="15" fill="rgb(218,35,8)" fg:x="53176" fg:w="319"/><text x="69.9890%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (40 samples, 0.05%)</title><rect x="71.0020%" y="117" width="0.0525%" height="15" fill="rgb(239,215,6)" fg:x="54139" fg:w="40"/><text x="71.2520%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (29 samples, 0.04%)</title><rect x="71.0544%" y="117" width="0.0380%" height="15" fill="rgb(245,116,39)" fg:x="54179" fg:w="29"/><text x="71.3044%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (732 samples, 0.96%)</title><rect x="70.1666%" y="133" width="0.9600%" height="15" fill="rgb(242,65,28)" fg:x="53502" fg:w="732"/><text x="70.4166%" y="143.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (26 samples, 0.03%)</title><rect x="71.0925%" y="117" width="0.0341%" height="15" fill="rgb(252,132,53)" fg:x="54208" fg:w="26"/><text x="71.3425%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (745 samples, 0.98%)</title><rect x="70.1574%" y="149" width="0.9770%" height="15" fill="rgb(224,159,50)" fg:x="53495" fg:w="745"/><text x="70.4074%" y="159.50"></text></g><g><title>core::cmp::max (317 samples, 0.42%)</title><rect x="71.1344%" y="149" width="0.4157%" height="15" fill="rgb(224,93,4)" fg:x="54240" fg:w="317"/><text x="71.3844%" y="159.50"></text></g><g><title>core::cmp::Ord::max (303 samples, 0.40%)</title><rect x="71.1528%" y="133" width="0.3974%" height="15" fill="rgb(208,81,34)" fg:x="54254" fg:w="303"/><text x="71.4028%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (124 samples, 0.16%)</title><rect x="71.3875%" y="117" width="0.1626%" height="15" fill="rgb(233,92,54)" fg:x="54433" fg:w="124"/><text x="71.6375%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (273 samples, 0.36%)</title><rect x="71.5502%" y="149" width="0.3580%" height="15" fill="rgb(237,21,14)" fg:x="54557" fg:w="273"/><text x="71.8002%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (106 samples, 0.14%)</title><rect x="71.7692%" y="133" width="0.1390%" height="15" fill="rgb(249,128,51)" fg:x="54724" fg:w="106"/><text x="72.0192%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,470 samples, 4.55%)</title><rect x="67.4321%" y="165" width="4.5508%" height="15" fill="rgb(223,129,24)" fg:x="51417" fg:w="3470"/><text x="67.6821%" y="175.50">alloc..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (57 samples, 0.07%)</title><rect x="71.9082%" y="149" width="0.0748%" height="15" fill="rgb(231,168,25)" fg:x="54830" fg:w="57"/><text x="72.1582%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,646 samples, 4.78%)</title><rect x="67.2643%" y="213" width="4.7816%" height="15" fill="rgb(224,39,20)" fg:x="51289" fg:w="3646"/><text x="67.5143%" y="223.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,627 samples, 4.76%)</title><rect x="67.2892%" y="197" width="4.7567%" height="15" fill="rgb(225,152,53)" fg:x="51308" fg:w="3627"/><text x="67.5392%" y="207.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,531 samples, 4.63%)</title><rect x="67.4151%" y="181" width="4.6308%" height="15" fill="rgb(252,17,24)" fg:x="51404" fg:w="3531"/><text x="67.6651%" y="191.50">alloc..</text></g><g><title>alloc::raw_vec::handle_reserve (48 samples, 0.06%)</title><rect x="71.9830%" y="165" width="0.0630%" height="15" fill="rgb(250,114,30)" fg:x="54887" fg:w="48"/><text x="72.2330%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (20 samples, 0.03%)</title><rect x="72.0197%" y="149" width="0.0262%" height="15" fill="rgb(229,5,4)" fg:x="54915" fg:w="20"/><text x="72.2697%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="72.0459%" y="213" width="0.0249%" height="15" fill="rgb(225,176,49)" fg:x="54935" fg:w="19"/><text x="72.2959%" y="223.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.02%)</title><rect x="72.0498%" y="197" width="0.0210%" height="15" fill="rgb(224,221,49)" fg:x="54938" fg:w="16"/><text x="72.2998%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,366 samples, 5.73%)</title><rect x="66.3528%" y="229" width="5.7259%" height="15" fill="rgb(253,169,27)" fg:x="50594" fg:w="4366"/><text x="66.6028%" y="239.50">alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,705 samples, 6.17%)</title><rect x="66.3436%" y="245" width="6.1705%" height="15" fill="rgb(211,206,16)" fg:x="50587" fg:w="4705"/><text x="66.5936%" y="255.50">&lt;alloc::..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (332 samples, 0.44%)</title><rect x="72.0787%" y="229" width="0.4354%" height="15" fill="rgb(244,87,35)" fg:x="54960" fg:w="332"/><text x="72.3287%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (272 samples, 0.36%)</title><rect x="72.1574%" y="213" width="0.3567%" height="15" fill="rgb(246,28,10)" fg:x="55020" fg:w="272"/><text x="72.4074%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts (97 samples, 0.13%)</title><rect x="72.3869%" y="197" width="0.1272%" height="15" fill="rgb(229,12,44)" fg:x="55195" fg:w="97"/><text x="72.6369%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts (48 samples, 0.06%)</title><rect x="72.4511%" y="181" width="0.0630%" height="15" fill="rgb(210,145,37)" fg:x="55244" fg:w="48"/><text x="72.7011%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (48 samples, 0.06%)</title><rect x="72.4511%" y="165" width="0.0630%" height="15" fill="rgb(227,112,52)" fg:x="55244" fg:w="48"/><text x="72.7011%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (139 samples, 0.18%)</title><rect x="73.1475%" y="197" width="0.1823%" height="15" fill="rgb(238,155,34)" fg:x="55775" fg:w="139"/><text x="73.3975%" y="207.50"></text></g><g><title>core::ptr::invalid (53 samples, 0.07%)</title><rect x="73.3298%" y="181" width="0.0695%" height="15" fill="rgb(239,226,36)" fg:x="55914" fg:w="53"/><text x="73.5798%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (618 samples, 0.81%)</title><rect x="72.7331%" y="213" width="0.8105%" height="15" fill="rgb(230,16,23)" fg:x="55459" fg:w="618"/><text x="72.9831%" y="223.50"></text></g><g><title>core::ptr::null (163 samples, 0.21%)</title><rect x="73.3298%" y="197" width="0.2138%" height="15" fill="rgb(236,171,36)" fg:x="55914" fg:w="163"/><text x="73.5798%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (110 samples, 0.14%)</title><rect x="73.3993%" y="181" width="0.1443%" height="15" fill="rgb(221,22,14)" fg:x="55967" fg:w="110"/><text x="73.6493%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5,551 samples, 7.28%)</title><rect x="66.2715%" y="261" width="7.2800%" height="15" fill="rgb(242,43,11)" fg:x="50532" fg:w="5551"/><text x="66.5215%" y="271.50">alloc::vec..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (791 samples, 1.04%)</title><rect x="72.5141%" y="245" width="1.0374%" height="15" fill="rgb(232,69,23)" fg:x="55292" fg:w="791"/><text x="72.7641%" y="255.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (787 samples, 1.03%)</title><rect x="72.5193%" y="229" width="1.0321%" height="15" fill="rgb(216,180,54)" fg:x="55296" fg:w="787"/><text x="72.7693%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5,623 samples, 7.37%)</title><rect x="66.2125%" y="293" width="7.3744%" height="15" fill="rgb(216,5,24)" fg:x="50487" fg:w="5623"/><text x="66.4625%" y="303.50">&lt;alloc::st..</text></g><g><title>alloc::string::String::push_str (5,581 samples, 7.32%)</title><rect x="66.2675%" y="277" width="7.3193%" height="15" fill="rgb(225,89,9)" fg:x="50529" fg:w="5581"/><text x="66.5175%" y="287.50">alloc::str..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (27 samples, 0.04%)</title><rect x="73.5515%" y="261" width="0.0354%" height="15" fill="rgb(243,75,33)" fg:x="56083" fg:w="27"/><text x="73.8015%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (115 samples, 0.15%)</title><rect x="73.5869%" y="293" width="0.1508%" height="15" fill="rgb(247,141,45)" fg:x="56110" fg:w="115"/><text x="73.8369%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (28 samples, 0.04%)</title><rect x="73.7010%" y="277" width="0.0367%" height="15" fill="rgb(232,177,36)" fg:x="56197" fg:w="28"/><text x="73.9510%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%)</title><rect x="73.7377%" y="293" width="0.0197%" height="15" fill="rgb(219,125,36)" fg:x="56225" fg:w="15"/><text x="73.9877%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (5,787 samples, 7.59%)</title><rect x="66.1692%" y="325" width="7.5895%" height="15" fill="rgb(227,94,9)" fg:x="50454" fg:w="5787"/><text x="66.4192%" y="335.50">core::fmt:..</text></g><g><title>core::fmt::num::imp::fmt_u64 (5,768 samples, 7.56%)</title><rect x="66.1941%" y="309" width="7.5646%" height="15" fill="rgb(240,34,52)" fg:x="50473" fg:w="5768"/><text x="66.4441%" y="319.50">core::fmt:..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (6,155 samples, 8.07%)</title><rect x="65.7757%" y="341" width="8.0721%" height="15" fill="rgb(216,45,12)" fg:x="50154" fg:w="6155"/><text x="66.0257%" y="351.50">&lt;T as alloc..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (68 samples, 0.09%)</title><rect x="73.7587%" y="325" width="0.0892%" height="15" fill="rgb(246,21,19)" fg:x="56241" fg:w="68"/><text x="74.0087%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (123 samples, 0.16%)</title><rect x="74.0249%" y="277" width="0.1613%" height="15" fill="rgb(213,98,42)" fg:x="56444" fg:w="123"/><text x="74.2749%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (88 samples, 0.12%)</title><rect x="74.0708%" y="261" width="0.1154%" height="15" fill="rgb(250,136,47)" fg:x="56479" fg:w="88"/><text x="74.3208%" y="271.50"></text></g><g><title>core::ptr::invalid_mut (15 samples, 0.02%)</title><rect x="74.1862%" y="261" width="0.0197%" height="15" fill="rgb(251,124,27)" fg:x="56567" fg:w="15"/><text x="74.4362%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (293 samples, 0.38%)</title><rect x="73.8623%" y="309" width="0.3843%" height="15" fill="rgb(229,180,14)" fg:x="56320" fg:w="293"/><text x="74.1123%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (289 samples, 0.38%)</title><rect x="73.8675%" y="293" width="0.3790%" height="15" fill="rgb(245,216,25)" fg:x="56324" fg:w="289"/><text x="74.1175%" y="303.50"></text></g><g><title>core::ptr::null_mut (46 samples, 0.06%)</title><rect x="74.1862%" y="277" width="0.0603%" height="15" fill="rgb(251,43,5)" fg:x="56567" fg:w="46"/><text x="74.4362%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (31 samples, 0.04%)</title><rect x="74.2059%" y="261" width="0.0407%" height="15" fill="rgb(250,128,24)" fg:x="56582" fg:w="31"/><text x="74.4559%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (309 samples, 0.41%)</title><rect x="73.8544%" y="325" width="0.4052%" height="15" fill="rgb(217,117,27)" fg:x="56314" fg:w="309"/><text x="74.1044%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.01%)</title><rect x="74.2466%" y="309" width="0.0131%" height="15" fill="rgb(245,147,4)" fg:x="56613" fg:w="10"/><text x="74.4966%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.01%)</title><rect x="74.2492%" y="293" width="0.0105%" height="15" fill="rgb(242,201,35)" fg:x="56615" fg:w="8"/><text x="74.4992%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.01%)</title><rect x="74.2492%" y="277" width="0.0105%" height="15" fill="rgb(218,181,1)" fg:x="56615" fg:w="8"/><text x="74.4992%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (318 samples, 0.42%)</title><rect x="73.8479%" y="341" width="0.4170%" height="15" fill="rgb(222,6,29)" fg:x="56309" fg:w="318"/><text x="74.0979%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (20 samples, 0.03%)</title><rect x="74.3843%" y="309" width="0.0262%" height="15" fill="rgb(208,186,3)" fg:x="56718" fg:w="20"/><text x="74.6343%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (150 samples, 0.20%)</title><rect x="74.5928%" y="277" width="0.1967%" height="15" fill="rgb(216,36,26)" fg:x="56877" fg:w="150"/><text x="74.8428%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (116 samples, 0.15%)</title><rect x="74.6374%" y="261" width="0.1521%" height="15" fill="rgb(248,201,23)" fg:x="56911" fg:w="116"/><text x="74.8874%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (334 samples, 0.44%)</title><rect x="74.4105%" y="309" width="0.4380%" height="15" fill="rgb(251,170,31)" fg:x="56738" fg:w="334"/><text x="74.6605%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (329 samples, 0.43%)</title><rect x="74.4170%" y="293" width="0.4315%" height="15" fill="rgb(207,110,25)" fg:x="56743" fg:w="329"/><text x="74.6670%" y="303.50"></text></g><g><title>core::ptr::null_mut (45 samples, 0.06%)</title><rect x="74.7895%" y="277" width="0.0590%" height="15" fill="rgb(250,54,15)" fg:x="57027" fg:w="45"/><text x="75.0395%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (39 samples, 0.05%)</title><rect x="74.7974%" y="261" width="0.0511%" height="15" fill="rgb(227,68,33)" fg:x="57033" fg:w="39"/><text x="75.0474%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (433 samples, 0.57%)</title><rect x="74.3043%" y="325" width="0.5679%" height="15" fill="rgb(238,34,41)" fg:x="56657" fg:w="433"/><text x="74.5543%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.02%)</title><rect x="74.8485%" y="309" width="0.0236%" height="15" fill="rgb(220,11,15)" fg:x="57072" fg:w="18"/><text x="75.0985%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.02%)</title><rect x="74.8511%" y="293" width="0.0210%" height="15" fill="rgb(246,111,35)" fg:x="57074" fg:w="16"/><text x="75.1011%" y="303.50"></text></g><g><title>alloc::string::String::push (503 samples, 0.66%)</title><rect x="74.2649%" y="341" width="0.6597%" height="15" fill="rgb(209,88,53)" fg:x="56627" fg:w="503"/><text x="74.5149%" y="351.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (40 samples, 0.05%)</title><rect x="74.8721%" y="325" width="0.0525%" height="15" fill="rgb(231,185,47)" fg:x="57090" fg:w="40"/><text x="75.1221%" y="335.50"></text></g><g><title>core::char::methods::len_utf8 (40 samples, 0.05%)</title><rect x="74.8721%" y="309" width="0.0525%" height="15" fill="rgb(233,154,1)" fg:x="57090" fg:w="40"/><text x="75.1221%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (101 samples, 0.13%)</title><rect x="75.2131%" y="245" width="0.1325%" height="15" fill="rgb(225,15,46)" fg:x="57350" fg:w="101"/><text x="75.4631%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (84 samples, 0.11%)</title><rect x="75.2354%" y="229" width="0.1102%" height="15" fill="rgb(211,135,41)" fg:x="57367" fg:w="84"/><text x="75.4854%" y="239.50"></text></g><g><title>core::ptr::invalid_mut (22 samples, 0.03%)</title><rect x="75.3456%" y="229" width="0.0289%" height="15" fill="rgb(208,54,0)" fg:x="57451" fg:w="22"/><text x="75.5956%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (296 samples, 0.39%)</title><rect x="75.0321%" y="277" width="0.3882%" height="15" fill="rgb(244,136,14)" fg:x="57212" fg:w="296"/><text x="75.2821%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (291 samples, 0.38%)</title><rect x="75.0387%" y="261" width="0.3816%" height="15" fill="rgb(241,56,14)" fg:x="57217" fg:w="291"/><text x="75.2887%" y="271.50"></text></g><g><title>core::ptr::null_mut (57 samples, 0.07%)</title><rect x="75.3456%" y="245" width="0.0748%" height="15" fill="rgb(205,80,24)" fg:x="57451" fg:w="57"/><text x="75.5956%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (35 samples, 0.05%)</title><rect x="75.3744%" y="229" width="0.0459%" height="15" fill="rgb(220,57,4)" fg:x="57473" fg:w="35"/><text x="75.6244%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 0.07%)</title><rect x="75.4203%" y="277" width="0.0669%" height="15" fill="rgb(226,193,50)" fg:x="57508" fg:w="51"/><text x="75.6703%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (47 samples, 0.06%)</title><rect x="75.4256%" y="261" width="0.0616%" height="15" fill="rgb(231,168,22)" fg:x="57512" fg:w="47"/><text x="75.6756%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (34 samples, 0.04%)</title><rect x="75.4426%" y="245" width="0.0446%" height="15" fill="rgb(254,215,14)" fg:x="57525" fg:w="34"/><text x="75.6926%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (399 samples, 0.52%)</title><rect x="74.9731%" y="293" width="0.5233%" height="15" fill="rgb(211,115,16)" fg:x="57167" fg:w="399"/><text x="75.2231%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (585 samples, 0.77%)</title><rect x="74.9626%" y="309" width="0.7672%" height="15" fill="rgb(236,210,16)" fg:x="57159" fg:w="585"/><text x="75.2126%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (178 samples, 0.23%)</title><rect x="75.4964%" y="293" width="0.2334%" height="15" fill="rgb(221,94,12)" fg:x="57566" fg:w="178"/><text x="75.7464%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (139 samples, 0.18%)</title><rect x="75.5475%" y="277" width="0.1823%" height="15" fill="rgb(235,218,49)" fg:x="57605" fg:w="139"/><text x="75.7975%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts (29 samples, 0.04%)</title><rect x="75.6918%" y="261" width="0.0380%" height="15" fill="rgb(217,114,14)" fg:x="57715" fg:w="29"/><text x="75.9418%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts (18 samples, 0.02%)</title><rect x="75.7062%" y="245" width="0.0236%" height="15" fill="rgb(216,145,22)" fg:x="57726" fg:w="18"/><text x="75.9562%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.02%)</title><rect x="75.7062%" y="229" width="0.0236%" height="15" fill="rgb(217,112,39)" fg:x="57726" fg:w="18"/><text x="75.9562%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (86 samples, 0.11%)</title><rect x="76.1115%" y="261" width="0.1128%" height="15" fill="rgb(225,85,32)" fg:x="58035" fg:w="86"/><text x="76.3615%" y="271.50"></text></g><g><title>core::ptr::invalid (49 samples, 0.06%)</title><rect x="76.2243%" y="245" width="0.0643%" height="15" fill="rgb(245,209,47)" fg:x="58121" fg:w="49"/><text x="76.4743%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (395 samples, 0.52%)</title><rect x="75.8584%" y="277" width="0.5180%" height="15" fill="rgb(218,220,15)" fg:x="57842" fg:w="395"/><text x="76.1084%" y="287.50"></text></g><g><title>core::ptr::null (116 samples, 0.15%)</title><rect x="76.2243%" y="261" width="0.1521%" height="15" fill="rgb(222,202,31)" fg:x="58121" fg:w="116"/><text x="76.4743%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (67 samples, 0.09%)</title><rect x="76.2885%" y="245" width="0.0879%" height="15" fill="rgb(243,203,4)" fg:x="58170" fg:w="67"/><text x="76.5385%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,097 samples, 1.44%)</title><rect x="74.9390%" y="325" width="1.4387%" height="15" fill="rgb(237,92,17)" fg:x="57141" fg:w="1097"/><text x="75.1890%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (494 samples, 0.65%)</title><rect x="75.7298%" y="309" width="0.6479%" height="15" fill="rgb(231,119,7)" fg:x="57744" fg:w="494"/><text x="75.9798%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (493 samples, 0.65%)</title><rect x="75.7311%" y="293" width="0.6466%" height="15" fill="rgb(237,82,41)" fg:x="57745" fg:w="493"/><text x="75.9811%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1,115 samples, 1.46%)</title><rect x="74.9246%" y="341" width="1.4623%" height="15" fill="rgb(226,81,48)" fg:x="57130" fg:w="1115"/><text x="75.1746%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (106 samples, 0.14%)</title><rect x="76.5285%" y="261" width="0.1390%" height="15" fill="rgb(234,70,51)" fg:x="58353" fg:w="106"/><text x="76.7785%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (65 samples, 0.09%)</title><rect x="76.5823%" y="245" width="0.0852%" height="15" fill="rgb(251,86,4)" fg:x="58394" fg:w="65"/><text x="76.8323%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (201 samples, 0.26%)</title><rect x="76.4066%" y="293" width="0.2636%" height="15" fill="rgb(244,144,28)" fg:x="58260" fg:w="201"/><text x="76.6566%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (200 samples, 0.26%)</title><rect x="76.4079%" y="277" width="0.2623%" height="15" fill="rgb(232,161,39)" fg:x="58261" fg:w="200"/><text x="76.6579%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (219 samples, 0.29%)</title><rect x="76.3974%" y="309" width="0.2872%" height="15" fill="rgb(247,34,51)" fg:x="58253" fg:w="219"/><text x="76.6474%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (11 samples, 0.01%)</title><rect x="76.6702%" y="293" width="0.0144%" height="15" fill="rgb(225,132,2)" fg:x="58461" fg:w="11"/><text x="76.9202%" y="303.50"></text></g><g><title>__GI___libc_free (9 samples, 0.01%)</title><rect x="76.8682%" y="245" width="0.0118%" height="15" fill="rgb(209,159,44)" fg:x="58612" fg:w="9"/><text x="77.1182%" y="255.50"></text></g><g><title>_int_free (48 samples, 0.06%)</title><rect x="76.8866%" y="245" width="0.0630%" height="15" fill="rgb(251,214,1)" fg:x="58626" fg:w="48"/><text x="77.1366%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (152 samples, 0.20%)</title><rect x="76.7672%" y="277" width="0.1993%" height="15" fill="rgb(247,84,47)" fg:x="58535" fg:w="152"/><text x="77.0172%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (102 samples, 0.13%)</title><rect x="76.8328%" y="261" width="0.1338%" height="15" fill="rgb(240,111,43)" fg:x="58585" fg:w="102"/><text x="77.0828%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::align (13 samples, 0.02%)</title><rect x="76.9495%" y="245" width="0.0170%" height="15" fill="rgb(215,214,35)" fg:x="58674" fg:w="13"/><text x="77.1995%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="77.0662%" y="261" width="0.0131%" height="15" fill="rgb(248,207,23)" fg:x="58763" fg:w="10"/><text x="77.3162%" y="271.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (9 samples, 0.01%)</title><rect x="77.0675%" y="245" width="0.0118%" height="15" fill="rgb(214,186,4)" fg:x="58764" fg:w="9"/><text x="77.3175%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="229" width="0.0105%" height="15" fill="rgb(220,133,22)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="213" width="0.0105%" height="15" fill="rgb(239,134,19)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="197" width="0.0105%" height="15" fill="rgb(250,140,9)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="207.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="181" width="0.0105%" height="15" fill="rgb(225,59,14)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="191.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="165" width="0.0105%" height="15" fill="rgb(214,152,51)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="175.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="149" width="0.0105%" height="15" fill="rgb(251,227,43)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="159.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="133" width="0.0105%" height="15" fill="rgb(241,96,17)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="143.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="117" width="0.0105%" height="15" fill="rgb(234,198,43)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="127.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="101" width="0.0105%" height="15" fill="rgb(220,108,29)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="111.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="85" width="0.0105%" height="15" fill="rgb(226,163,33)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="95.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="69" width="0.0105%" height="15" fill="rgb(205,194,45)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="79.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="77.4256%" y="53" width="0.0105%" height="15" fill="rgb(206,143,44)" fg:x="59037" fg:w="8"/><text x="77.6756%" y="63.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (19 samples, 0.02%)</title><rect x="77.4413%" y="229" width="0.0249%" height="15" fill="rgb(236,136,36)" fg:x="59049" fg:w="19"/><text x="77.6913%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (293 samples, 0.38%)</title><rect x="77.0833%" y="245" width="0.3843%" height="15" fill="rgb(249,172,42)" fg:x="58776" fg:w="293"/><text x="77.3333%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (296 samples, 0.39%)</title><rect x="77.0807%" y="261" width="0.3882%" height="15" fill="rgb(216,139,23)" fg:x="58774" fg:w="296"/><text x="77.3307%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9,799 samples, 12.85%)</title><rect x="64.6531%" y="389" width="12.8511%" height="15" fill="rgb(207,166,20)" fg:x="49298" fg:w="9799"/><text x="64.9031%" y="399.50">core::iter::adapter..</text></g><g><title>day1::day16_part2::get_key::{{closure}} (9,462 samples, 12.41%)</title><rect x="65.0951%" y="373" width="12.4092%" height="15" fill="rgb(210,209,22)" fg:x="49635" fg:w="9462"/><text x="65.3451%" y="383.50">day1::day16_part2::..</text></g><g><title>day1::day16_part2::Player::to_string (8,974 samples, 11.77%)</title><rect x="65.7351%" y="357" width="11.7692%" height="15" fill="rgb(232,118,20)" fg:x="50123" fg:w="8974"/><text x="65.9851%" y="367.50">day1::day16_part2..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (852 samples, 1.12%)</title><rect x="76.3869%" y="341" width="1.1174%" height="15" fill="rgb(238,113,42)" fg:x="58245" fg:w="852"/><text x="76.6369%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (845 samples, 1.11%)</title><rect x="76.3961%" y="325" width="1.1082%" height="15" fill="rgb(231,42,5)" fg:x="58252" fg:w="845"/><text x="76.6461%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (625 samples, 0.82%)</title><rect x="76.6846%" y="309" width="0.8197%" height="15" fill="rgb(243,166,24)" fg:x="58472" fg:w="625"/><text x="76.9346%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (619 samples, 0.81%)</title><rect x="76.6925%" y="293" width="0.8118%" height="15" fill="rgb(237,226,12)" fg:x="58478" fg:w="619"/><text x="76.9425%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (403 samples, 0.53%)</title><rect x="76.9757%" y="277" width="0.5285%" height="15" fill="rgb(229,133,24)" fg:x="58694" fg:w="403"/><text x="77.2257%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (24 samples, 0.03%)</title><rect x="77.4728%" y="261" width="0.0315%" height="15" fill="rgb(238,33,43)" fg:x="59073" fg:w="24"/><text x="77.7228%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,026 samples, 14.46%)</title><rect x="63.0898%" y="421" width="14.4603%" height="15" fill="rgb(227,59,38)" fg:x="48106" fg:w="11026"/><text x="63.3398%" y="431.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (10,966 samples, 14.38%)</title><rect x="63.1685%" y="405" width="14.3816%" height="15" fill="rgb(230,97,0)" fg:x="48166" fg:w="10966"/><text x="63.4185%" y="415.50">core::iter::traits::it..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;core::option::Option&lt;day1::day16_part2::Player&gt;,alloc::string::String,(),day1::day16_part2::get_key::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;,day1::day16_part2::get_key::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (35 samples, 0.05%)</title><rect x="77.5043%" y="389" width="0.0459%" height="15" fill="rgb(250,173,50)" fg:x="59097" fg:w="35"/><text x="77.7543%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;,day1::day16_part2::get_key::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (28 samples, 0.04%)</title><rect x="77.5134%" y="373" width="0.0367%" height="15" fill="rgb(240,15,50)" fg:x="59104" fg:w="28"/><text x="77.7634%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;core::option::Option&lt;day1::day16_part2::Player&gt;&gt;,day1::day16_part2::get_key::{{closure}}&gt;&gt;::{{closure}}&gt; (24 samples, 0.03%)</title><rect x="77.5187%" y="357" width="0.0315%" height="15" fill="rgb(221,93,22)" fg:x="59108" fg:w="24"/><text x="77.7687%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (23 samples, 0.03%)</title><rect x="77.5200%" y="341" width="0.0302%" height="15" fill="rgb(245,180,53)" fg:x="59109" fg:w="23"/><text x="77.7700%" y="351.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (23 samples, 0.03%)</title><rect x="77.5200%" y="325" width="0.0302%" height="15" fill="rgb(231,88,51)" fg:x="59109" fg:w="23"/><text x="77.7700%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11,570 samples, 15.17%)</title><rect x="62.4157%" y="469" width="15.1738%" height="15" fill="rgb(240,58,21)" fg:x="47592" fg:w="11570"/><text x="62.6657%" y="479.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11,554 samples, 15.15%)</title><rect x="62.4367%" y="453" width="15.1528%" height="15" fill="rgb(237,21,10)" fg:x="47608" fg:w="11554"/><text x="62.6867%" y="463.50">alloc::vec::Vec&lt;T,A&gt;::e..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11,151 samples, 14.62%)</title><rect x="62.9652%" y="437" width="14.6243%" height="15" fill="rgb(218,43,11)" fg:x="48011" fg:w="11151"/><text x="63.2152%" y="447.50">core::iter::traits::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (30 samples, 0.04%)</title><rect x="77.5502%" y="421" width="0.0393%" height="15" fill="rgb(218,221,29)" fg:x="59132" fg:w="30"/><text x="77.8002%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (146 samples, 0.19%)</title><rect x="77.6157%" y="453" width="0.1915%" height="15" fill="rgb(214,118,42)" fg:x="59182" fg:w="146"/><text x="77.8657%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (167 samples, 0.22%)</title><rect x="77.5895%" y="469" width="0.2190%" height="15" fill="rgb(251,200,26)" fg:x="59162" fg:w="167"/><text x="77.8395%" y="479.50"></text></g><g><title>__GI___libc_malloc (59 samples, 0.08%)</title><rect x="78.1311%" y="357" width="0.0774%" height="15" fill="rgb(237,101,39)" fg:x="59575" fg:w="59"/><text x="78.3811%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::align (12 samples, 0.02%)</title><rect x="78.2177%" y="357" width="0.0157%" height="15" fill="rgb(251,117,11)" fg:x="59641" fg:w="12"/><text x="78.4677%" y="367.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.13%)</title><rect x="78.1075%" y="373" width="0.1272%" height="15" fill="rgb(216,223,23)" fg:x="59557" fg:w="97"/><text x="78.3575%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (88 samples, 0.12%)</title><rect x="78.3462%" y="341" width="0.1154%" height="15" fill="rgb(251,54,12)" fg:x="59739" fg:w="88"/><text x="78.5962%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (60 samples, 0.08%)</title><rect x="78.3830%" y="325" width="0.0787%" height="15" fill="rgb(254,176,54)" fg:x="59767" fg:w="60"/><text x="78.6330%" y="335.50"></text></g><g><title>core::ptr::invalid_mut (11 samples, 0.01%)</title><rect x="78.4616%" y="325" width="0.0144%" height="15" fill="rgb(210,32,8)" fg:x="59827" fg:w="11"/><text x="78.7116%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (193 samples, 0.25%)</title><rect x="78.2426%" y="373" width="0.2531%" height="15" fill="rgb(235,52,38)" fg:x="59660" fg:w="193"/><text x="78.4926%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (183 samples, 0.24%)</title><rect x="78.2557%" y="357" width="0.2400%" height="15" fill="rgb(231,4,44)" fg:x="59670" fg:w="183"/><text x="78.5057%" y="367.50"></text></g><g><title>core::ptr::null_mut (26 samples, 0.03%)</title><rect x="78.4616%" y="341" width="0.0341%" height="15" fill="rgb(249,2,32)" fg:x="59827" fg:w="26"/><text x="78.7116%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (15 samples, 0.02%)</title><rect x="78.4761%" y="325" width="0.0197%" height="15" fill="rgb(224,65,26)" fg:x="59838" fg:w="15"/><text x="78.7261%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (388 samples, 0.51%)</title><rect x="78.0105%" y="405" width="0.5089%" height="15" fill="rgb(250,73,40)" fg:x="59483" fg:w="388"/><text x="78.2605%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (385 samples, 0.50%)</title><rect x="78.0144%" y="389" width="0.5049%" height="15" fill="rgb(253,177,16)" fg:x="59486" fg:w="385"/><text x="78.2644%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (18 samples, 0.02%)</title><rect x="78.4957%" y="373" width="0.0236%" height="15" fill="rgb(217,32,34)" fg:x="59853" fg:w="18"/><text x="78.7457%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (18 samples, 0.02%)</title><rect x="78.4957%" y="357" width="0.0236%" height="15" fill="rgb(212,7,10)" fg:x="59853" fg:w="18"/><text x="78.7457%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.02%)</title><rect x="78.4957%" y="341" width="0.0236%" height="15" fill="rgb(245,89,8)" fg:x="59853" fg:w="18"/><text x="78.7457%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (10 samples, 0.01%)</title><rect x="78.7934%" y="373" width="0.0131%" height="15" fill="rgb(237,16,53)" fg:x="60080" fg:w="10"/><text x="79.0434%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (223 samples, 0.29%)</title><rect x="78.5220%" y="405" width="0.2925%" height="15" fill="rgb(250,204,30)" fg:x="59873" fg:w="223"/><text x="78.7720%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (203 samples, 0.27%)</title><rect x="78.5482%" y="389" width="0.2662%" height="15" fill="rgb(208,77,27)" fg:x="59893" fg:w="203"/><text x="78.7982%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (19 samples, 0.02%)</title><rect x="78.8144%" y="405" width="0.0249%" height="15" fill="rgb(250,204,28)" fg:x="60096" fg:w="19"/><text x="79.0644%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12,638 samples, 16.57%)</title><rect x="62.2951%" y="501" width="16.5744%" height="15" fill="rgb(244,63,21)" fg:x="47500" fg:w="12638"/><text x="62.5451%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12,614 samples, 16.54%)</title><rect x="62.3266%" y="485" width="16.5430%" height="15" fill="rgb(236,85,44)" fg:x="47524" fg:w="12614"/><text x="62.5766%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (809 samples, 1.06%)</title><rect x="77.8085%" y="469" width="1.0610%" height="15" fill="rgb(215,98,4)" fg:x="59329" fg:w="809"/><text x="78.0585%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (809 samples, 1.06%)</title><rect x="77.8085%" y="453" width="1.0610%" height="15" fill="rgb(235,38,11)" fg:x="59329" fg:w="809"/><text x="78.0585%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (806 samples, 1.06%)</title><rect x="77.8125%" y="437" width="1.0570%" height="15" fill="rgb(254,186,25)" fg:x="59332" fg:w="806"/><text x="78.0625%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (806 samples, 1.06%)</title><rect x="77.8125%" y="421" width="1.0570%" height="15" fill="rgb(225,55,31)" fg:x="59332" fg:w="806"/><text x="78.0625%" y="431.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (23 samples, 0.03%)</title><rect x="78.8393%" y="405" width="0.0302%" height="15" fill="rgb(211,15,21)" fg:x="60115" fg:w="23"/><text x="79.0893%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12,735 samples, 16.70%)</title><rect x="62.1692%" y="533" width="16.7016%" height="15" fill="rgb(215,187,41)" fg:x="47404" fg:w="12735"/><text x="62.4192%" y="543.50">core::iter::traits::iterat..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12,700 samples, 16.66%)</title><rect x="62.2151%" y="517" width="16.6557%" height="15" fill="rgb(248,69,32)" fg:x="47439" fg:w="12700"/><text x="62.4651%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as cor..</text></g><g><title>core::iter::traits::iterator::Iterator::map (13 samples, 0.02%)</title><rect x="78.8708%" y="533" width="0.0170%" height="15" fill="rgb(252,102,52)" fg:x="60139" fg:w="13"/><text x="79.1208%" y="543.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (11 samples, 0.01%)</title><rect x="78.8734%" y="517" width="0.0144%" height="15" fill="rgb(253,140,32)" fg:x="60141" fg:w="11"/><text x="79.1234%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (96 samples, 0.13%)</title><rect x="79.0282%" y="453" width="0.1259%" height="15" fill="rgb(216,56,42)" fg:x="60259" fg:w="96"/><text x="79.2782%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (66 samples, 0.09%)</title><rect x="79.0675%" y="437" width="0.0866%" height="15" fill="rgb(216,184,14)" fg:x="60289" fg:w="66"/><text x="79.3175%" y="447.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="79.1541%" y="437" width="0.0105%" height="15" fill="rgb(237,187,27)" fg:x="60355" fg:w="8"/><text x="79.4041%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (232 samples, 0.30%)</title><rect x="78.8918%" y="485" width="0.3043%" height="15" fill="rgb(219,65,3)" fg:x="60155" fg:w="232"/><text x="79.1418%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (230 samples, 0.30%)</title><rect x="78.8944%" y="469" width="0.3016%" height="15" fill="rgb(245,83,25)" fg:x="60157" fg:w="230"/><text x="79.1444%" y="479.50"></text></g><g><title>core::ptr::null_mut (32 samples, 0.04%)</title><rect x="79.1541%" y="453" width="0.0420%" height="15" fill="rgb(214,205,45)" fg:x="60355" fg:w="32"/><text x="79.4041%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (24 samples, 0.03%)</title><rect x="79.1646%" y="437" width="0.0315%" height="15" fill="rgb(241,20,18)" fg:x="60363" fg:w="24"/><text x="79.4146%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (245 samples, 0.32%)</title><rect x="78.8918%" y="501" width="0.3213%" height="15" fill="rgb(232,163,23)" fg:x="60155" fg:w="245"/><text x="79.1418%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (13 samples, 0.02%)</title><rect x="79.1961%" y="485" width="0.0170%" height="15" fill="rgb(214,5,46)" fg:x="60387" fg:w="13"/><text x="79.4461%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (13 samples, 0.02%)</title><rect x="79.1961%" y="469" width="0.0170%" height="15" fill="rgb(229,78,17)" fg:x="60387" fg:w="13"/><text x="79.4461%" y="479.50"></text></g><g><title>__GI___libc_free (9 samples, 0.01%)</title><rect x="79.3416%" y="437" width="0.0118%" height="15" fill="rgb(248,89,10)" fg:x="60498" fg:w="9"/><text x="79.5916%" y="447.50"></text></g><g><title>_int_free (31 samples, 0.04%)</title><rect x="79.3639%" y="437" width="0.0407%" height="15" fill="rgb(248,54,15)" fg:x="60515" fg:w="31"/><text x="79.6139%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (102 samples, 0.13%)</title><rect x="79.2748%" y="469" width="0.1338%" height="15" fill="rgb(223,116,6)" fg:x="60447" fg:w="102"/><text x="79.5248%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (73 samples, 0.10%)</title><rect x="79.3128%" y="453" width="0.0957%" height="15" fill="rgb(205,125,38)" fg:x="60476" fg:w="73"/><text x="79.5628%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (14 samples, 0.02%)</title><rect x="79.6774%" y="421" width="0.0184%" height="15" fill="rgb(251,78,38)" fg:x="60754" fg:w="14"/><text x="79.9274%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (151 samples, 0.20%)</title><rect x="79.4990%" y="437" width="0.1980%" height="15" fill="rgb(253,78,28)" fg:x="60618" fg:w="151"/><text x="79.7490%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (156 samples, 0.20%)</title><rect x="79.4938%" y="453" width="0.2046%" height="15" fill="rgb(209,120,3)" fg:x="60614" fg:w="156"/><text x="79.7438%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (627 samples, 0.82%)</title><rect x="78.8879%" y="533" width="0.8223%" height="15" fill="rgb(238,229,9)" fg:x="60152" fg:w="627"/><text x="79.1379%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (625 samples, 0.82%)</title><rect x="78.8905%" y="517" width="0.8197%" height="15" fill="rgb(253,159,18)" fg:x="60154" fg:w="625"/><text x="79.1405%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (379 samples, 0.50%)</title><rect x="79.2131%" y="501" width="0.4970%" height="15" fill="rgb(244,42,34)" fg:x="60400" fg:w="379"/><text x="79.4631%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (367 samples, 0.48%)</title><rect x="79.2289%" y="485" width="0.4813%" height="15" fill="rgb(224,8,7)" fg:x="60412" fg:w="367"/><text x="79.4789%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (230 samples, 0.30%)</title><rect x="79.4085%" y="469" width="0.3016%" height="15" fill="rgb(210,201,45)" fg:x="60549" fg:w="230"/><text x="79.6585%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (9 samples, 0.01%)</title><rect x="79.6984%" y="453" width="0.0118%" height="15" fill="rgb(252,185,21)" fg:x="60770" fg:w="9"/><text x="79.9484%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (74 samples, 0.10%)</title><rect x="79.9593%" y="469" width="0.0970%" height="15" fill="rgb(223,131,1)" fg:x="60969" fg:w="74"/><text x="80.2093%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (55 samples, 0.07%)</title><rect x="79.9843%" y="453" width="0.0721%" height="15" fill="rgb(245,141,16)" fg:x="60988" fg:w="55"/><text x="80.2343%" y="463.50"></text></g><g><title>core::ptr::invalid_mut (18 samples, 0.02%)</title><rect x="80.0564%" y="453" width="0.0236%" height="15" fill="rgb(229,55,45)" fg:x="61043" fg:w="18"/><text x="80.3064%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (194 samples, 0.25%)</title><rect x="79.8452%" y="501" width="0.2544%" height="15" fill="rgb(208,92,15)" fg:x="60882" fg:w="194"/><text x="80.0952%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (188 samples, 0.25%)</title><rect x="79.8531%" y="485" width="0.2466%" height="15" fill="rgb(234,185,47)" fg:x="60888" fg:w="188"/><text x="80.1031%" y="495.50"></text></g><g><title>core::ptr::null_mut (33 samples, 0.04%)</title><rect x="80.0564%" y="469" width="0.0433%" height="15" fill="rgb(253,104,50)" fg:x="61043" fg:w="33"/><text x="80.3064%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (15 samples, 0.02%)</title><rect x="80.0800%" y="453" width="0.0197%" height="15" fill="rgb(205,70,7)" fg:x="61061" fg:w="15"/><text x="80.3300%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10 samples, 0.01%)</title><rect x="80.2846%" y="421" width="0.0131%" height="15" fill="rgb(240,178,43)" fg:x="61217" fg:w="10"/><text x="80.5346%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (144 samples, 0.19%)</title><rect x="80.4866%" y="405" width="0.1889%" height="15" fill="rgb(214,112,2)" fg:x="61371" fg:w="144"/><text x="80.7366%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (103 samples, 0.14%)</title><rect x="80.5403%" y="389" width="0.1351%" height="15" fill="rgb(206,46,17)" fg:x="61412" fg:w="103"/><text x="80.7903%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.01%)</title><rect x="80.6754%" y="389" width="0.0105%" height="15" fill="rgb(225,220,16)" fg:x="61515" fg:w="8"/><text x="80.9254%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (334 samples, 0.44%)</title><rect x="80.2702%" y="437" width="0.4380%" height="15" fill="rgb(238,65,40)" fg:x="61206" fg:w="334"/><text x="80.5202%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (313 samples, 0.41%)</title><rect x="80.2977%" y="421" width="0.4105%" height="15" fill="rgb(230,151,21)" fg:x="61227" fg:w="313"/><text x="80.5477%" y="431.50"></text></g><g><title>core::ptr::null_mut (25 samples, 0.03%)</title><rect x="80.6754%" y="405" width="0.0328%" height="15" fill="rgb(218,58,49)" fg:x="61515" fg:w="25"/><text x="80.9254%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (17 samples, 0.02%)</title><rect x="80.6859%" y="389" width="0.0223%" height="15" fill="rgb(219,179,14)" fg:x="61523" fg:w="17"/><text x="80.9359%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (363 samples, 0.48%)</title><rect x="80.2466%" y="453" width="0.4761%" height="15" fill="rgb(223,72,1)" fg:x="61188" fg:w="363"/><text x="80.4966%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (11 samples, 0.01%)</title><rect x="80.7082%" y="437" width="0.0144%" height="15" fill="rgb(238,126,10)" fg:x="61540" fg:w="11"/><text x="80.9582%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (11 samples, 0.01%)</title><rect x="80.7082%" y="421" width="0.0144%" height="15" fill="rgb(224,206,38)" fg:x="61540" fg:w="11"/><text x="80.9582%" y="431.50"></text></g><g><title>__rust_dealloc (8 samples, 0.01%)</title><rect x="80.9325%" y="389" width="0.0105%" height="15" fill="rgb(212,201,54)" fg:x="61711" fg:w="8"/><text x="81.1825%" y="399.50"></text></g><g><title>_int_free (66 samples, 0.09%)</title><rect x="80.9430%" y="389" width="0.0866%" height="15" fill="rgb(218,154,48)" fg:x="61719" fg:w="66"/><text x="81.1930%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (137 samples, 0.18%)</title><rect x="80.8656%" y="405" width="0.1797%" height="15" fill="rgb(232,93,24)" fg:x="61660" fg:w="137"/><text x="81.1156%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::align (12 samples, 0.02%)</title><rect x="81.0295%" y="389" width="0.0157%" height="15" fill="rgb(245,30,21)" fg:x="61785" fg:w="12"/><text x="81.2795%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (187 samples, 0.25%)</title><rect x="80.8013%" y="421" width="0.2452%" height="15" fill="rgb(242,148,29)" fg:x="61611" fg:w="187"/><text x="81.0513%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.04%)</title><rect x="81.1803%" y="405" width="0.0354%" height="15" fill="rgb(244,153,54)" fg:x="61900" fg:w="27"/><text x="81.4303%" y="415.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (23 samples, 0.03%)</title><rect x="81.1856%" y="389" width="0.0302%" height="15" fill="rgb(252,87,22)" fg:x="61904" fg:w="23"/><text x="81.4356%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (13 samples, 0.02%)</title><rect x="81.6092%" y="373" width="0.0170%" height="15" fill="rgb(210,51,29)" fg:x="62227" fg:w="13"/><text x="81.8592%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (20 samples, 0.03%)</title><rect x="81.6262%" y="373" width="0.0262%" height="15" fill="rgb(242,136,47)" fg:x="62240" fg:w="20"/><text x="81.8762%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (337 samples, 0.44%)</title><rect x="81.2197%" y="389" width="0.4420%" height="15" fill="rgb(238,68,4)" fg:x="61930" fg:w="337"/><text x="81.4697%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (345 samples, 0.45%)</title><rect x="81.2157%" y="405" width="0.4525%" height="15" fill="rgb(242,161,30)" fg:x="61927" fg:w="345"/><text x="81.4657%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,251 samples, 1.64%)</title><rect x="80.0997%" y="501" width="1.6407%" height="15" fill="rgb(218,58,44)" fg:x="61076" fg:w="1251"/><text x="80.3497%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,164 samples, 1.53%)</title><rect x="80.2138%" y="485" width="1.5266%" height="15" fill="rgb(252,125,32)" fg:x="61163" fg:w="1164"/><text x="80.4638%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,154 samples, 1.51%)</title><rect x="80.2269%" y="469" width="1.5134%" height="15" fill="rgb(219,178,0)" fg:x="61173" fg:w="1154"/><text x="80.4769%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (776 samples, 1.02%)</title><rect x="80.7226%" y="453" width="1.0177%" height="15" fill="rgb(213,152,7)" fg:x="61551" fg:w="776"/><text x="80.9726%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (764 samples, 1.00%)</title><rect x="80.7384%" y="437" width="1.0020%" height="15" fill="rgb(249,109,34)" fg:x="61563" fg:w="764"/><text x="80.9884%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (529 samples, 0.69%)</title><rect x="81.0466%" y="421" width="0.6938%" height="15" fill="rgb(232,96,21)" fg:x="61798" fg:w="529"/><text x="81.2966%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (50 samples, 0.07%)</title><rect x="81.6748%" y="405" width="0.0656%" height="15" fill="rgb(228,27,39)" fg:x="62277" fg:w="50"/><text x="81.9248%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,486 samples, 1.95%)</title><rect x="79.8033%" y="517" width="1.9489%" height="15" fill="rgb(211,182,52)" fg:x="60850" fg:w="1486"/><text x="80.0533%" y="527.50">&lt;..</text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.01%)</title><rect x="81.7403%" y="501" width="0.0118%" height="15" fill="rgb(234,178,38)" fg:x="62327" fg:w="9"/><text x="81.9903%" y="511.50"></text></g><g><title>_int_free (28 samples, 0.04%)</title><rect x="81.9436%" y="453" width="0.0367%" height="15" fill="rgb(221,111,3)" fg:x="62482" fg:w="28"/><text x="82.1936%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.14%)</title><rect x="81.8492%" y="485" width="0.1351%" height="15" fill="rgb(228,175,21)" fg:x="62410" fg:w="103"/><text x="82.0992%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.09%)</title><rect x="81.8925%" y="469" width="0.0918%" height="15" fill="rgb(228,174,43)" fg:x="62443" fg:w="70"/><text x="82.1425%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (13 samples, 0.02%)</title><rect x="82.2911%" y="437" width="0.0170%" height="15" fill="rgb(211,191,0)" fg:x="62747" fg:w="13"/><text x="82.5411%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (159 samples, 0.21%)</title><rect x="82.1036%" y="469" width="0.2085%" height="15" fill="rgb(253,117,3)" fg:x="62604" fg:w="159"/><text x="82.3536%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (159 samples, 0.21%)</title><rect x="82.1036%" y="453" width="0.2085%" height="15" fill="rgb(241,127,19)" fg:x="62604" fg:w="159"/><text x="82.3536%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,994 samples, 2.62%)</title><rect x="79.7102%" y="533" width="2.6151%" height="15" fill="rgb(218,103,12)" fg:x="60779" fg:w="1994"/><text x="79.9602%" y="543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (437 samples, 0.57%)</title><rect x="81.7521%" y="517" width="0.5731%" height="15" fill="rgb(236,214,43)" fg:x="62336" fg:w="437"/><text x="82.0021%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (428 samples, 0.56%)</title><rect x="81.7639%" y="501" width="0.5613%" height="15" fill="rgb(244,144,19)" fg:x="62345" fg:w="428"/><text x="82.0139%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (260 samples, 0.34%)</title><rect x="81.9843%" y="485" width="0.3410%" height="15" fill="rgb(246,188,10)" fg:x="62513" fg:w="260"/><text x="82.2343%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (58 samples, 0.08%)</title><rect x="82.4538%" y="485" width="0.0761%" height="15" fill="rgb(212,193,33)" fg:x="62871" fg:w="58"/><text x="82.7038%" y="495.50"></text></g><g><title>core::ptr::invalid (9 samples, 0.01%)</title><rect x="82.5298%" y="469" width="0.0118%" height="15" fill="rgb(241,51,29)" fg:x="62929" fg:w="9"/><text x="82.7798%" y="479.50"></text></g><g><title>day1::day16_part2::get_key (29,251 samples, 38.36%)</title><rect x="44.2466%" y="549" width="38.3620%" height="15" fill="rgb(211,58,19)" fg:x="33738" fg:w="29251"/><text x="44.4966%" y="559.50">day1::day16_part2::get_key</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (216 samples, 0.28%)</title><rect x="82.3252%" y="533" width="0.2833%" height="15" fill="rgb(229,111,26)" fg:x="62773" fg:w="216"/><text x="82.5752%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (212 samples, 0.28%)</title><rect x="82.3305%" y="517" width="0.2780%" height="15" fill="rgb(213,115,40)" fg:x="62777" fg:w="212"/><text x="82.5805%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (197 samples, 0.26%)</title><rect x="82.3502%" y="501" width="0.2584%" height="15" fill="rgb(209,56,44)" fg:x="62792" fg:w="197"/><text x="82.6002%" y="511.50"></text></g><g><title>core::ptr::null (60 samples, 0.08%)</title><rect x="82.5298%" y="485" width="0.0787%" height="15" fill="rgb(230,108,32)" fg:x="62929" fg:w="60"/><text x="82.7798%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (51 samples, 0.07%)</title><rect x="82.5416%" y="469" width="0.0669%" height="15" fill="rgb(216,165,31)" fg:x="62938" fg:w="51"/><text x="82.7916%" y="479.50"></text></g><g><title>day1::day16_part2::is_bit_set (32 samples, 0.04%)</title><rect x="82.6085%" y="549" width="0.0420%" height="15" fill="rgb(218,122,21)" fg:x="62989" fg:w="32"/><text x="82.8585%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (117 samples, 0.15%)</title><rect x="83.0557%" y="421" width="0.1534%" height="15" fill="rgb(223,224,47)" fg:x="63330" fg:w="117"/><text x="83.3057%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.02%)</title><rect x="83.6210%" y="405" width="0.0249%" height="15" fill="rgb(238,102,44)" fg:x="63761" fg:w="19"/><text x="83.8710%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (536 samples, 0.70%)</title><rect x="82.9469%" y="469" width="0.7030%" height="15" fill="rgb(236,46,40)" fg:x="63247" fg:w="536"/><text x="83.1969%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (515 samples, 0.68%)</title><rect x="82.9744%" y="453" width="0.6754%" height="15" fill="rgb(247,202,50)" fg:x="63268" fg:w="515"/><text x="83.2244%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (515 samples, 0.68%)</title><rect x="82.9744%" y="437" width="0.6754%" height="15" fill="rgb(209,99,20)" fg:x="63268" fg:w="515"/><text x="83.2244%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (336 samples, 0.44%)</title><rect x="83.2092%" y="421" width="0.4407%" height="15" fill="rgb(252,27,34)" fg:x="63447" fg:w="336"/><text x="83.4592%" y="431.50"></text></g><g><title>[libc-2.31.so] (94 samples, 0.12%)</title><rect x="83.6774%" y="453" width="0.1233%" height="15" fill="rgb(215,206,23)" fg:x="63804" fg:w="94"/><text x="83.9274%" y="463.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.09%)</title><rect x="83.8059%" y="437" width="0.0892%" height="15" fill="rgb(212,135,36)" fg:x="63902" fg:w="68"/><text x="84.0559%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (230 samples, 0.30%)</title><rect x="83.6498%" y="469" width="0.3016%" height="15" fill="rgb(240,189,1)" fg:x="63783" fg:w="230"/><text x="83.8998%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (115 samples, 0.15%)</title><rect x="83.8007%" y="453" width="0.1508%" height="15" fill="rgb(242,56,20)" fg:x="63898" fg:w="115"/><text x="84.0507%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (43 samples, 0.06%)</title><rect x="83.8951%" y="437" width="0.0564%" height="15" fill="rgb(247,132,33)" fg:x="63970" fg:w="43"/><text x="84.1451%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (72 samples, 0.09%)</title><rect x="84.1128%" y="373" width="0.0944%" height="15" fill="rgb(208,149,11)" fg:x="64136" fg:w="72"/><text x="84.3628%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (47 samples, 0.06%)</title><rect x="84.1456%" y="357" width="0.0616%" height="15" fill="rgb(211,33,11)" fg:x="64161" fg:w="47"/><text x="84.3956%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (191 samples, 0.25%)</title><rect x="83.9816%" y="405" width="0.2505%" height="15" fill="rgb(221,29,38)" fg:x="64036" fg:w="191"/><text x="84.2316%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (190 samples, 0.25%)</title><rect x="83.9830%" y="389" width="0.2492%" height="15" fill="rgb(206,182,49)" fg:x="64037" fg:w="190"/><text x="84.2330%" y="399.50"></text></g><g><title>core::ptr::null_mut (19 samples, 0.02%)</title><rect x="84.2072%" y="373" width="0.0249%" height="15" fill="rgb(216,140,1)" fg:x="64208" fg:w="19"/><text x="84.4572%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.02%)</title><rect x="84.2111%" y="357" width="0.0210%" height="15" fill="rgb(232,57,40)" fg:x="64211" fg:w="16"/><text x="84.4611%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (203 samples, 0.27%)</title><rect x="83.9751%" y="421" width="0.2662%" height="15" fill="rgb(224,186,18)" fg:x="64031" fg:w="203"/><text x="84.2251%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (205 samples, 0.27%)</title><rect x="83.9738%" y="437" width="0.2689%" height="15" fill="rgb(215,121,11)" fg:x="64030" fg:w="205"/><text x="84.2238%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (353 samples, 0.46%)</title><rect x="84.4643%" y="357" width="0.4630%" height="15" fill="rgb(245,147,10)" fg:x="64404" fg:w="353"/><text x="84.7143%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.02%)</title><rect x="84.9062%" y="341" width="0.0210%" height="15" fill="rgb(238,153,13)" fg:x="64741" fg:w="16"/><text x="85.1562%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.02%)</title><rect x="85.0413%" y="341" width="0.0157%" height="15" fill="rgb(233,108,0)" fg:x="64844" fg:w="12"/><text x="85.2913%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (10 samples, 0.01%)</title><rect x="85.0439%" y="325" width="0.0131%" height="15" fill="rgb(212,157,17)" fg:x="64846" fg:w="10"/><text x="85.2939%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (112 samples, 0.15%)</title><rect x="84.9285%" y="357" width="0.1469%" height="15" fill="rgb(225,213,38)" fg:x="64758" fg:w="112"/><text x="85.1785%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.02%)</title><rect x="85.0570%" y="341" width="0.0184%" height="15" fill="rgb(248,16,11)" fg:x="64856" fg:w="14"/><text x="85.3070%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.02%)</title><rect x="85.0570%" y="325" width="0.0184%" height="15" fill="rgb(241,33,4)" fg:x="64856" fg:w="14"/><text x="85.3070%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="85.0754%" y="357" width="0.0184%" height="15" fill="rgb(222,26,43)" fg:x="64870" fg:w="14"/><text x="85.3254%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (646 samples, 0.85%)</title><rect x="84.2584%" y="373" width="0.8472%" height="15" fill="rgb(243,29,36)" fg:x="64247" fg:w="646"/><text x="84.5084%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.01%)</title><rect x="85.0938%" y="357" width="0.0118%" height="15" fill="rgb(241,9,27)" fg:x="64884" fg:w="9"/><text x="85.3438%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.01%)</title><rect x="85.0938%" y="341" width="0.0118%" height="15" fill="rgb(205,117,26)" fg:x="64884" fg:w="9"/><text x="85.3438%" y="351.50"></text></g><g><title>core::cmp::min (68 samples, 0.09%)</title><rect x="85.1882%" y="341" width="0.0892%" height="15" fill="rgb(209,80,39)" fg:x="64956" fg:w="68"/><text x="85.4382%" y="351.50"></text></g><g><title>core::cmp::Ord::min (65 samples, 0.09%)</title><rect x="85.1921%" y="325" width="0.0852%" height="15" fill="rgb(239,155,6)" fg:x="64959" fg:w="65"/><text x="85.4421%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (27 samples, 0.04%)</title><rect x="85.2420%" y="309" width="0.0354%" height="15" fill="rgb(212,104,12)" fg:x="64997" fg:w="27"/><text x="85.4920%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u8 (198 samples, 0.26%)</title><rect x="85.1056%" y="373" width="0.2597%" height="15" fill="rgb(234,204,3)" fg:x="64893" fg:w="198"/><text x="85.3556%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (196 samples, 0.26%)</title><rect x="85.1082%" y="357" width="0.2570%" height="15" fill="rgb(251,218,7)" fg:x="64895" fg:w="196"/><text x="85.3582%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (67 samples, 0.09%)</title><rect x="85.2774%" y="341" width="0.0879%" height="15" fill="rgb(221,81,32)" fg:x="65024" fg:w="67"/><text x="85.5274%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (26 samples, 0.03%)</title><rect x="85.3311%" y="325" width="0.0341%" height="15" fill="rgb(214,152,26)" fg:x="65065" fg:w="26"/><text x="85.5811%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (26 samples, 0.03%)</title><rect x="85.3311%" y="309" width="0.0341%" height="15" fill="rgb(223,22,3)" fg:x="65065" fg:w="26"/><text x="85.5811%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1,906 samples, 2.50%)</title><rect x="82.8734%" y="501" width="2.4997%" height="15" fill="rgb(207,174,7)" fg:x="63191" fg:w="1906"/><text x="83.1234%" y="511.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (1,905 samples, 2.50%)</title><rect x="82.8748%" y="485" width="2.4984%" height="15" fill="rgb(224,19,52)" fg:x="63192" fg:w="1905"/><text x="83.1248%" y="495.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,084 samples, 1.42%)</title><rect x="83.9515%" y="469" width="1.4216%" height="15" fill="rgb(228,24,14)" fg:x="64013" fg:w="1084"/><text x="84.2015%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,077 samples, 1.41%)</title><rect x="83.9607%" y="453" width="1.4125%" height="15" fill="rgb(230,153,43)" fg:x="64020" fg:w="1077"/><text x="84.2107%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (862 samples, 1.13%)</title><rect x="84.2426%" y="437" width="1.1305%" height="15" fill="rgb(231,106,12)" fg:x="64235" fg:w="862"/><text x="84.4926%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (862 samples, 1.13%)</title><rect x="84.2426%" y="421" width="1.1305%" height="15" fill="rgb(215,92,2)" fg:x="64235" fg:w="862"/><text x="84.4926%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (857 samples, 1.12%)</title><rect x="84.2492%" y="405" width="1.1239%" height="15" fill="rgb(249,143,25)" fg:x="64240" fg:w="857"/><text x="84.4992%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (857 samples, 1.12%)</title><rect x="84.2492%" y="389" width="1.1239%" height="15" fill="rgb(252,7,35)" fg:x="64240" fg:w="857"/><text x="84.4992%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.02%)</title><rect x="85.4190%" y="453" width="0.0170%" height="15" fill="rgb(216,69,40)" fg:x="65132" fg:w="13"/><text x="85.6690%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.02%)</title><rect x="85.4203%" y="437" width="0.0157%" height="15" fill="rgb(240,36,33)" fg:x="65133" fg:w="12"/><text x="85.6703%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (31 samples, 0.04%)</title><rect x="85.3967%" y="485" width="0.0407%" height="15" fill="rgb(231,128,14)" fg:x="65115" fg:w="31"/><text x="85.6467%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (16 samples, 0.02%)</title><rect x="85.4164%" y="469" width="0.0210%" height="15" fill="rgb(245,143,14)" fg:x="65130" fg:w="16"/><text x="85.6664%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (23 samples, 0.03%)</title><rect x="85.4675%" y="453" width="0.0302%" height="15" fill="rgb(222,130,28)" fg:x="65169" fg:w="23"/><text x="85.7175%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (26 samples, 0.03%)</title><rect x="85.4662%" y="469" width="0.0341%" height="15" fill="rgb(212,10,48)" fg:x="65168" fg:w="26"/><text x="85.7162%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.03%)</title><rect x="85.7823%" y="437" width="0.0275%" height="15" fill="rgb(254,118,45)" fg:x="65409" fg:w="21"/><text x="86.0323%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.19%)</title><rect x="85.6866%" y="453" width="0.1875%" height="15" fill="rgb(228,6,45)" fg:x="65336" fg:w="143"/><text x="85.9366%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (49 samples, 0.06%)</title><rect x="85.8098%" y="437" width="0.0643%" height="15" fill="rgb(241,18,35)" fg:x="65430" fg:w="49"/><text x="86.0598%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (20 samples, 0.03%)</title><rect x="85.8479%" y="421" width="0.0262%" height="15" fill="rgb(227,214,53)" fg:x="65459" fg:w="20"/><text x="86.0979%" y="431.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (11 samples, 0.01%)</title><rect x="85.9174%" y="421" width="0.0144%" height="15" fill="rgb(224,107,51)" fg:x="65512" fg:w="11"/><text x="86.1674%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,125 samples, 1.48%)</title><rect x="85.9725%" y="357" width="1.4754%" height="15" fill="rgb(248,60,28)" fg:x="65554" fg:w="1125"/><text x="86.2225%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (84 samples, 0.11%)</title><rect x="87.5423%" y="341" width="0.1102%" height="15" fill="rgb(249,101,23)" fg:x="66751" fg:w="84"/><text x="87.7923%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (52 samples, 0.07%)</title><rect x="87.5843%" y="325" width="0.0682%" height="15" fill="rgb(228,51,19)" fg:x="66783" fg:w="52"/><text x="87.8343%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,290 samples, 1.69%)</title><rect x="85.9711%" y="373" width="1.6918%" height="15" fill="rgb(213,20,6)" fg:x="65553" fg:w="1290"/><text x="86.2211%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (164 samples, 0.22%)</title><rect x="87.4479%" y="357" width="0.2151%" height="15" fill="rgb(212,124,10)" fg:x="66679" fg:w="164"/><text x="87.6979%" y="367.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.01%)</title><rect x="87.6525%" y="341" width="0.0105%" height="15" fill="rgb(248,3,40)" fg:x="66835" fg:w="8"/><text x="87.9025%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,326 samples, 1.74%)</title><rect x="85.9370%" y="389" width="1.7390%" height="15" fill="rgb(223,178,23)" fg:x="65527" fg:w="1326"/><text x="86.1870%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.01%)</title><rect x="87.6630%" y="373" width="0.0131%" height="15" fill="rgb(240,132,45)" fg:x="66843" fg:w="10"/><text x="87.9130%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.01%)</title><rect x="87.6630%" y="357" width="0.0131%" height="15" fill="rgb(245,164,36)" fg:x="66843" fg:w="10"/><text x="87.9130%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.01%)</title><rect x="87.6643%" y="341" width="0.0118%" height="15" fill="rgb(231,188,53)" fg:x="66844" fg:w="9"/><text x="87.9143%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1,336 samples, 1.75%)</title><rect x="85.9370%" y="405" width="1.7521%" height="15" fill="rgb(237,198,39)" fg:x="65527" fg:w="1336"/><text x="86.1870%" y="415.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (10 samples, 0.01%)</title><rect x="87.6761%" y="389" width="0.0131%" height="15" fill="rgb(223,120,35)" fg:x="66853" fg:w="10"/><text x="87.9261%" y="399.50"></text></g><g><title>[libc-2.31.so] (606 samples, 0.79%)</title><rect x="87.7757%" y="341" width="0.7948%" height="15" fill="rgb(253,107,49)" fg:x="66929" fg:w="606"/><text x="88.0257%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2,015 samples, 2.64%)</title><rect x="85.9318%" y="421" width="2.6426%" height="15" fill="rgb(216,44,31)" fg:x="65523" fg:w="2015"/><text x="86.1818%" y="431.50">&lt;a..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (675 samples, 0.89%)</title><rect x="87.6892%" y="405" width="0.8852%" height="15" fill="rgb(253,87,21)" fg:x="66863" fg:w="675"/><text x="87.9392%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (667 samples, 0.87%)</title><rect x="87.6997%" y="389" width="0.8748%" height="15" fill="rgb(226,18,2)" fg:x="66871" fg:w="667"/><text x="87.9497%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (666 samples, 0.87%)</title><rect x="87.7010%" y="373" width="0.8734%" height="15" fill="rgb(216,8,46)" fg:x="66872" fg:w="666"/><text x="87.9510%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (659 samples, 0.86%)</title><rect x="87.7102%" y="357" width="0.8643%" height="15" fill="rgb(226,140,39)" fg:x="66879" fg:w="659"/><text x="87.9602%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2,036 samples, 2.67%)</title><rect x="85.9056%" y="437" width="2.6702%" height="15" fill="rgb(221,194,54)" fg:x="65503" fg:w="2036"/><text x="86.1556%" y="447.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (34 samples, 0.04%)</title><rect x="88.5757%" y="437" width="0.0446%" height="15" fill="rgb(213,92,11)" fg:x="67539" fg:w="34"/><text x="88.8257%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (21 samples, 0.03%)</title><rect x="88.5928%" y="421" width="0.0275%" height="15" fill="rgb(229,162,46)" fg:x="67552" fg:w="21"/><text x="88.8428%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.02%)</title><rect x="88.6007%" y="405" width="0.0197%" height="15" fill="rgb(214,111,36)" fg:x="67558" fg:w="15"/><text x="88.8507%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.02%)</title><rect x="88.6007%" y="389" width="0.0197%" height="15" fill="rgb(207,6,21)" fg:x="67558" fg:w="15"/><text x="88.8507%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,149 samples, 2.82%)</title><rect x="85.8741%" y="453" width="2.8184%" height="15" fill="rgb(213,127,38)" fg:x="65479" fg:w="2149"/><text x="86.1241%" y="463.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (55 samples, 0.07%)</title><rect x="88.6203%" y="437" width="0.0721%" height="15" fill="rgb(238,118,32)" fg:x="67573" fg:w="55"/><text x="88.8703%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (47 samples, 0.06%)</title><rect x="88.6308%" y="421" width="0.0616%" height="15" fill="rgb(240,139,39)" fg:x="67581" fg:w="47"/><text x="88.8808%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.02%)</title><rect x="88.6715%" y="405" width="0.0210%" height="15" fill="rgb(235,10,37)" fg:x="67612" fg:w="16"/><text x="88.9215%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.02%)</title><rect x="88.6741%" y="389" width="0.0184%" height="15" fill="rgb(249,171,38)" fg:x="67614" fg:w="14"/><text x="88.9241%" y="399.50"></text></g><g><title>hashbrown::raw::h2 (70 samples, 0.09%)</title><rect x="88.7056%" y="453" width="0.0918%" height="15" fill="rgb(242,144,32)" fg:x="67638" fg:w="70"/><text x="88.9556%" y="463.50"></text></g><g><title>core::cmp::Ord::min (66 samples, 0.09%)</title><rect x="88.7108%" y="437" width="0.0866%" height="15" fill="rgb(217,117,21)" fg:x="67642" fg:w="66"/><text x="88.9608%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (26 samples, 0.03%)</title><rect x="88.7633%" y="421" width="0.0341%" height="15" fill="rgb(249,87,1)" fg:x="67682" fg:w="26"/><text x="89.0133%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (977 samples, 1.28%)</title><rect x="88.7974%" y="453" width="1.2813%" height="15" fill="rgb(248,196,48)" fg:x="67708" fg:w="977"/><text x="89.0474%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (904 samples, 1.19%)</title><rect x="88.8931%" y="437" width="1.1856%" height="15" fill="rgb(251,206,33)" fg:x="67781" fg:w="904"/><text x="89.1431%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (902 samples, 1.18%)</title><rect x="88.8957%" y="421" width="1.1830%" height="15" fill="rgb(232,141,28)" fg:x="67783" fg:w="902"/><text x="89.1457%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="90.0656%" y="405" width="0.0131%" height="15" fill="rgb(209,167,14)" fg:x="68675" fg:w="10"/><text x="90.3156%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="90.0656%" y="389" width="0.0131%" height="15" fill="rgb(225,11,50)" fg:x="68675" fg:w="10"/><text x="90.3156%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="90.0656%" y="373" width="0.0131%" height="15" fill="rgb(209,50,20)" fg:x="68675" fg:w="10"/><text x="90.3156%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="90.0656%" y="357" width="0.0131%" height="15" fill="rgb(212,17,46)" fg:x="68675" fg:w="10"/><text x="90.3156%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="90.0656%" y="341" width="0.0131%" height="15" fill="rgb(216,101,39)" fg:x="68675" fg:w="10"/><text x="90.3156%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="90.0656%" y="325" width="0.0131%" height="15" fill="rgb(212,228,48)" fg:x="68675" fg:w="10"/><text x="90.3156%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="90.0682%" y="309" width="0.0105%" height="15" fill="rgb(250,6,50)" fg:x="68677" fg:w="8"/><text x="90.3182%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="90.0682%" y="293" width="0.0105%" height="15" fill="rgb(250,160,48)" fg:x="68677" fg:w="8"/><text x="90.3182%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (157 samples, 0.21%)</title><rect x="90.1666%" y="437" width="0.2059%" height="15" fill="rgb(244,216,33)" fg:x="68752" fg:w="157"/><text x="90.4166%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (60 samples, 0.08%)</title><rect x="90.2938%" y="421" width="0.0787%" height="15" fill="rgb(207,157,5)" fg:x="68849" fg:w="60"/><text x="90.5438%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (24 samples, 0.03%)</title><rect x="90.3410%" y="405" width="0.0315%" height="15" fill="rgb(228,199,8)" fg:x="68885" fg:w="24"/><text x="90.5910%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (109 samples, 0.14%)</title><rect x="90.3725%" y="437" width="0.1430%" height="15" fill="rgb(227,80,20)" fg:x="68909" fg:w="109"/><text x="90.6225%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (41 samples, 0.05%)</title><rect x="90.4616%" y="421" width="0.0538%" height="15" fill="rgb(222,9,33)" fg:x="68977" fg:w="41"/><text x="90.7116%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (17 samples, 0.02%)</title><rect x="90.4931%" y="405" width="0.0223%" height="15" fill="rgb(239,44,28)" fg:x="69001" fg:w="17"/><text x="90.7431%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (563 samples, 0.74%)</title><rect x="90.0787%" y="453" width="0.7384%" height="15" fill="rgb(249,187,43)" fg:x="68685" fg:w="563"/><text x="90.3287%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (230 samples, 0.30%)</title><rect x="90.5154%" y="437" width="0.3016%" height="15" fill="rgb(216,141,28)" fg:x="69018" fg:w="230"/><text x="90.7654%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (221 samples, 0.29%)</title><rect x="90.5272%" y="421" width="0.2898%" height="15" fill="rgb(230,154,53)" fg:x="69027" fg:w="221"/><text x="90.7772%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x16::new (34 samples, 0.04%)</title><rect x="90.7725%" y="405" width="0.0446%" height="15" fill="rgb(227,82,4)" fg:x="69214" fg:w="34"/><text x="91.0225%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (33 samples, 0.04%)</title><rect x="90.8525%" y="421" width="0.0433%" height="15" fill="rgb(220,107,16)" fg:x="69275" fg:w="33"/><text x="91.1025%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (10 samples, 0.01%)</title><rect x="90.8826%" y="405" width="0.0131%" height="15" fill="rgb(207,187,2)" fg:x="69298" fg:w="10"/><text x="91.1326%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (50 samples, 0.07%)</title><rect x="90.8957%" y="421" width="0.0656%" height="15" fill="rgb(210,162,52)" fg:x="69308" fg:w="50"/><text x="91.1457%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (21 samples, 0.03%)</title><rect x="90.9338%" y="405" width="0.0275%" height="15" fill="rgb(217,216,49)" fg:x="69337" fg:w="21"/><text x="91.1838%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6,419 samples, 8.42%)</title><rect x="82.6584%" y="549" width="8.4184%" height="15" fill="rgb(218,146,49)" fg:x="63027" fg:w="6419"/><text x="82.9084%" y="559.50">std::collect..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6,393 samples, 8.38%)</title><rect x="82.6925%" y="533" width="8.3843%" height="15" fill="rgb(216,55,40)" fg:x="63053" fg:w="6393"/><text x="82.9425%" y="543.50">hashbrown::m..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6,333 samples, 8.31%)</title><rect x="82.7711%" y="517" width="8.3056%" height="15" fill="rgb(208,196,21)" fg:x="63113" fg:w="6333"/><text x="83.0211%" y="527.50">hashbrown::m..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4,349 samples, 5.70%)</title><rect x="85.3731%" y="501" width="5.7036%" height="15" fill="rgb(242,117,42)" fg:x="65097" fg:w="4349"/><text x="85.6231%" y="511.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,300 samples, 5.64%)</title><rect x="85.4374%" y="485" width="5.6393%" height="15" fill="rgb(210,11,23)" fg:x="65146" fg:w="4300"/><text x="85.6874%" y="495.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4,252 samples, 5.58%)</title><rect x="85.5003%" y="469" width="5.5764%" height="15" fill="rgb(217,110,2)" fg:x="65194" fg:w="4252"/><text x="85.7503%" y="479.50">hashbro..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (198 samples, 0.26%)</title><rect x="90.8170%" y="453" width="0.2597%" height="15" fill="rgb(229,77,54)" fg:x="69248" fg:w="198"/><text x="91.0670%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (198 samples, 0.26%)</title><rect x="90.8170%" y="437" width="0.2597%" height="15" fill="rgb(218,53,16)" fg:x="69248" fg:w="198"/><text x="91.0670%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (88 samples, 0.12%)</title><rect x="90.9613%" y="421" width="0.1154%" height="15" fill="rgb(215,38,13)" fg:x="69358" fg:w="88"/><text x="91.2113%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (83 samples, 0.11%)</title><rect x="90.9679%" y="405" width="0.1089%" height="15" fill="rgb(235,42,18)" fg:x="69363" fg:w="83"/><text x="91.2179%" y="415.50"></text></g><g><title>core::core_arch::simd::i8x16::new (21 samples, 0.03%)</title><rect x="91.0492%" y="389" width="0.0275%" height="15" fill="rgb(219,66,54)" fg:x="69425" fg:w="21"/><text x="91.2992%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 0.04%)</title><rect x="91.1226%" y="437" width="0.0433%" height="15" fill="rgb(222,205,4)" fg:x="69481" fg:w="33"/><text x="91.3726%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (112 samples, 0.15%)</title><rect x="91.1108%" y="485" width="0.1469%" height="15" fill="rgb(227,213,46)" fg:x="69472" fg:w="112"/><text x="91.3608%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (109 samples, 0.14%)</title><rect x="91.1148%" y="469" width="0.1430%" height="15" fill="rgb(250,145,42)" fg:x="69475" fg:w="109"/><text x="91.3648%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (109 samples, 0.14%)</title><rect x="91.1148%" y="453" width="0.1430%" height="15" fill="rgb(219,15,2)" fg:x="69475" fg:w="109"/><text x="91.3648%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (70 samples, 0.09%)</title><rect x="91.1659%" y="437" width="0.0918%" height="15" fill="rgb(231,181,52)" fg:x="69514" fg:w="70"/><text x="91.4159%" y="447.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="91.2603%" y="469" width="0.0236%" height="15" fill="rgb(235,1,42)" fg:x="69586" fg:w="18"/><text x="91.5103%" y="479.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.02%)</title><rect x="91.2852%" y="453" width="0.0197%" height="15" fill="rgb(249,88,27)" fg:x="69605" fg:w="15"/><text x="91.5352%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (41 samples, 0.05%)</title><rect x="91.2577%" y="485" width="0.0538%" height="15" fill="rgb(235,145,16)" fg:x="69584" fg:w="41"/><text x="91.5077%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (21 samples, 0.03%)</title><rect x="91.2839%" y="469" width="0.0275%" height="15" fill="rgb(237,114,19)" fg:x="69604" fg:w="21"/><text x="91.5339%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (33 samples, 0.04%)</title><rect x="91.3207%" y="421" width="0.0433%" height="15" fill="rgb(238,51,50)" fg:x="69632" fg:w="33"/><text x="91.5707%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33 samples, 0.04%)</title><rect x="91.3207%" y="405" width="0.0433%" height="15" fill="rgb(205,194,25)" fg:x="69632" fg:w="33"/><text x="91.5707%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (11 samples, 0.01%)</title><rect x="91.3495%" y="389" width="0.0144%" height="15" fill="rgb(215,203,17)" fg:x="69654" fg:w="11"/><text x="91.5995%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (41 samples, 0.05%)</title><rect x="91.3167%" y="437" width="0.0538%" height="15" fill="rgb(233,112,49)" fg:x="69629" fg:w="41"/><text x="91.5667%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (42 samples, 0.06%)</title><rect x="91.3167%" y="453" width="0.0551%" height="15" fill="rgb(241,130,26)" fg:x="69629" fg:w="42"/><text x="91.5667%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70 samples, 0.09%)</title><rect x="91.4230%" y="373" width="0.0918%" height="15" fill="rgb(252,223,19)" fg:x="69710" fg:w="70"/><text x="91.6730%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.02%)</title><rect x="91.5148%" y="373" width="0.0223%" height="15" fill="rgb(211,95,25)" fg:x="69780" fg:w="17"/><text x="91.7648%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (129 samples, 0.17%)</title><rect x="91.3757%" y="389" width="0.1692%" height="15" fill="rgb(251,182,27)" fg:x="69674" fg:w="129"/><text x="91.6257%" y="399.50"></text></g><g><title>core::cmp::min (17 samples, 0.02%)</title><rect x="91.5541%" y="357" width="0.0223%" height="15" fill="rgb(238,24,4)" fg:x="69810" fg:w="17"/><text x="91.8041%" y="367.50"></text></g><g><title>core::cmp::Ord::min (17 samples, 0.02%)</title><rect x="91.5541%" y="341" width="0.0223%" height="15" fill="rgb(224,220,25)" fg:x="69810" fg:w="17"/><text x="91.8041%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (33 samples, 0.04%)</title><rect x="91.5449%" y="389" width="0.0433%" height="15" fill="rgb(239,133,26)" fg:x="69803" fg:w="33"/><text x="91.7949%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.04%)</title><rect x="91.5449%" y="373" width="0.0433%" height="15" fill="rgb(211,94,48)" fg:x="69803" fg:w="33"/><text x="91.7949%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.01%)</title><rect x="91.5764%" y="357" width="0.0118%" height="15" fill="rgb(239,87,6)" fg:x="69827" fg:w="9"/><text x="91.8264%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (373 samples, 0.49%)</title><rect x="91.1043%" y="517" width="0.4892%" height="15" fill="rgb(227,62,0)" fg:x="69467" fg:w="373"/><text x="91.3543%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (373 samples, 0.49%)</title><rect x="91.1043%" y="501" width="0.4892%" height="15" fill="rgb(211,226,4)" fg:x="69467" fg:w="373"/><text x="91.3543%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (214 samples, 0.28%)</title><rect x="91.3128%" y="485" width="0.2807%" height="15" fill="rgb(253,38,52)" fg:x="69626" fg:w="214"/><text x="91.5628%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (213 samples, 0.28%)</title><rect x="91.3141%" y="469" width="0.2793%" height="15" fill="rgb(229,126,40)" fg:x="69627" fg:w="213"/><text x="91.5641%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (169 samples, 0.22%)</title><rect x="91.3718%" y="453" width="0.2216%" height="15" fill="rgb(229,165,44)" fg:x="69671" fg:w="169"/><text x="91.6218%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (169 samples, 0.22%)</title><rect x="91.3718%" y="437" width="0.2216%" height="15" fill="rgb(247,95,47)" fg:x="69671" fg:w="169"/><text x="91.6218%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (169 samples, 0.22%)</title><rect x="91.3718%" y="421" width="0.2216%" height="15" fill="rgb(216,140,30)" fg:x="69671" fg:w="169"/><text x="91.6218%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (169 samples, 0.22%)</title><rect x="91.3718%" y="405" width="0.2216%" height="15" fill="rgb(246,214,8)" fg:x="69671" fg:w="169"/><text x="91.6218%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="91.6498%" y="469" width="0.0197%" height="15" fill="rgb(227,224,15)" fg:x="69883" fg:w="15"/><text x="91.8998%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.01%)</title><rect x="91.6708%" y="453" width="0.0105%" height="15" fill="rgb(233,175,4)" fg:x="69899" fg:w="8"/><text x="91.9208%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="91.6708%" y="437" width="0.0105%" height="15" fill="rgb(221,66,45)" fg:x="69899" fg:w="8"/><text x="91.9208%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.02%)</title><rect x="91.6708%" y="469" width="0.0184%" height="15" fill="rgb(221,178,18)" fg:x="69899" fg:w="14"/><text x="91.9208%" y="479.50"></text></g><g><title>hashbrown::raw::h2 (16 samples, 0.02%)</title><rect x="91.6931%" y="469" width="0.0210%" height="15" fill="rgb(213,81,29)" fg:x="69916" fg:w="16"/><text x="91.9431%" y="479.50"></text></g><g><title>core::cmp::Ord::min (15 samples, 0.02%)</title><rect x="91.6944%" y="453" width="0.0197%" height="15" fill="rgb(220,89,49)" fg:x="69917" fg:w="15"/><text x="91.9444%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (19 samples, 0.02%)</title><rect x="91.7141%" y="469" width="0.0249%" height="15" fill="rgb(227,60,33)" fg:x="69932" fg:w="19"/><text x="91.9641%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (29 samples, 0.04%)</title><rect x="91.7521%" y="453" width="0.0380%" height="15" fill="rgb(205,113,12)" fg:x="69961" fg:w="29"/><text x="92.0021%" y="463.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (11 samples, 0.01%)</title><rect x="91.7757%" y="437" width="0.0144%" height="15" fill="rgb(211,32,1)" fg:x="69979" fg:w="11"/><text x="92.0257%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (23 samples, 0.03%)</title><rect x="91.7902%" y="453" width="0.0302%" height="15" fill="rgb(246,2,12)" fg:x="69990" fg:w="23"/><text x="92.0402%" y="463.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (10 samples, 0.01%)</title><rect x="91.8072%" y="437" width="0.0131%" height="15" fill="rgb(243,37,27)" fg:x="70003" fg:w="10"/><text x="92.0572%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (103 samples, 0.14%)</title><rect x="91.7390%" y="469" width="0.1351%" height="15" fill="rgb(248,211,31)" fg:x="69951" fg:w="103"/><text x="91.9890%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (41 samples, 0.05%)</title><rect x="91.8203%" y="453" width="0.0538%" height="15" fill="rgb(242,146,47)" fg:x="70013" fg:w="41"/><text x="92.0703%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (39 samples, 0.05%)</title><rect x="91.8230%" y="437" width="0.0511%" height="15" fill="rgb(206,70,20)" fg:x="70015" fg:w="39"/><text x="92.0730%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (13 samples, 0.02%)</title><rect x="91.8570%" y="421" width="0.0170%" height="15" fill="rgb(215,10,51)" fg:x="70041" fg:w="13"/><text x="92.1070%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (33 samples, 0.04%)</title><rect x="91.8925%" y="437" width="0.0433%" height="15" fill="rgb(243,178,53)" fg:x="70068" fg:w="33"/><text x="92.1425%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (19 samples, 0.02%)</title><rect x="91.9108%" y="421" width="0.0249%" height="15" fill="rgb(233,221,20)" fg:x="70082" fg:w="19"/><text x="92.1608%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (9 samples, 0.01%)</title><rect x="91.9239%" y="405" width="0.0118%" height="15" fill="rgb(218,95,35)" fg:x="70092" fg:w="9"/><text x="92.1739%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (32 samples, 0.04%)</title><rect x="91.9357%" y="437" width="0.0420%" height="15" fill="rgb(229,13,5)" fg:x="70101" fg:w="32"/><text x="92.1857%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (11 samples, 0.01%)</title><rect x="91.9633%" y="421" width="0.0144%" height="15" fill="rgb(252,164,30)" fg:x="70122" fg:w="11"/><text x="92.2133%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (341 samples, 0.45%)</title><rect x="91.5934%" y="517" width="0.4472%" height="15" fill="rgb(232,68,36)" fg:x="69840" fg:w="341"/><text x="91.8434%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (338 samples, 0.44%)</title><rect x="91.5974%" y="501" width="0.4433%" height="15" fill="rgb(219,59,54)" fg:x="69843" fg:w="338"/><text x="91.8474%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (335 samples, 0.44%)</title><rect x="91.6013%" y="485" width="0.4393%" height="15" fill="rgb(250,92,33)" fg:x="69846" fg:w="335"/><text x="91.8513%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (127 samples, 0.17%)</title><rect x="91.8741%" y="469" width="0.1666%" height="15" fill="rgb(229,162,54)" fg:x="70054" fg:w="127"/><text x="92.1241%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (126 samples, 0.17%)</title><rect x="91.8754%" y="453" width="0.1652%" height="15" fill="rgb(244,114,52)" fg:x="70055" fg:w="126"/><text x="92.1254%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (48 samples, 0.06%)</title><rect x="91.9777%" y="437" width="0.0630%" height="15" fill="rgb(212,211,43)" fg:x="70133" fg:w="48"/><text x="92.2277%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (45 samples, 0.06%)</title><rect x="91.9816%" y="421" width="0.0590%" height="15" fill="rgb(226,147,8)" fg:x="70136" fg:w="45"/><text x="92.2316%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (71 samples, 0.09%)</title><rect x="92.0761%" y="485" width="0.0931%" height="15" fill="rgb(226,23,13)" fg:x="70208" fg:w="71"/><text x="92.3261%" y="495.50"></text></g><g><title>core::ptr::write (69 samples, 0.09%)</title><rect x="92.0787%" y="469" width="0.0905%" height="15" fill="rgb(240,63,4)" fg:x="70210" fg:w="69"/><text x="92.3287%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (81 samples, 0.11%)</title><rect x="92.0761%" y="501" width="0.1062%" height="15" fill="rgb(221,1,32)" fg:x="70208" fg:w="81"/><text x="92.3261%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.01%)</title><rect x="92.1692%" y="485" width="0.0131%" height="15" fill="rgb(242,117,10)" fg:x="70279" fg:w="10"/><text x="92.4192%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.01%)</title><rect x="92.1718%" y="469" width="0.0105%" height="15" fill="rgb(249,172,44)" fg:x="70281" fg:w="8"/><text x="92.4218%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="92.1718%" y="453" width="0.0105%" height="15" fill="rgb(244,46,45)" fg:x="70281" fg:w="8"/><text x="92.4218%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (28 samples, 0.04%)</title><rect x="92.1823%" y="501" width="0.0367%" height="15" fill="rgb(206,43,17)" fg:x="70289" fg:w="28"/><text x="92.4323%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (20 samples, 0.03%)</title><rect x="92.1928%" y="485" width="0.0262%" height="15" fill="rgb(239,218,39)" fg:x="70297" fg:w="20"/><text x="92.4428%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="92.2282%" y="437" width="0.0131%" height="15" fill="rgb(208,169,54)" fg:x="70324" fg:w="10"/><text x="92.4782%" y="447.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.01%)</title><rect x="92.2282%" y="421" width="0.0131%" height="15" fill="rgb(247,25,42)" fg:x="70324" fg:w="10"/><text x="92.4782%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="92.2295%" y="405" width="0.0118%" height="15" fill="rgb(226,23,31)" fg:x="70325" fg:w="9"/><text x="92.4795%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="92.2452%" y="373" width="0.0223%" height="15" fill="rgb(247,16,28)" fg:x="70337" fg:w="17"/><text x="92.4952%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="92.2452%" y="357" width="0.0223%" height="15" fill="rgb(231,147,38)" fg:x="70337" fg:w="17"/><text x="92.4952%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="92.2452%" y="341" width="0.0223%" height="15" fill="rgb(253,81,48)" fg:x="70337" fg:w="17"/><text x="92.4952%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="92.2505%" y="325" width="0.0170%" height="15" fill="rgb(249,222,43)" fg:x="70341" fg:w="13"/><text x="92.5005%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.02%)</title><rect x="92.2675%" y="373" width="0.0170%" height="15" fill="rgb(221,3,27)" fg:x="70354" fg:w="13"/><text x="92.5175%" y="383.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.01%)</title><rect x="92.2741%" y="357" width="0.0105%" height="15" fill="rgb(228,180,5)" fg:x="70359" fg:w="8"/><text x="92.5241%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="92.2846%" y="341" width="0.0105%" height="15" fill="rgb(227,131,42)" fg:x="70367" fg:w="8"/><text x="92.5346%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="92.3056%" y="261" width="0.0157%" height="15" fill="rgb(212,3,39)" fg:x="70383" fg:w="12"/><text x="92.5556%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.01%)</title><rect x="92.3213%" y="261" width="0.0144%" height="15" fill="rgb(226,45,5)" fg:x="70395" fg:w="11"/><text x="92.5713%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.09%)</title><rect x="92.2951%" y="277" width="0.0905%" height="15" fill="rgb(215,167,45)" fg:x="70375" fg:w="69"/><text x="92.5451%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.05%)</title><rect x="92.3357%" y="261" width="0.0498%" height="15" fill="rgb(250,218,53)" fg:x="70406" fg:w="38"/><text x="92.5857%" y="271.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (114 samples, 0.15%)</title><rect x="92.2452%" y="421" width="0.1495%" height="15" fill="rgb(207,140,0)" fg:x="70337" fg:w="114"/><text x="92.4952%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (114 samples, 0.15%)</title><rect x="92.2452%" y="405" width="0.1495%" height="15" fill="rgb(238,133,51)" fg:x="70337" fg:w="114"/><text x="92.4952%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (114 samples, 0.15%)</title><rect x="92.2452%" y="389" width="0.1495%" height="15" fill="rgb(218,203,53)" fg:x="70337" fg:w="114"/><text x="92.4952%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (84 samples, 0.11%)</title><rect x="92.2846%" y="373" width="0.1102%" height="15" fill="rgb(226,184,25)" fg:x="70367" fg:w="84"/><text x="92.5346%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (84 samples, 0.11%)</title><rect x="92.2846%" y="357" width="0.1102%" height="15" fill="rgb(231,121,21)" fg:x="70367" fg:w="84"/><text x="92.5346%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (76 samples, 0.10%)</title><rect x="92.2951%" y="341" width="0.0997%" height="15" fill="rgb(251,14,34)" fg:x="70375" fg:w="76"/><text x="92.5451%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (76 samples, 0.10%)</title><rect x="92.2951%" y="325" width="0.0997%" height="15" fill="rgb(249,193,11)" fg:x="70375" fg:w="76"/><text x="92.5451%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (76 samples, 0.10%)</title><rect x="92.2951%" y="309" width="0.0997%" height="15" fill="rgb(220,172,37)" fg:x="70375" fg:w="76"/><text x="92.5451%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (76 samples, 0.10%)</title><rect x="92.2951%" y="293" width="0.0997%" height="15" fill="rgb(231,229,43)" fg:x="70375" fg:w="76"/><text x="92.5451%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (118 samples, 0.15%)</title><rect x="92.2452%" y="437" width="0.1548%" height="15" fill="rgb(250,161,5)" fg:x="70337" fg:w="118"/><text x="92.4952%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="92.4223%" y="405" width="0.0105%" height="15" fill="rgb(218,225,18)" fg:x="70472" fg:w="8"/><text x="92.6723%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (25 samples, 0.03%)</title><rect x="92.4092%" y="421" width="0.0328%" height="15" fill="rgb(245,45,42)" fg:x="70462" fg:w="25"/><text x="92.6592%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (171 samples, 0.22%)</title><rect x="92.2190%" y="501" width="0.2243%" height="15" fill="rgb(211,115,1)" fg:x="70317" fg:w="171"/><text x="92.4690%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (171 samples, 0.22%)</title><rect x="92.2190%" y="485" width="0.2243%" height="15" fill="rgb(248,133,52)" fg:x="70317" fg:w="171"/><text x="92.4690%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (171 samples, 0.22%)</title><rect x="92.2190%" y="469" width="0.2243%" height="15" fill="rgb(238,100,21)" fg:x="70317" fg:w="171"/><text x="92.4690%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (171 samples, 0.22%)</title><rect x="92.2190%" y="453" width="0.2243%" height="15" fill="rgb(247,144,11)" fg:x="70317" fg:w="171"/><text x="92.4690%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (27 samples, 0.04%)</title><rect x="92.4079%" y="437" width="0.0354%" height="15" fill="rgb(206,164,16)" fg:x="70461" fg:w="27"/><text x="92.6579%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.02%)</title><rect x="92.4852%" y="485" width="0.0157%" height="15" fill="rgb(222,34,3)" fg:x="70520" fg:w="12"/><text x="92.7352%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (27 samples, 0.04%)</title><rect x="92.5036%" y="485" width="0.0354%" height="15" fill="rgb(248,82,4)" fg:x="70534" fg:w="27"/><text x="92.7536%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (109 samples, 0.14%)</title><rect x="92.4511%" y="501" width="0.1430%" height="15" fill="rgb(228,81,46)" fg:x="70494" fg:w="109"/><text x="92.7011%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (42 samples, 0.06%)</title><rect x="92.5390%" y="485" width="0.0551%" height="15" fill="rgb(227,67,47)" fg:x="70561" fg:w="42"/><text x="92.7890%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (42 samples, 0.06%)</title><rect x="92.5390%" y="469" width="0.0551%" height="15" fill="rgb(215,93,53)" fg:x="70561" fg:w="42"/><text x="92.7890%" y="479.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (24 samples, 0.03%)</title><rect x="92.5626%" y="453" width="0.0315%" height="15" fill="rgb(248,194,39)" fg:x="70579" fg:w="24"/><text x="92.8126%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (9 samples, 0.01%)</title><rect x="92.5954%" y="469" width="0.0118%" height="15" fill="rgb(215,5,19)" fg:x="70604" fg:w="9"/><text x="92.8454%" y="479.50"></text></g><g><title>day1::day16_part2::bt (66,383 samples, 87.06%)</title><rect x="5.5672%" y="565" width="87.0597%" height="15" fill="rgb(226,215,51)" fg:x="4245" fg:w="66383"/><text x="5.8172%" y="575.50">day1::day16_part2::bt</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,182 samples, 1.55%)</title><rect x="91.0767%" y="549" width="1.5502%" height="15" fill="rgb(225,56,26)" fg:x="69446" fg:w="1182"/><text x="91.3267%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,177 samples, 1.54%)</title><rect x="91.0833%" y="533" width="1.5436%" height="15" fill="rgb(222,75,29)" fg:x="69451" fg:w="1177"/><text x="91.3333%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (447 samples, 0.59%)</title><rect x="92.0407%" y="517" width="0.5862%" height="15" fill="rgb(236,139,6)" fg:x="70181" fg:w="447"/><text x="92.2907%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (25 samples, 0.03%)</title><rect x="92.5941%" y="501" width="0.0328%" height="15" fill="rgb(223,137,36)" fg:x="70603" fg:w="25"/><text x="92.8441%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (25 samples, 0.03%)</title><rect x="92.5941%" y="485" width="0.0328%" height="15" fill="rgb(226,99,2)" fg:x="70603" fg:w="25"/><text x="92.8441%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (15 samples, 0.02%)</title><rect x="92.6072%" y="469" width="0.0197%" height="15" fill="rgb(206,133,23)" fg:x="70613" fg:w="15"/><text x="92.8572%" y="479.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.02%)</title><rect x="92.6085%" y="453" width="0.0184%" height="15" fill="rgb(243,173,15)" fg:x="70614" fg:w="14"/><text x="92.8585%" y="463.50"></text></g><g><title>alloc::string::String::new (11 samples, 0.01%)</title><rect x="92.6570%" y="533" width="0.0144%" height="15" fill="rgb(228,69,28)" fg:x="70651" fg:w="11"/><text x="92.9070%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.02%)</title><rect x="92.7161%" y="389" width="0.0170%" height="15" fill="rgb(212,51,22)" fg:x="70696" fg:w="13"/><text x="92.9661%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (33 samples, 0.04%)</title><rect x="92.6964%" y="421" width="0.0433%" height="15" fill="rgb(227,113,0)" fg:x="70681" fg:w="33"/><text x="92.9464%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (32 samples, 0.04%)</title><rect x="92.6977%" y="405" width="0.0420%" height="15" fill="rgb(252,84,27)" fg:x="70682" fg:w="32"/><text x="92.9477%" y="415.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="92.8039%" y="293" width="0.0131%" height="15" fill="rgb(223,145,39)" fg:x="70763" fg:w="10"/><text x="93.0539%" y="303.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="92.7987%" y="309" width="0.0197%" height="15" fill="rgb(239,219,30)" fg:x="70759" fg:w="15"/><text x="93.0487%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="92.8407%" y="277" width="0.0249%" height="15" fill="rgb(224,196,39)" fg:x="70791" fg:w="19"/><text x="93.0907%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (12 samples, 0.02%)</title><rect x="92.8498%" y="261" width="0.0157%" height="15" fill="rgb(205,35,43)" fg:x="70798" fg:w="12"/><text x="93.0998%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (35 samples, 0.05%)</title><rect x="92.8223%" y="309" width="0.0459%" height="15" fill="rgb(228,201,21)" fg:x="70777" fg:w="35"/><text x="93.0723%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (32 samples, 0.04%)</title><rect x="92.8262%" y="293" width="0.0420%" height="15" fill="rgb(237,118,16)" fg:x="70780" fg:w="32"/><text x="93.0762%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 0.09%)</title><rect x="92.7869%" y="341" width="0.0866%" height="15" fill="rgb(241,17,19)" fg:x="70750" fg:w="66"/><text x="93.0369%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.09%)</title><rect x="92.7882%" y="325" width="0.0852%" height="15" fill="rgb(214,10,25)" fg:x="70751" fg:w="65"/><text x="93.0382%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 samples, 0.13%)</title><rect x="92.7751%" y="357" width="0.1311%" height="15" fill="rgb(238,37,29)" fg:x="70741" fg:w="100"/><text x="93.0251%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (19 samples, 0.02%)</title><rect x="92.8813%" y="341" width="0.0249%" height="15" fill="rgb(253,83,25)" fg:x="70822" fg:w="19"/><text x="93.1313%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.02%)</title><rect x="92.9062%" y="357" width="0.0184%" height="15" fill="rgb(234,192,12)" fg:x="70841" fg:w="14"/><text x="93.1562%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (14 samples, 0.02%)</title><rect x="92.9062%" y="341" width="0.0184%" height="15" fill="rgb(241,216,45)" fg:x="70841" fg:w="14"/><text x="93.1562%" y="351.50"></text></g><g><title>core::cmp::max (20 samples, 0.03%)</title><rect x="92.9246%" y="357" width="0.0262%" height="15" fill="rgb(242,22,33)" fg:x="70855" fg:w="20"/><text x="93.1746%" y="367.50"></text></g><g><title>core::cmp::Ord::max (20 samples, 0.03%)</title><rect x="92.9246%" y="341" width="0.0262%" height="15" fill="rgb(231,105,49)" fg:x="70855" fg:w="20"/><text x="93.1746%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (11 samples, 0.01%)</title><rect x="92.9364%" y="325" width="0.0144%" height="15" fill="rgb(218,204,15)" fg:x="70864" fg:w="11"/><text x="93.1864%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (159 samples, 0.21%)</title><rect x="92.7515%" y="373" width="0.2085%" height="15" fill="rgb(235,138,41)" fg:x="70723" fg:w="159"/><text x="93.0015%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (171 samples, 0.22%)</title><rect x="92.7397%" y="421" width="0.2243%" height="15" fill="rgb(246,0,9)" fg:x="70714" fg:w="171"/><text x="92.9897%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (171 samples, 0.22%)</title><rect x="92.7397%" y="405" width="0.2243%" height="15" fill="rgb(210,74,4)" fg:x="70714" fg:w="171"/><text x="92.9897%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (164 samples, 0.22%)</title><rect x="92.7489%" y="389" width="0.2151%" height="15" fill="rgb(250,60,41)" fg:x="70721" fg:w="164"/><text x="92.9989%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (208 samples, 0.27%)</title><rect x="92.6925%" y="437" width="0.2728%" height="15" fill="rgb(220,115,12)" fg:x="70678" fg:w="208"/><text x="92.9425%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (215 samples, 0.28%)</title><rect x="92.6925%" y="453" width="0.2820%" height="15" fill="rgb(237,100,13)" fg:x="70678" fg:w="215"/><text x="92.9425%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (236 samples, 0.31%)</title><rect x="92.6872%" y="469" width="0.3095%" height="15" fill="rgb(213,55,26)" fg:x="70674" fg:w="236"/><text x="92.9372%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (17 samples, 0.02%)</title><rect x="92.9744%" y="453" width="0.0223%" height="15" fill="rgb(216,17,4)" fg:x="70893" fg:w="17"/><text x="93.2244%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="92.9744%" y="437" width="0.0223%" height="15" fill="rgb(220,153,47)" fg:x="70893" fg:w="17"/><text x="93.2244%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (17 samples, 0.02%)</title><rect x="92.9744%" y="421" width="0.0223%" height="15" fill="rgb(215,131,9)" fg:x="70893" fg:w="17"/><text x="93.2244%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (243 samples, 0.32%)</title><rect x="92.6846%" y="501" width="0.3187%" height="15" fill="rgb(233,46,42)" fg:x="70672" fg:w="243"/><text x="92.9346%" y="511.50"></text></g><g><title>alloc::string::String::push_str (241 samples, 0.32%)</title><rect x="92.6872%" y="485" width="0.3161%" height="15" fill="rgb(226,86,7)" fg:x="70674" fg:w="241"/><text x="92.9372%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad_integral (15 samples, 0.02%)</title><rect x="93.0033%" y="501" width="0.0197%" height="15" fill="rgb(239,226,21)" fg:x="70915" fg:w="15"/><text x="93.2533%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (270 samples, 0.35%)</title><rect x="92.6741%" y="533" width="0.3541%" height="15" fill="rgb(244,137,22)" fg:x="70664" fg:w="270"/><text x="92.9241%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (269 samples, 0.35%)</title><rect x="92.6754%" y="517" width="0.3528%" height="15" fill="rgb(211,139,35)" fg:x="70665" fg:w="269"/><text x="92.9254%" y="527.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (290 samples, 0.38%)</title><rect x="92.6557%" y="549" width="0.3803%" height="15" fill="rgb(214,62,50)" fg:x="70650" fg:w="290"/><text x="92.9057%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (12 samples, 0.02%)</title><rect x="93.0597%" y="485" width="0.0157%" height="15" fill="rgb(212,113,44)" fg:x="70958" fg:w="12"/><text x="93.3097%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="93.0649%" y="469" width="0.0105%" height="15" fill="rgb(226,150,43)" fg:x="70962" fg:w="8"/><text x="93.3149%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (33 samples, 0.04%)</title><rect x="93.0374%" y="517" width="0.0433%" height="15" fill="rgb(250,71,37)" fg:x="70941" fg:w="33"/><text x="93.2874%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (32 samples, 0.04%)</title><rect x="93.0387%" y="501" width="0.0420%" height="15" fill="rgb(219,76,19)" fg:x="70942" fg:w="32"/><text x="93.2887%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (36 samples, 0.05%)</title><rect x="93.0361%" y="549" width="0.0472%" height="15" fill="rgb(250,39,11)" fg:x="70940" fg:w="36"/><text x="93.2861%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.05%)</title><rect x="93.0361%" y="533" width="0.0472%" height="15" fill="rgb(230,64,31)" fg:x="70940" fg:w="36"/><text x="93.2861%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="93.1108%" y="501" width="0.0131%" height="15" fill="rgb(208,222,23)" fg:x="70997" fg:w="10"/><text x="93.3608%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="93.1134%" y="485" width="0.0105%" height="15" fill="rgb(227,125,18)" fg:x="70999" fg:w="8"/><text x="93.3634%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (36 samples, 0.05%)</title><rect x="93.0846%" y="533" width="0.0472%" height="15" fill="rgb(234,210,9)" fg:x="70977" fg:w="36"/><text x="93.3346%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (35 samples, 0.05%)</title><rect x="93.0859%" y="517" width="0.0459%" height="15" fill="rgb(217,127,24)" fg:x="70978" fg:w="35"/><text x="93.3359%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (41 samples, 0.05%)</title><rect x="93.0833%" y="549" width="0.0538%" height="15" fill="rgb(239,141,48)" fg:x="70976" fg:w="41"/><text x="93.3333%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (24 samples, 0.03%)</title><rect x="93.1436%" y="533" width="0.0315%" height="15" fill="rgb(227,109,8)" fg:x="71022" fg:w="24"/><text x="93.3936%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (21 samples, 0.03%)</title><rect x="93.1475%" y="517" width="0.0275%" height="15" fill="rgb(235,184,23)" fg:x="71025" fg:w="21"/><text x="93.3975%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="93.1620%" y="501" width="0.0131%" height="15" fill="rgb(227,226,48)" fg:x="71036" fg:w="10"/><text x="93.4120%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (30 samples, 0.04%)</title><rect x="93.1370%" y="549" width="0.0393%" height="15" fill="rgb(206,150,11)" fg:x="71017" fg:w="30"/><text x="93.3870%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (27 samples, 0.04%)</title><rect x="93.2525%" y="469" width="0.0354%" height="15" fill="rgb(254,2,33)" fg:x="71105" fg:w="27"/><text x="93.5025%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="93.3154%" y="453" width="0.0249%" height="15" fill="rgb(243,160,20)" fg:x="71153" fg:w="19"/><text x="93.5654%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="93.3207%" y="437" width="0.0197%" height="15" fill="rgb(218,208,30)" fg:x="71157" fg:w="15"/><text x="93.5707%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (47 samples, 0.06%)</title><rect x="93.2879%" y="469" width="0.0616%" height="15" fill="rgb(224,120,49)" fg:x="71132" fg:w="47"/><text x="93.5379%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.11%)</title><rect x="93.2459%" y="485" width="0.1075%" height="15" fill="rgb(246,12,2)" fg:x="71100" fg:w="82"/><text x="93.4959%" y="495.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (18 samples, 0.02%)</title><rect x="93.3718%" y="437" width="0.0236%" height="15" fill="rgb(236,117,3)" fg:x="71196" fg:w="18"/><text x="93.6218%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (18 samples, 0.02%)</title><rect x="93.3718%" y="421" width="0.0236%" height="15" fill="rgb(216,128,52)" fg:x="71196" fg:w="18"/><text x="93.6218%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="93.3718%" y="405" width="0.0236%" height="15" fill="rgb(246,145,19)" fg:x="71196" fg:w="18"/><text x="93.6218%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (18 samples, 0.02%)</title><rect x="93.3718%" y="389" width="0.0236%" height="15" fill="rgb(222,11,46)" fg:x="71196" fg:w="18"/><text x="93.6218%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.02%)</title><rect x="93.3718%" y="373" width="0.0236%" height="15" fill="rgb(245,82,36)" fg:x="71196" fg:w="18"/><text x="93.6218%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.16%)</title><rect x="93.2367%" y="501" width="0.1639%" height="15" fill="rgb(250,73,51)" fg:x="71093" fg:w="125"/><text x="93.4867%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.05%)</title><rect x="93.3534%" y="485" width="0.0472%" height="15" fill="rgb(221,189,23)" fg:x="71182" fg:w="36"/><text x="93.6034%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29 samples, 0.04%)</title><rect x="93.3626%" y="469" width="0.0380%" height="15" fill="rgb(210,33,7)" fg:x="71189" fg:w="29"/><text x="93.6126%" y="479.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (26 samples, 0.03%)</title><rect x="93.3666%" y="453" width="0.0341%" height="15" fill="rgb(210,107,22)" fg:x="71192" fg:w="26"/><text x="93.6166%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (14 samples, 0.02%)</title><rect x="93.4007%" y="501" width="0.0184%" height="15" fill="rgb(222,116,37)" fg:x="71218" fg:w="14"/><text x="93.6507%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="93.4439%" y="469" width="0.0131%" height="15" fill="rgb(254,17,48)" fg:x="71251" fg:w="10"/><text x="93.6939%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="93.4466%" y="453" width="0.0105%" height="15" fill="rgb(224,36,32)" fg:x="71253" fg:w="8"/><text x="93.6966%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (22 samples, 0.03%)</title><rect x="93.4308%" y="485" width="0.0289%" height="15" fill="rgb(232,90,46)" fg:x="71241" fg:w="22"/><text x="93.6808%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.04%)</title><rect x="93.4190%" y="501" width="0.0420%" height="15" fill="rgb(241,66,40)" fg:x="71232" fg:w="32"/><text x="93.6690%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.02%)</title><rect x="93.4623%" y="453" width="0.0223%" height="15" fill="rgb(249,184,29)" fg:x="71265" fg:w="17"/><text x="93.7123%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.02%)</title><rect x="93.4623%" y="437" width="0.0223%" height="15" fill="rgb(231,181,1)" fg:x="71265" fg:w="17"/><text x="93.7123%" y="447.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (19 samples, 0.02%)</title><rect x="93.4610%" y="501" width="0.0249%" height="15" fill="rgb(224,94,2)" fg:x="71264" fg:w="19"/><text x="93.7110%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (19 samples, 0.02%)</title><rect x="93.4610%" y="485" width="0.0249%" height="15" fill="rgb(229,170,15)" fg:x="71264" fg:w="19"/><text x="93.7110%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="93.4610%" y="469" width="0.0249%" height="15" fill="rgb(240,127,35)" fg:x="71264" fg:w="19"/><text x="93.7110%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.02%)</title><rect x="93.5174%" y="421" width="0.0170%" height="15" fill="rgb(248,196,34)" fg:x="71307" fg:w="13"/><text x="93.7674%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="93.5213%" y="405" width="0.0131%" height="15" fill="rgb(236,137,7)" fg:x="71310" fg:w="10"/><text x="93.7713%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (36 samples, 0.05%)</title><rect x="93.4964%" y="453" width="0.0472%" height="15" fill="rgb(235,127,16)" fg:x="71291" fg:w="36"/><text x="93.7464%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (35 samples, 0.05%)</title><rect x="93.4977%" y="437" width="0.0459%" height="15" fill="rgb(250,192,54)" fg:x="71292" fg:w="35"/><text x="93.7477%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (49 samples, 0.06%)</title><rect x="93.4872%" y="469" width="0.0643%" height="15" fill="rgb(218,98,20)" fg:x="71284" fg:w="49"/><text x="93.7372%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (66 samples, 0.09%)</title><rect x="93.4859%" y="485" width="0.0866%" height="15" fill="rgb(230,176,47)" fg:x="71283" fg:w="66"/><text x="93.7359%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (16 samples, 0.02%)</title><rect x="93.5515%" y="469" width="0.0210%" height="15" fill="rgb(244,2,33)" fg:x="71333" fg:w="16"/><text x="93.8015%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (11 samples, 0.01%)</title><rect x="93.5580%" y="453" width="0.0144%" height="15" fill="rgb(231,100,17)" fg:x="71338" fg:w="11"/><text x="93.8080%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (23 samples, 0.03%)</title><rect x="93.5738%" y="453" width="0.0302%" height="15" fill="rgb(245,23,12)" fg:x="71350" fg:w="23"/><text x="93.8238%" y="463.50"></text></g><g><title>core::ptr::null (8 samples, 0.01%)</title><rect x="93.5934%" y="437" width="0.0105%" height="15" fill="rgb(249,55,22)" fg:x="71365" fg:w="8"/><text x="93.8434%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (91 samples, 0.12%)</title><rect x="93.4859%" y="501" width="0.1193%" height="15" fill="rgb(207,134,9)" fg:x="71283" fg:w="91"/><text x="93.7359%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (25 samples, 0.03%)</title><rect x="93.5725%" y="485" width="0.0328%" height="15" fill="rgb(218,134,0)" fg:x="71349" fg:w="25"/><text x="93.8225%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (25 samples, 0.03%)</title><rect x="93.5725%" y="469" width="0.0328%" height="15" fill="rgb(213,212,33)" fg:x="71349" fg:w="25"/><text x="93.8225%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (12 samples, 0.02%)</title><rect x="93.6275%" y="453" width="0.0157%" height="15" fill="rgb(252,106,18)" fg:x="71391" fg:w="12"/><text x="93.8775%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (27 samples, 0.04%)</title><rect x="93.6092%" y="485" width="0.0354%" height="15" fill="rgb(208,126,42)" fg:x="71377" fg:w="27"/><text x="93.8592%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (27 samples, 0.04%)</title><rect x="93.6092%" y="469" width="0.0354%" height="15" fill="rgb(246,175,29)" fg:x="71377" fg:w="27"/><text x="93.8592%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (29 samples, 0.04%)</title><rect x="93.6079%" y="501" width="0.0380%" height="15" fill="rgb(215,13,50)" fg:x="71376" fg:w="29"/><text x="93.8579%" y="511.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="93.6892%" y="389" width="0.0236%" height="15" fill="rgb(216,172,15)" fg:x="71438" fg:w="18"/><text x="93.9392%" y="399.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.03%)</title><rect x="93.6866%" y="405" width="0.0302%" height="15" fill="rgb(212,103,13)" fg:x="71436" fg:w="23"/><text x="93.9366%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="93.7364%" y="373" width="0.0118%" height="15" fill="rgb(231,171,36)" fg:x="71474" fg:w="9"/><text x="93.9864%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="93.7180%" y="405" width="0.0341%" height="15" fill="rgb(250,123,20)" fg:x="71460" fg:w="26"/><text x="93.9680%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (25 samples, 0.03%)</title><rect x="93.7193%" y="389" width="0.0328%" height="15" fill="rgb(212,53,50)" fg:x="71461" fg:w="25"/><text x="93.9693%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (68 samples, 0.09%)</title><rect x="93.6695%" y="437" width="0.0892%" height="15" fill="rgb(243,54,12)" fg:x="71423" fg:w="68"/><text x="93.9195%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.09%)</title><rect x="93.6695%" y="421" width="0.0892%" height="15" fill="rgb(234,101,34)" fg:x="71423" fg:w="68"/><text x="93.9195%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (32 samples, 0.04%)</title><rect x="93.7587%" y="437" width="0.0420%" height="15" fill="rgb(254,67,22)" fg:x="71491" fg:w="32"/><text x="94.0087%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (31 samples, 0.04%)</title><rect x="93.7600%" y="421" width="0.0407%" height="15" fill="rgb(250,35,47)" fg:x="71492" fg:w="31"/><text x="94.0100%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (122 samples, 0.16%)</title><rect x="93.6459%" y="501" width="0.1600%" height="15" fill="rgb(226,126,38)" fg:x="71405" fg:w="122"/><text x="93.8959%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (122 samples, 0.16%)</title><rect x="93.6459%" y="485" width="0.1600%" height="15" fill="rgb(216,138,53)" fg:x="71405" fg:w="122"/><text x="93.8959%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122 samples, 0.16%)</title><rect x="93.6459%" y="469" width="0.1600%" height="15" fill="rgb(246,199,43)" fg:x="71405" fg:w="122"/><text x="93.8959%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (122 samples, 0.16%)</title><rect x="93.6459%" y="453" width="0.1600%" height="15" fill="rgb(232,125,11)" fg:x="71405" fg:w="122"/><text x="93.8959%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (17 samples, 0.02%)</title><rect x="93.8111%" y="501" width="0.0223%" height="15" fill="rgb(218,219,45)" fg:x="71531" fg:w="17"/><text x="94.0611%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (9 samples, 0.01%)</title><rect x="93.8216%" y="485" width="0.0118%" height="15" fill="rgb(216,102,54)" fg:x="71539" fg:w="9"/><text x="94.0716%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="93.8925%" y="437" width="0.0157%" height="15" fill="rgb(250,228,7)" fg:x="71593" fg:w="12"/><text x="94.1425%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="93.9738%" y="405" width="0.0197%" height="15" fill="rgb(226,125,25)" fg:x="71655" fg:w="15"/><text x="94.2238%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (58 samples, 0.08%)</title><rect x="93.9252%" y="421" width="0.0761%" height="15" fill="rgb(224,165,27)" fg:x="71618" fg:w="58"/><text x="94.1752%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="94.0472%" y="405" width="0.0367%" height="15" fill="rgb(233,86,3)" fg:x="71711" fg:w="28"/><text x="94.2972%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (21 samples, 0.03%)</title><rect x="94.0564%" y="389" width="0.0275%" height="15" fill="rgb(228,116,20)" fg:x="71718" fg:w="21"/><text x="94.3064%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (69 samples, 0.09%)</title><rect x="94.0013%" y="421" width="0.0905%" height="15" fill="rgb(209,192,17)" fg:x="71676" fg:w="69"/><text x="94.2513%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.20%)</title><rect x="93.9082%" y="437" width="0.2007%" height="15" fill="rgb(224,88,34)" fg:x="71605" fg:w="153"/><text x="94.1582%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (13 samples, 0.02%)</title><rect x="94.0918%" y="421" width="0.0170%" height="15" fill="rgb(233,38,6)" fg:x="71745" fg:w="13"/><text x="94.3418%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.01%)</title><rect x="94.0970%" y="405" width="0.0118%" height="15" fill="rgb(212,59,30)" fg:x="71749" fg:w="9"/><text x="94.3470%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="94.0984%" y="389" width="0.0105%" height="15" fill="rgb(213,80,3)" fg:x="71750" fg:w="8"/><text x="94.3484%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (23 samples, 0.03%)</title><rect x="94.1600%" y="325" width="0.0302%" height="15" fill="rgb(251,178,7)" fg:x="71797" fg:w="23"/><text x="94.4100%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="94.1666%" y="309" width="0.0236%" height="15" fill="rgb(213,154,26)" fg:x="71802" fg:w="18"/><text x="94.4166%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (48 samples, 0.06%)</title><rect x="94.1364%" y="357" width="0.0630%" height="15" fill="rgb(238,165,49)" fg:x="71779" fg:w="48"/><text x="94.3864%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (47 samples, 0.06%)</title><rect x="94.1377%" y="341" width="0.0616%" height="15" fill="rgb(248,91,46)" fg:x="71780" fg:w="47"/><text x="94.3877%" y="351.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (51 samples, 0.07%)</title><rect x="94.1338%" y="405" width="0.0669%" height="15" fill="rgb(244,21,52)" fg:x="71777" fg:w="51"/><text x="94.3838%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (49 samples, 0.06%)</title><rect x="94.1364%" y="389" width="0.0643%" height="15" fill="rgb(247,122,20)" fg:x="71779" fg:w="49"/><text x="94.3864%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (49 samples, 0.06%)</title><rect x="94.1364%" y="373" width="0.0643%" height="15" fill="rgb(218,27,9)" fg:x="71779" fg:w="49"/><text x="94.3864%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}}::{{closure}} (59 samples, 0.08%)</title><rect x="94.1246%" y="421" width="0.0774%" height="15" fill="rgb(246,7,6)" fg:x="71770" fg:w="59"/><text x="94.3746%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (305 samples, 0.40%)</title><rect x="93.8413%" y="469" width="0.4000%" height="15" fill="rgb(227,135,54)" fg:x="71554" fg:w="305"/><text x="94.0913%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (302 samples, 0.40%)</title><rect x="93.8452%" y="453" width="0.3961%" height="15" fill="rgb(247,14,11)" fg:x="71557" fg:w="302"/><text x="94.0952%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (101 samples, 0.13%)</title><rect x="94.1089%" y="437" width="0.1325%" height="15" fill="rgb(206,149,34)" fg:x="71758" fg:w="101"/><text x="94.3589%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (30 samples, 0.04%)</title><rect x="94.2020%" y="421" width="0.0393%" height="15" fill="rgb(227,228,4)" fg:x="71829" fg:w="30"/><text x="94.4520%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (28 samples, 0.04%)</title><rect x="94.2046%" y="405" width="0.0367%" height="15" fill="rgb(238,218,28)" fg:x="71831" fg:w="28"/><text x="94.4546%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.01%)</title><rect x="94.2269%" y="389" width="0.0144%" height="15" fill="rgb(252,86,40)" fg:x="71848" fg:w="11"/><text x="94.4769%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="94.2570%" y="421" width="0.0105%" height="15" fill="rgb(251,225,11)" fg:x="71871" fg:w="8"/><text x="94.5070%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (333 samples, 0.44%)</title><rect x="93.8334%" y="501" width="0.4367%" height="15" fill="rgb(206,46,49)" fg:x="71548" fg:w="333"/><text x="94.0834%" y="511.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (327 samples, 0.43%)</title><rect x="93.8413%" y="485" width="0.4289%" height="15" fill="rgb(245,128,24)" fg:x="71554" fg:w="327"/><text x="94.0913%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (22 samples, 0.03%)</title><rect x="94.2413%" y="469" width="0.0289%" height="15" fill="rgb(219,177,34)" fg:x="71859" fg:w="22"/><text x="94.4913%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (22 samples, 0.03%)</title><rect x="94.2413%" y="453" width="0.0289%" height="15" fill="rgb(218,60,48)" fg:x="71859" fg:w="22"/><text x="94.4913%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (19 samples, 0.02%)</title><rect x="94.2452%" y="437" width="0.0249%" height="15" fill="rgb(221,11,5)" fg:x="71862" fg:w="19"/><text x="94.4952%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (8 samples, 0.01%)</title><rect x="94.2807%" y="501" width="0.0105%" height="15" fill="rgb(220,148,13)" fg:x="71889" fg:w="8"/><text x="94.5307%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (42 samples, 0.06%)</title><rect x="94.2911%" y="501" width="0.0551%" height="15" fill="rgb(210,16,3)" fg:x="71897" fg:w="42"/><text x="94.5411%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (41 samples, 0.05%)</title><rect x="94.2925%" y="485" width="0.0538%" height="15" fill="rgb(236,80,2)" fg:x="71898" fg:w="41"/><text x="94.5425%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (29 samples, 0.04%)</title><rect x="94.3082%" y="469" width="0.0380%" height="15" fill="rgb(239,129,19)" fg:x="71910" fg:w="29"/><text x="94.5582%" y="479.50"></text></g><g><title>core::ptr::null (10 samples, 0.01%)</title><rect x="94.3331%" y="453" width="0.0131%" height="15" fill="rgb(220,106,35)" fg:x="71929" fg:w="10"/><text x="94.5831%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (9 samples, 0.01%)</title><rect x="94.3462%" y="501" width="0.0118%" height="15" fill="rgb(252,139,45)" fg:x="71939" fg:w="9"/><text x="94.5962%" y="511.50"></text></g><g><title>core::ptr::metadata::metadata (9 samples, 0.01%)</title><rect x="94.3462%" y="485" width="0.0118%" height="15" fill="rgb(229,8,36)" fg:x="71939" fg:w="9"/><text x="94.5962%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (24 samples, 0.03%)</title><rect x="94.3803%" y="437" width="0.0315%" height="15" fill="rgb(230,126,33)" fg:x="71965" fg:w="24"/><text x="94.6303%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (43 samples, 0.06%)</title><rect x="94.3580%" y="501" width="0.0564%" height="15" fill="rgb(239,140,21)" fg:x="71948" fg:w="43"/><text x="94.6080%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (33 samples, 0.04%)</title><rect x="94.3711%" y="485" width="0.0433%" height="15" fill="rgb(254,104,9)" fg:x="71958" fg:w="33"/><text x="94.6211%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (27 samples, 0.04%)</title><rect x="94.3790%" y="469" width="0.0354%" height="15" fill="rgb(239,52,14)" fg:x="71964" fg:w="27"/><text x="94.6290%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (27 samples, 0.04%)</title><rect x="94.3790%" y="453" width="0.0354%" height="15" fill="rgb(208,227,44)" fg:x="71964" fg:w="27"/><text x="94.6290%" y="463.50"></text></g><g><title>alloc::str::join_generic_copy (951 samples, 1.25%)</title><rect x="93.1777%" y="517" width="1.2472%" height="15" fill="rgb(246,18,19)" fg:x="71048" fg:w="951"/><text x="93.4277%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.01%)</title><rect x="94.4144%" y="501" width="0.0105%" height="15" fill="rgb(235,228,25)" fg:x="71991" fg:w="8"/><text x="94.6644%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.01%)</title><rect x="94.4144%" y="485" width="0.0105%" height="15" fill="rgb(240,156,20)" fg:x="71991" fg:w="8"/><text x="94.6644%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.01%)</title><rect x="94.4144%" y="469" width="0.0105%" height="15" fill="rgb(224,8,20)" fg:x="71991" fg:w="8"/><text x="94.6644%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (955 samples, 1.25%)</title><rect x="93.1764%" y="549" width="1.2525%" height="15" fill="rgb(214,12,52)" fg:x="71047" fg:w="955"/><text x="93.4264%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (954 samples, 1.25%)</title><rect x="93.1777%" y="533" width="1.2511%" height="15" fill="rgb(211,220,47)" fg:x="71048" fg:w="954"/><text x="93.4277%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.05%)</title><rect x="94.4485%" y="517" width="0.0485%" height="15" fill="rgb(250,173,5)" fg:x="72017" fg:w="37"/><text x="94.6985%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (29 samples, 0.04%)</title><rect x="94.4590%" y="501" width="0.0380%" height="15" fill="rgb(250,125,52)" fg:x="72025" fg:w="29"/><text x="94.7090%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (28 samples, 0.04%)</title><rect x="94.4603%" y="485" width="0.0367%" height="15" fill="rgb(209,133,18)" fg:x="72026" fg:w="28"/><text x="94.7103%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (48 samples, 0.06%)</title><rect x="94.5482%" y="421" width="0.0630%" height="15" fill="rgb(216,173,22)" fg:x="72093" fg:w="48"/><text x="94.7982%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (45 samples, 0.06%)</title><rect x="94.5521%" y="405" width="0.0590%" height="15" fill="rgb(205,3,22)" fg:x="72096" fg:w="45"/><text x="94.8021%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (24 samples, 0.03%)</title><rect x="94.5797%" y="389" width="0.0315%" height="15" fill="rgb(248,22,20)" fg:x="72117" fg:w="24"/><text x="94.8297%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (17 samples, 0.02%)</title><rect x="94.5889%" y="373" width="0.0223%" height="15" fill="rgb(233,6,29)" fg:x="72124" fg:w="17"/><text x="94.8389%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (52 samples, 0.07%)</title><rect x="94.5443%" y="437" width="0.0682%" height="15" fill="rgb(240,22,54)" fg:x="72090" fg:w="52"/><text x="94.7943%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (78 samples, 0.10%)</title><rect x="94.5325%" y="501" width="0.1023%" height="15" fill="rgb(231,133,32)" fg:x="72081" fg:w="78"/><text x="94.7825%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::lt (77 samples, 0.10%)</title><rect x="94.5338%" y="485" width="0.1010%" height="15" fill="rgb(248,193,4)" fg:x="72082" fg:w="77"/><text x="94.7838%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (70 samples, 0.09%)</title><rect x="94.5430%" y="469" width="0.0918%" height="15" fill="rgb(211,178,46)" fg:x="72089" fg:w="70"/><text x="94.7930%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (69 samples, 0.09%)</title><rect x="94.5443%" y="453" width="0.0905%" height="15" fill="rgb(224,5,42)" fg:x="72090" fg:w="69"/><text x="94.7943%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (17 samples, 0.02%)</title><rect x="94.6125%" y="437" width="0.0223%" height="15" fill="rgb(239,176,25)" fg:x="72142" fg:w="17"/><text x="94.8625%" y="447.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (17 samples, 0.02%)</title><rect x="94.6125%" y="421" width="0.0223%" height="15" fill="rgb(245,187,50)" fg:x="72142" fg:w="17"/><text x="94.8625%" y="431.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (16 samples, 0.02%)</title><rect x="94.6138%" y="405" width="0.0210%" height="15" fill="rgb(248,24,15)" fg:x="72143" fg:w="16"/><text x="94.8638%" y="415.50"></text></g><g><title>alloc::slice::insert_head (112 samples, 0.15%)</title><rect x="94.4970%" y="517" width="0.1469%" height="15" fill="rgb(205,166,13)" fg:x="72054" fg:w="112"/><text x="94.7470%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9 samples, 0.01%)</title><rect x="94.6570%" y="469" width="0.0118%" height="15" fill="rgb(208,114,23)" fg:x="72176" fg:w="9"/><text x="94.9070%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (184 samples, 0.24%)</title><rect x="94.4289%" y="549" width="0.2413%" height="15" fill="rgb(239,127,18)" fg:x="72002" fg:w="184"/><text x="94.6789%" y="559.50"></text></g><g><title>alloc::slice::merge_sort (184 samples, 0.24%)</title><rect x="94.4289%" y="533" width="0.2413%" height="15" fill="rgb(219,154,28)" fg:x="72002" fg:w="184"/><text x="94.6789%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (16 samples, 0.02%)</title><rect x="94.6492%" y="517" width="0.0210%" height="15" fill="rgb(225,157,23)" fg:x="72170" fg:w="16"/><text x="94.8992%" y="527.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (15 samples, 0.02%)</title><rect x="94.6505%" y="501" width="0.0197%" height="15" fill="rgb(219,8,6)" fg:x="72171" fg:w="15"/><text x="94.9005%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (12 samples, 0.02%)</title><rect x="94.6544%" y="485" width="0.0157%" height="15" fill="rgb(212,47,6)" fg:x="72174" fg:w="12"/><text x="94.9044%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (16 samples, 0.02%)</title><rect x="94.6833%" y="485" width="0.0210%" height="15" fill="rgb(224,190,4)" fg:x="72196" fg:w="16"/><text x="94.9333%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.02%)</title><rect x="94.6833%" y="469" width="0.0210%" height="15" fill="rgb(239,183,29)" fg:x="72196" fg:w="16"/><text x="94.9333%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.02%)</title><rect x="94.7357%" y="405" width="0.0236%" height="15" fill="rgb(213,57,7)" fg:x="72236" fg:w="18"/><text x="94.9857%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (17 samples, 0.02%)</title><rect x="94.7370%" y="389" width="0.0223%" height="15" fill="rgb(216,148,1)" fg:x="72237" fg:w="17"/><text x="94.9870%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (26 samples, 0.03%)</title><rect x="94.7279%" y="421" width="0.0341%" height="15" fill="rgb(236,182,29)" fg:x="72230" fg:w="26"/><text x="94.9779%" y="431.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="94.8616%" y="325" width="0.0170%" height="15" fill="rgb(244,120,48)" fg:x="72332" fg:w="13"/><text x="95.1116%" y="335.50"></text></g><g><title>__GI___libc_realloc (66 samples, 0.09%)</title><rect x="94.8210%" y="357" width="0.0866%" height="15" fill="rgb(206,71,34)" fg:x="72301" fg:w="66"/><text x="95.0710%" y="367.50"></text></g><g><title>_int_realloc (41 samples, 0.05%)</title><rect x="94.8538%" y="341" width="0.0538%" height="15" fill="rgb(242,32,6)" fg:x="72326" fg:w="41"/><text x="95.1038%" y="351.50"></text></g><g><title>_int_malloc (22 samples, 0.03%)</title><rect x="94.8787%" y="325" width="0.0289%" height="15" fill="rgb(241,35,3)" fg:x="72345" fg:w="22"/><text x="95.1287%" y="335.50"></text></g><g><title>alloc::alloc::realloc (73 samples, 0.10%)</title><rect x="94.8157%" y="373" width="0.0957%" height="15" fill="rgb(222,62,19)" fg:x="72297" fg:w="73"/><text x="95.0657%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (12 samples, 0.02%)</title><rect x="94.9416%" y="341" width="0.0157%" height="15" fill="rgb(223,110,41)" fg:x="72393" fg:w="12"/><text x="95.1916%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="94.9456%" y="325" width="0.0118%" height="15" fill="rgb(208,224,4)" fg:x="72396" fg:w="9"/><text x="95.1956%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (38 samples, 0.05%)</title><rect x="94.9128%" y="373" width="0.0498%" height="15" fill="rgb(241,137,19)" fg:x="72371" fg:w="38"/><text x="95.1628%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33 samples, 0.04%)</title><rect x="94.9193%" y="357" width="0.0433%" height="15" fill="rgb(244,24,17)" fg:x="72376" fg:w="33"/><text x="95.1693%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (140 samples, 0.18%)</title><rect x="94.7869%" y="405" width="0.1836%" height="15" fill="rgb(245,178,49)" fg:x="72275" fg:w="140"/><text x="95.0369%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (139 samples, 0.18%)</title><rect x="94.7882%" y="389" width="0.1823%" height="15" fill="rgb(219,160,38)" fg:x="72276" fg:w="139"/><text x="95.0382%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 samples, 0.22%)</title><rect x="94.7685%" y="421" width="0.2151%" height="15" fill="rgb(228,137,14)" fg:x="72261" fg:w="164"/><text x="95.0185%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="94.9731%" y="405" width="0.0105%" height="15" fill="rgb(237,134,11)" fg:x="72417" fg:w="8"/><text x="95.2231%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (34 samples, 0.04%)</title><rect x="94.9836%" y="421" width="0.0446%" height="15" fill="rgb(211,126,44)" fg:x="72425" fg:w="34"/><text x="95.2336%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (34 samples, 0.04%)</title><rect x="94.9836%" y="405" width="0.0446%" height="15" fill="rgb(226,171,33)" fg:x="72425" fg:w="34"/><text x="95.2336%" y="415.50"></text></g><g><title>core::cmp::max (18 samples, 0.02%)</title><rect x="95.0282%" y="421" width="0.0236%" height="15" fill="rgb(253,99,13)" fg:x="72459" fg:w="18"/><text x="95.2782%" y="431.50"></text></g><g><title>core::cmp::Ord::max (18 samples, 0.02%)</title><rect x="95.0282%" y="405" width="0.0236%" height="15" fill="rgb(244,48,7)" fg:x="72459" fg:w="18"/><text x="95.2782%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (12 samples, 0.02%)</title><rect x="95.0361%" y="389" width="0.0157%" height="15" fill="rgb(244,217,54)" fg:x="72465" fg:w="12"/><text x="95.2861%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.01%)</title><rect x="95.0518%" y="421" width="0.0144%" height="15" fill="rgb(224,15,18)" fg:x="72477" fg:w="11"/><text x="95.3018%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (269 samples, 0.35%)</title><rect x="94.7161%" y="437" width="0.3528%" height="15" fill="rgb(244,99,12)" fg:x="72221" fg:w="269"/><text x="94.9661%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (279 samples, 0.37%)</title><rect x="94.7056%" y="485" width="0.3659%" height="15" fill="rgb(233,226,8)" fg:x="72213" fg:w="279"/><text x="94.9556%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (277 samples, 0.36%)</title><rect x="94.7082%" y="469" width="0.3633%" height="15" fill="rgb(229,211,3)" fg:x="72215" fg:w="277"/><text x="94.9582%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (272 samples, 0.36%)</title><rect x="94.7148%" y="453" width="0.3567%" height="15" fill="rgb(216,140,21)" fg:x="72220" fg:w="272"/><text x="94.9648%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (305 samples, 0.40%)</title><rect x="94.6741%" y="501" width="0.4000%" height="15" fill="rgb(234,122,30)" fg:x="72189" fg:w="305"/><text x="94.9241%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (323 samples, 0.42%)</title><rect x="94.6728%" y="517" width="0.4236%" height="15" fill="rgb(236,25,46)" fg:x="72188" fg:w="323"/><text x="94.9228%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (17 samples, 0.02%)</title><rect x="95.0741%" y="501" width="0.0223%" height="15" fill="rgb(217,52,54)" fg:x="72494" fg:w="17"/><text x="95.3241%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (15 samples, 0.02%)</title><rect x="95.0767%" y="485" width="0.0197%" height="15" fill="rgb(222,29,26)" fg:x="72496" fg:w="15"/><text x="95.3267%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="95.1226%" y="469" width="0.0105%" height="15" fill="rgb(216,177,29)" fg:x="72531" fg:w="8"/><text x="95.3726%" y="479.50"></text></g><g><title>alloc::string::String::push_str (368 samples, 0.48%)</title><rect x="94.6702%" y="549" width="0.4826%" height="15" fill="rgb(247,136,51)" fg:x="72186" fg:w="368"/><text x="94.9202%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (366 samples, 0.48%)</title><rect x="94.6728%" y="533" width="0.4800%" height="15" fill="rgb(231,47,47)" fg:x="72188" fg:w="366"/><text x="94.9228%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (43 samples, 0.06%)</title><rect x="95.0964%" y="517" width="0.0564%" height="15" fill="rgb(211,192,36)" fg:x="72511" fg:w="43"/><text x="95.3464%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (43 samples, 0.06%)</title><rect x="95.0964%" y="501" width="0.0564%" height="15" fill="rgb(229,156,32)" fg:x="72511" fg:w="43"/><text x="95.3464%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (37 samples, 0.05%)</title><rect x="95.1043%" y="485" width="0.0485%" height="15" fill="rgb(248,213,20)" fg:x="72517" fg:w="37"/><text x="95.3543%" y="495.50"></text></g><g><title>core::ptr::null (15 samples, 0.02%)</title><rect x="95.1331%" y="469" width="0.0197%" height="15" fill="rgb(217,64,7)" fg:x="72539" fg:w="15"/><text x="95.3831%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (12 samples, 0.02%)</title><rect x="95.1370%" y="453" width="0.0157%" height="15" fill="rgb(232,142,8)" fg:x="72542" fg:w="12"/><text x="95.3870%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (8 samples, 0.01%)</title><rect x="95.2157%" y="453" width="0.0105%" height="15" fill="rgb(224,92,44)" fg:x="72602" fg:w="8"/><text x="95.4657%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="95.2446%" y="421" width="0.0118%" height="15" fill="rgb(214,169,17)" fg:x="72624" fg:w="9"/><text x="95.4946%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (24 samples, 0.03%)</title><rect x="95.2262%" y="453" width="0.0315%" height="15" fill="rgb(210,59,37)" fg:x="72610" fg:w="24"/><text x="95.4762%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (23 samples, 0.03%)</title><rect x="95.2275%" y="437" width="0.0302%" height="15" fill="rgb(214,116,48)" fg:x="72611" fg:w="23"/><text x="95.4775%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.01%)</title><rect x="95.3770%" y="373" width="0.0144%" height="15" fill="rgb(244,191,6)" fg:x="72725" fg:w="11"/><text x="95.6270%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (56 samples, 0.07%)</title><rect x="95.3311%" y="389" width="0.0734%" height="15" fill="rgb(241,50,52)" fg:x="72690" fg:w="56"/><text x="95.5811%" y="399.50"></text></g><g><title>core::ptr::null (10 samples, 0.01%)</title><rect x="95.3915%" y="373" width="0.0131%" height="15" fill="rgb(236,75,39)" fg:x="72736" fg:w="10"/><text x="95.6415%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (29 samples, 0.04%)</title><rect x="95.4623%" y="373" width="0.0380%" height="15" fill="rgb(236,99,0)" fg:x="72790" fg:w="29"/><text x="95.7123%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.03%)</title><rect x="95.4702%" y="357" width="0.0302%" height="15" fill="rgb(207,202,15)" fg:x="72796" fg:w="23"/><text x="95.7202%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (80 samples, 0.10%)</title><rect x="95.4046%" y="389" width="0.1049%" height="15" fill="rgb(233,207,14)" fg:x="72746" fg:w="80"/><text x="95.6546%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.20%)</title><rect x="95.3180%" y="405" width="0.2020%" height="15" fill="rgb(226,27,51)" fg:x="72680" fg:w="154"/><text x="95.5680%" y="415.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (8 samples, 0.01%)</title><rect x="95.5095%" y="389" width="0.0105%" height="15" fill="rgb(206,104,42)" fg:x="72826" fg:w="8"/><text x="95.7595%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (27 samples, 0.04%)</title><rect x="95.5384%" y="389" width="0.0354%" height="15" fill="rgb(212,225,4)" fg:x="72848" fg:w="27"/><text x="95.7884%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (13 samples, 0.02%)</title><rect x="95.5567%" y="373" width="0.0170%" height="15" fill="rgb(233,96,42)" fg:x="72862" fg:w="13"/><text x="95.8067%" y="383.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (19 samples, 0.02%)</title><rect x="95.5816%" y="373" width="0.0249%" height="15" fill="rgb(229,21,32)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (19 samples, 0.02%)</title><rect x="95.5816%" y="357" width="0.0249%" height="15" fill="rgb(226,216,24)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (19 samples, 0.02%)</title><rect x="95.5816%" y="341" width="0.0249%" height="15" fill="rgb(221,163,17)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (19 samples, 0.02%)</title><rect x="95.5816%" y="325" width="0.0249%" height="15" fill="rgb(216,216,42)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="95.5816%" y="309" width="0.0249%" height="15" fill="rgb(240,118,7)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="95.5816%" y="293" width="0.0249%" height="15" fill="rgb(221,67,37)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="95.5816%" y="277" width="0.0249%" height="15" fill="rgb(241,32,44)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="95.5816%" y="261" width="0.0249%" height="15" fill="rgb(235,204,43)" fg:x="72881" fg:w="19"/><text x="95.8316%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="95.5882%" y="245" width="0.0184%" height="15" fill="rgb(213,116,10)" fg:x="72886" fg:w="14"/><text x="95.8382%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.02%)</title><rect x="95.5882%" y="229" width="0.0184%" height="15" fill="rgb(239,15,48)" fg:x="72886" fg:w="14"/><text x="95.8382%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="95.5882%" y="213" width="0.0184%" height="15" fill="rgb(207,123,36)" fg:x="72886" fg:w="14"/><text x="95.8382%" y="223.50"></text></g><g><title>alloc::string::String::new (30 samples, 0.04%)</title><rect x="95.6275%" y="341" width="0.0393%" height="15" fill="rgb(209,103,30)" fg:x="72916" fg:w="30"/><text x="95.8775%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (39 samples, 0.05%)</title><rect x="95.7928%" y="197" width="0.0511%" height="15" fill="rgb(238,100,19)" fg:x="73042" fg:w="39"/><text x="96.0428%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="95.8072%" y="181" width="0.0367%" height="15" fill="rgb(244,30,14)" fg:x="73053" fg:w="28"/><text x="96.0572%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (95 samples, 0.12%)</title><rect x="95.7390%" y="229" width="0.1246%" height="15" fill="rgb(249,174,6)" fg:x="73001" fg:w="95"/><text x="95.9890%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (94 samples, 0.12%)</title><rect x="95.7403%" y="213" width="0.1233%" height="15" fill="rgb(235,213,41)" fg:x="73002" fg:w="94"/><text x="95.9903%" y="223.50"></text></g><g><title>core::ptr::null_mut (15 samples, 0.02%)</title><rect x="95.8439%" y="197" width="0.0197%" height="15" fill="rgb(213,118,6)" fg:x="73081" fg:w="15"/><text x="96.0939%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="95.8452%" y="181" width="0.0184%" height="15" fill="rgb(235,44,51)" fg:x="73082" fg:w="14"/><text x="96.0952%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (20 samples, 0.03%)</title><rect x="95.8741%" y="197" width="0.0262%" height="15" fill="rgb(217,9,53)" fg:x="73104" fg:w="20"/><text x="96.1241%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="95.9475%" y="165" width="0.0144%" height="15" fill="rgb(237,172,34)" fg:x="73160" fg:w="11"/><text x="96.1975%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.02%)</title><rect x="95.9620%" y="165" width="0.0197%" height="15" fill="rgb(206,206,11)" fg:x="73171" fg:w="15"/><text x="96.2120%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (27 samples, 0.04%)</title><rect x="95.9816%" y="165" width="0.0354%" height="15" fill="rgb(214,149,29)" fg:x="73186" fg:w="27"/><text x="96.2316%" y="175.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (10 samples, 0.01%)</title><rect x="96.0039%" y="149" width="0.0131%" height="15" fill="rgb(208,123,3)" fg:x="73203" fg:w="10"/><text x="96.2539%" y="159.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="96.0931%" y="101" width="0.0236%" height="15" fill="rgb(229,126,4)" fg:x="73271" fg:w="18"/><text x="96.3431%" y="111.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.04%)</title><rect x="96.0852%" y="117" width="0.0367%" height="15" fill="rgb(222,92,36)" fg:x="73265" fg:w="28"/><text x="96.3352%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::size (10 samples, 0.01%)</title><rect x="96.1220%" y="117" width="0.0131%" height="15" fill="rgb(216,39,41)" fg:x="73293" fg:w="10"/><text x="96.3720%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (27 samples, 0.04%)</title><rect x="96.1902%" y="85" width="0.0354%" height="15" fill="rgb(253,127,28)" fg:x="73345" fg:w="27"/><text x="96.4402%" y="95.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (16 samples, 0.02%)</title><rect x="96.2046%" y="69" width="0.0210%" height="15" fill="rgb(249,152,51)" fg:x="73356" fg:w="16"/><text x="96.4546%" y="79.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (76 samples, 0.10%)</title><rect x="96.1377%" y="117" width="0.0997%" height="15" fill="rgb(209,123,42)" fg:x="73305" fg:w="76"/><text x="96.3877%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (70 samples, 0.09%)</title><rect x="96.1456%" y="101" width="0.0918%" height="15" fill="rgb(241,118,22)" fg:x="73311" fg:w="70"/><text x="96.3956%" y="111.50"></text></g><g><title>core::ptr::null_mut (9 samples, 0.01%)</title><rect x="96.2256%" y="85" width="0.0118%" height="15" fill="rgb(208,25,7)" fg:x="73372" fg:w="9"/><text x="96.4756%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (152 samples, 0.20%)</title><rect x="96.0420%" y="149" width="0.1993%" height="15" fill="rgb(243,144,39)" fg:x="73232" fg:w="152"/><text x="96.2920%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (150 samples, 0.20%)</title><rect x="96.0446%" y="133" width="0.1967%" height="15" fill="rgb(250,50,5)" fg:x="73234" fg:w="150"/><text x="96.2946%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="96.2413%" y="149" width="0.0157%" height="15" fill="rgb(207,67,11)" fg:x="73384" fg:w="12"/><text x="96.4913%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (234 samples, 0.31%)</title><rect x="96.0170%" y="165" width="0.3069%" height="15" fill="rgb(245,204,40)" fg:x="73213" fg:w="234"/><text x="96.2670%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (51 samples, 0.07%)</title><rect x="96.2570%" y="149" width="0.0669%" height="15" fill="rgb(238,228,24)" fg:x="73396" fg:w="51"/><text x="96.5070%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (8 samples, 0.01%)</title><rect x="96.4761%" y="133" width="0.0105%" height="15" fill="rgb(217,116,22)" fg:x="73563" fg:w="8"/><text x="96.7261%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (11 samples, 0.01%)</title><rect x="96.4866%" y="133" width="0.0144%" height="15" fill="rgb(234,98,12)" fg:x="73571" fg:w="11"/><text x="96.7366%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (138 samples, 0.18%)</title><rect x="96.3266%" y="149" width="0.1810%" height="15" fill="rgb(242,170,50)" fg:x="73449" fg:w="138"/><text x="96.5766%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array (141 samples, 0.18%)</title><rect x="96.3239%" y="165" width="0.1849%" height="15" fill="rgb(235,7,5)" fg:x="73447" fg:w="141"/><text x="96.5739%" y="175.50"></text></g><g><title>core::cmp::max (56 samples, 0.07%)</title><rect x="96.5089%" y="165" width="0.0734%" height="15" fill="rgb(241,114,28)" fg:x="73588" fg:w="56"/><text x="96.7589%" y="175.50"></text></g><g><title>core::cmp::Ord::max (54 samples, 0.07%)</title><rect x="96.5115%" y="149" width="0.0708%" height="15" fill="rgb(246,112,42)" fg:x="73590" fg:w="54"/><text x="96.7615%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.02%)</title><rect x="96.5574%" y="133" width="0.0249%" height="15" fill="rgb(248,228,14)" fg:x="73625" fg:w="19"/><text x="96.8074%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (49 samples, 0.06%)</title><rect x="96.5823%" y="165" width="0.0643%" height="15" fill="rgb(208,133,18)" fg:x="73644" fg:w="49"/><text x="96.8323%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (24 samples, 0.03%)</title><rect x="96.6151%" y="149" width="0.0315%" height="15" fill="rgb(207,35,49)" fg:x="73669" fg:w="24"/><text x="96.8651%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (573 samples, 0.75%)</title><rect x="95.9056%" y="181" width="0.7515%" height="15" fill="rgb(205,68,36)" fg:x="73128" fg:w="573"/><text x="96.1556%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (8 samples, 0.01%)</title><rect x="96.6466%" y="165" width="0.0105%" height="15" fill="rgb(245,62,40)" fg:x="73693" fg:w="8"/><text x="96.8966%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (608 samples, 0.80%)</title><rect x="95.8675%" y="229" width="0.7974%" height="15" fill="rgb(228,27,24)" fg:x="73099" fg:w="608"/><text x="96.1175%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (607 samples, 0.80%)</title><rect x="95.8689%" y="213" width="0.7961%" height="15" fill="rgb(253,19,12)" fg:x="73100" fg:w="607"/><text x="96.1189%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (583 samples, 0.76%)</title><rect x="95.9003%" y="197" width="0.7646%" height="15" fill="rgb(232,28,20)" fg:x="73124" fg:w="583"/><text x="96.1503%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (734 samples, 0.96%)</title><rect x="95.7075%" y="245" width="0.9626%" height="15" fill="rgb(218,35,51)" fg:x="72977" fg:w="734"/><text x="95.9575%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (791 samples, 1.04%)</title><rect x="95.7062%" y="261" width="1.0374%" height="15" fill="rgb(212,90,40)" fg:x="72976" fg:w="791"/><text x="95.9562%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (56 samples, 0.07%)</title><rect x="96.6702%" y="245" width="0.0734%" height="15" fill="rgb(220,172,12)" fg:x="73711" fg:w="56"/><text x="96.9202%" y="255.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (45 samples, 0.06%)</title><rect x="96.6846%" y="229" width="0.0590%" height="15" fill="rgb(226,159,20)" fg:x="73722" fg:w="45"/><text x="96.9346%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts (14 samples, 0.02%)</title><rect x="96.7252%" y="213" width="0.0184%" height="15" fill="rgb(234,205,16)" fg:x="73753" fg:w="14"/><text x="96.9752%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts (11 samples, 0.01%)</title><rect x="96.7292%" y="197" width="0.0144%" height="15" fill="rgb(207,9,39)" fg:x="73756" fg:w="11"/><text x="96.9792%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.01%)</title><rect x="96.7292%" y="181" width="0.0144%" height="15" fill="rgb(249,143,15)" fg:x="73756" fg:w="11"/><text x="96.9792%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (25 samples, 0.03%)</title><rect x="96.8433%" y="213" width="0.0328%" height="15" fill="rgb(253,133,29)" fg:x="73843" fg:w="25"/><text x="97.0933%" y="223.50"></text></g><g><title>core::ptr::invalid (11 samples, 0.01%)</title><rect x="96.8761%" y="197" width="0.0144%" height="15" fill="rgb(221,187,0)" fg:x="73868" fg:w="11"/><text x="97.1261%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (930 samples, 1.22%)</title><rect x="95.6905%" y="277" width="1.2197%" height="15" fill="rgb(205,204,26)" fg:x="72964" fg:w="930"/><text x="95.9405%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (127 samples, 0.17%)</title><rect x="96.7436%" y="261" width="0.1666%" height="15" fill="rgb(224,68,54)" fg:x="73767" fg:w="127"/><text x="96.9936%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (125 samples, 0.16%)</title><rect x="96.7462%" y="245" width="0.1639%" height="15" fill="rgb(209,67,4)" fg:x="73769" fg:w="125"/><text x="96.9962%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (99 samples, 0.13%)</title><rect x="96.7803%" y="229" width="0.1298%" height="15" fill="rgb(228,229,18)" fg:x="73795" fg:w="99"/><text x="97.0303%" y="239.50"></text></g><g><title>core::ptr::null (26 samples, 0.03%)</title><rect x="96.8761%" y="213" width="0.0341%" height="15" fill="rgb(231,89,13)" fg:x="73868" fg:w="26"/><text x="97.1261%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (15 samples, 0.02%)</title><rect x="96.8905%" y="197" width="0.0197%" height="15" fill="rgb(210,182,18)" fg:x="73879" fg:w="15"/><text x="97.1405%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (941 samples, 1.23%)</title><rect x="95.6826%" y="309" width="1.2341%" height="15" fill="rgb(240,105,2)" fg:x="72958" fg:w="941"/><text x="95.9326%" y="319.50"></text></g><g><title>alloc::string::String::push_str (937 samples, 1.23%)</title><rect x="95.6879%" y="293" width="1.2289%" height="15" fill="rgb(207,170,50)" fg:x="72962" fg:w="937"/><text x="95.9379%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (970 samples, 1.27%)</title><rect x="95.6708%" y="341" width="1.2721%" height="15" fill="rgb(232,133,24)" fg:x="72949" fg:w="970"/><text x="95.9208%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (965 samples, 1.27%)</title><rect x="95.6774%" y="325" width="1.2656%" height="15" fill="rgb(235,166,27)" fg:x="72954" fg:w="965"/><text x="95.9274%" y="335.50"></text></g><g><title>core::fmt::Formatter::pad_integral (20 samples, 0.03%)</title><rect x="96.9167%" y="309" width="0.0262%" height="15" fill="rgb(209,19,13)" fg:x="73899" fg:w="20"/><text x="97.1667%" y="319.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,025 samples, 1.34%)</title><rect x="95.6131%" y="357" width="1.3443%" height="15" fill="rgb(226,79,39)" fg:x="72905" fg:w="1025"/><text x="95.8631%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (11 samples, 0.01%)</title><rect x="96.9430%" y="341" width="0.0144%" height="15" fill="rgb(222,163,10)" fg:x="73919" fg:w="11"/><text x="97.1930%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (19 samples, 0.02%)</title><rect x="96.9967%" y="293" width="0.0249%" height="15" fill="rgb(214,44,19)" fg:x="73960" fg:w="19"/><text x="97.2467%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="97.0085%" y="277" width="0.0131%" height="15" fill="rgb(210,217,13)" fg:x="73969" fg:w="10"/><text x="97.2585%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (55 samples, 0.07%)</title><rect x="96.9574%" y="357" width="0.0721%" height="15" fill="rgb(237,61,54)" fg:x="73930" fg:w="55"/><text x="97.2074%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (54 samples, 0.07%)</title><rect x="96.9587%" y="341" width="0.0708%" height="15" fill="rgb(226,184,24)" fg:x="73931" fg:w="54"/><text x="97.2087%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (54 samples, 0.07%)</title><rect x="96.9587%" y="325" width="0.0708%" height="15" fill="rgb(223,226,4)" fg:x="73931" fg:w="54"/><text x="97.2087%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (51 samples, 0.07%)</title><rect x="96.9626%" y="309" width="0.0669%" height="15" fill="rgb(210,26,41)" fg:x="73934" fg:w="51"/><text x="97.2126%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (28 samples, 0.04%)</title><rect x="97.0728%" y="293" width="0.0367%" height="15" fill="rgb(220,221,6)" fg:x="74018" fg:w="28"/><text x="97.3228%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="97.0807%" y="277" width="0.0289%" height="15" fill="rgb(225,89,49)" fg:x="74024" fg:w="22"/><text x="97.3307%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (61 samples, 0.08%)</title><rect x="97.0321%" y="341" width="0.0800%" height="15" fill="rgb(218,70,45)" fg:x="73987" fg:w="61"/><text x="97.2821%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (45 samples, 0.06%)</title><rect x="97.0531%" y="325" width="0.0590%" height="15" fill="rgb(238,166,21)" fg:x="74003" fg:w="45"/><text x="97.3031%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (44 samples, 0.06%)</title><rect x="97.0544%" y="309" width="0.0577%" height="15" fill="rgb(224,141,44)" fg:x="74004" fg:w="44"/><text x="97.3044%" y="319.50"></text></g><g><title>alloc::string::String::push (68 samples, 0.09%)</title><rect x="97.0295%" y="357" width="0.0892%" height="15" fill="rgb(230,12,49)" fg:x="73985" fg:w="68"/><text x="97.2795%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.02%)</title><rect x="97.1580%" y="261" width="0.0170%" height="15" fill="rgb(212,174,12)" fg:x="74083" fg:w="13"/><text x="97.4080%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="97.1633%" y="245" width="0.0118%" height="15" fill="rgb(246,67,9)" fg:x="74087" fg:w="9"/><text x="97.4133%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (34 samples, 0.04%)</title><rect x="97.1357%" y="293" width="0.0446%" height="15" fill="rgb(239,35,23)" fg:x="74066" fg:w="34"/><text x="97.3857%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33 samples, 0.04%)</title><rect x="97.1370%" y="277" width="0.0433%" height="15" fill="rgb(211,167,0)" fg:x="74067" fg:w="33"/><text x="97.3870%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (44 samples, 0.06%)</title><rect x="97.1279%" y="309" width="0.0577%" height="15" fill="rgb(225,119,45)" fg:x="74060" fg:w="44"/><text x="97.3779%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (73 samples, 0.10%)</title><rect x="97.1266%" y="325" width="0.0957%" height="15" fill="rgb(210,162,6)" fg:x="74059" fg:w="73"/><text x="97.3766%" y="335.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (28 samples, 0.04%)</title><rect x="97.1856%" y="309" width="0.0367%" height="15" fill="rgb(208,118,35)" fg:x="74104" fg:w="28"/><text x="97.4356%" y="319.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (24 samples, 0.03%)</title><rect x="97.1908%" y="293" width="0.0315%" height="15" fill="rgb(239,4,53)" fg:x="74108" fg:w="24"/><text x="97.4408%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.02%)</title><rect x="97.2800%" y="277" width="0.0184%" height="15" fill="rgb(213,130,21)" fg:x="74176" fg:w="14"/><text x="97.5300%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (153 samples, 0.20%)</title><rect x="97.1213%" y="341" width="0.2007%" height="15" fill="rgb(235,148,0)" fg:x="74055" fg:w="153"/><text x="97.3713%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (76 samples, 0.10%)</title><rect x="97.2223%" y="325" width="0.0997%" height="15" fill="rgb(244,224,18)" fg:x="74132" fg:w="76"/><text x="97.4723%" y="335.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (76 samples, 0.10%)</title><rect x="97.2223%" y="309" width="0.0997%" height="15" fill="rgb(211,214,4)" fg:x="74132" fg:w="76"/><text x="97.4723%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (59 samples, 0.08%)</title><rect x="97.2446%" y="293" width="0.0774%" height="15" fill="rgb(206,119,25)" fg:x="74149" fg:w="59"/><text x="97.4946%" y="303.50"></text></g><g><title>core::ptr::null (18 samples, 0.02%)</title><rect x="97.2984%" y="277" width="0.0236%" height="15" fill="rgb(243,93,47)" fg:x="74190" fg:w="18"/><text x="97.5484%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.01%)</title><rect x="97.3075%" y="261" width="0.0144%" height="15" fill="rgb(224,194,6)" fg:x="74197" fg:w="11"/><text x="97.5575%" y="271.50"></text></g><g><title>alloc::string::String::push_str (156 samples, 0.20%)</title><rect x="97.1187%" y="357" width="0.2046%" height="15" fill="rgb(243,229,6)" fg:x="74053" fg:w="156"/><text x="97.3687%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (23 samples, 0.03%)</title><rect x="97.3521%" y="277" width="0.0302%" height="15" fill="rgb(207,23,50)" fg:x="74231" fg:w="23"/><text x="97.6021%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (14 samples, 0.02%)</title><rect x="97.3639%" y="261" width="0.0184%" height="15" fill="rgb(253,192,32)" fg:x="74240" fg:w="14"/><text x="97.6139%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (44 samples, 0.06%)</title><rect x="97.3259%" y="309" width="0.0577%" height="15" fill="rgb(213,21,6)" fg:x="74211" fg:w="44"/><text x="97.5759%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (42 samples, 0.06%)</title><rect x="97.3285%" y="293" width="0.0551%" height="15" fill="rgb(243,151,13)" fg:x="74213" fg:w="42"/><text x="97.5785%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.06%)</title><rect x="97.3259%" y="325" width="0.0590%" height="15" fill="rgb(233,165,41)" fg:x="74211" fg:w="45"/><text x="97.5759%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="97.4007%" y="293" width="0.0262%" height="15" fill="rgb(246,176,45)" fg:x="74268" fg:w="20"/><text x="97.6507%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="97.4059%" y="277" width="0.0210%" height="15" fill="rgb(217,170,52)" fg:x="74272" fg:w="16"/><text x="97.6559%" y="287.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="97.4164%" y="261" width="0.0105%" height="15" fill="rgb(214,203,54)" fg:x="74280" fg:w="8"/><text x="97.6664%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (10 samples, 0.01%)</title><rect x="97.5174%" y="245" width="0.0131%" height="15" fill="rgb(248,215,49)" fg:x="74357" fg:w="10"/><text x="97.7674%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (66 samples, 0.09%)</title><rect x="97.4452%" y="261" width="0.0866%" height="15" fill="rgb(208,46,10)" fg:x="74302" fg:w="66"/><text x="97.6952%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (68 samples, 0.09%)</title><rect x="97.4439%" y="277" width="0.0892%" height="15" fill="rgb(254,5,31)" fg:x="74301" fg:w="68"/><text x="97.6939%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,540 samples, 2.02%)</title><rect x="95.5200%" y="405" width="2.0197%" height="15" fill="rgb(222,104,33)" fg:x="72834" fg:w="1540"/><text x="95.7700%" y="415.50">c..</text></g><g><title>day1::day16_part2::get_key::{{closure}} (1,499 samples, 1.97%)</title><rect x="95.5738%" y="389" width="1.9659%" height="15" fill="rgb(248,49,16)" fg:x="72875" fg:w="1499"/><text x="95.8238%" y="399.50">d..</text></g><g><title>day1::day16_part2::Player::to_string (1,474 samples, 1.93%)</title><rect x="95.6066%" y="373" width="1.9331%" height="15" fill="rgb(232,198,41)" fg:x="72900" fg:w="1474"/><text x="95.8566%" y="383.50">d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (165 samples, 0.22%)</title><rect x="97.3233%" y="357" width="0.2164%" height="15" fill="rgb(214,125,3)" fg:x="74209" fg:w="165"/><text x="97.5733%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (163 samples, 0.21%)</title><rect x="97.3259%" y="341" width="0.2138%" height="15" fill="rgb(229,220,28)" fg:x="74211" fg:w="163"/><text x="97.5759%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (118 samples, 0.15%)</title><rect x="97.3849%" y="325" width="0.1548%" height="15" fill="rgb(222,64,37)" fg:x="74256" fg:w="118"/><text x="97.6349%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.15%)</title><rect x="97.3889%" y="309" width="0.1508%" height="15" fill="rgb(249,184,13)" fg:x="74259" fg:w="115"/><text x="97.6389%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (86 samples, 0.11%)</title><rect x="97.4269%" y="293" width="0.1128%" height="15" fill="rgb(252,176,6)" fg:x="74288" fg:w="86"/><text x="97.6769%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,733 samples, 2.27%)</title><rect x="95.2721%" y="437" width="2.2728%" height="15" fill="rgb(228,153,7)" fg:x="72645" fg:w="1733"/><text x="95.5221%" y="447.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,720 samples, 2.26%)</title><rect x="95.2892%" y="421" width="2.2557%" height="15" fill="rgb(242,193,5)" fg:x="72658" fg:w="1720"/><text x="95.5392%" y="431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,794 samples, 2.35%)</title><rect x="95.1974%" y="485" width="2.3528%" height="15" fill="rgb(232,140,9)" fg:x="72588" fg:w="1794"/><text x="95.4474%" y="495.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,791 samples, 2.35%)</title><rect x="95.2013%" y="469" width="2.3489%" height="15" fill="rgb(213,222,16)" fg:x="72591" fg:w="1791"/><text x="95.4513%" y="479.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,746 samples, 2.29%)</title><rect x="95.2603%" y="453" width="2.2898%" height="15" fill="rgb(222,75,50)" fg:x="72636" fg:w="1746"/><text x="95.5103%" y="463.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.02%)</title><rect x="97.5502%" y="485" width="0.0170%" height="15" fill="rgb(205,180,2)" fg:x="74382" fg:w="13"/><text x="97.8002%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (9 samples, 0.01%)</title><rect x="97.5554%" y="469" width="0.0118%" height="15" fill="rgb(216,34,7)" fg:x="74386" fg:w="9"/><text x="97.8054%" y="479.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="97.6170%" y="373" width="0.0197%" height="15" fill="rgb(253,16,32)" fg:x="74433" fg:w="15"/><text x="97.8670%" y="383.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="97.6079%" y="389" width="0.0341%" height="15" fill="rgb(208,97,28)" fg:x="74426" fg:w="26"/><text x="97.8579%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (11 samples, 0.01%)</title><rect x="97.6643%" y="357" width="0.0144%" height="15" fill="rgb(225,92,11)" fg:x="74469" fg:w="11"/><text x="97.9143%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="97.6669%" y="341" width="0.0118%" height="15" fill="rgb(243,38,12)" fg:x="74471" fg:w="9"/><text x="97.9169%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (33 samples, 0.04%)</title><rect x="97.6446%" y="389" width="0.0433%" height="15" fill="rgb(208,139,16)" fg:x="74454" fg:w="33"/><text x="97.8946%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33 samples, 0.04%)</title><rect x="97.6446%" y="373" width="0.0433%" height="15" fill="rgb(227,24,9)" fg:x="74454" fg:w="33"/><text x="97.8946%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.09%)</title><rect x="97.5948%" y="421" width="0.0944%" height="15" fill="rgb(206,62,11)" fg:x="74416" fg:w="72"/><text x="97.8448%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.09%)</title><rect x="97.5948%" y="405" width="0.0944%" height="15" fill="rgb(228,134,27)" fg:x="74416" fg:w="72"/><text x="97.8448%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (32 samples, 0.04%)</title><rect x="97.6892%" y="421" width="0.0420%" height="15" fill="rgb(205,55,33)" fg:x="74488" fg:w="32"/><text x="97.9392%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (32 samples, 0.04%)</title><rect x="97.6892%" y="405" width="0.0420%" height="15" fill="rgb(243,75,43)" fg:x="74488" fg:w="32"/><text x="97.9392%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,973 samples, 2.59%)</title><rect x="95.1528%" y="549" width="2.5875%" height="15" fill="rgb(223,27,42)" fg:x="72554" fg:w="1973"/><text x="95.4028%" y="559.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,965 samples, 2.58%)</title><rect x="95.1633%" y="533" width="2.5770%" height="15" fill="rgb(232,189,33)" fg:x="72562" fg:w="1965"/><text x="95.4133%" y="543.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,952 samples, 2.56%)</title><rect x="95.1803%" y="517" width="2.5600%" height="15" fill="rgb(210,9,39)" fg:x="72575" fg:w="1952"/><text x="95.4303%" y="527.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,952 samples, 2.56%)</title><rect x="95.1803%" y="501" width="2.5600%" height="15" fill="rgb(242,85,26)" fg:x="72575" fg:w="1952"/><text x="95.4303%" y="511.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (132 samples, 0.17%)</title><rect x="97.5672%" y="485" width="0.1731%" height="15" fill="rgb(248,44,4)" fg:x="74395" fg:w="132"/><text x="97.8172%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (132 samples, 0.17%)</title><rect x="97.5672%" y="469" width="0.1731%" height="15" fill="rgb(250,96,46)" fg:x="74395" fg:w="132"/><text x="97.8172%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (131 samples, 0.17%)</title><rect x="97.5685%" y="453" width="0.1718%" height="15" fill="rgb(229,116,26)" fg:x="74396" fg:w="131"/><text x="97.8185%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (131 samples, 0.17%)</title><rect x="97.5685%" y="437" width="0.1718%" height="15" fill="rgb(246,94,34)" fg:x="74396" fg:w="131"/><text x="97.8185%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="97.7639%" y="469" width="0.0131%" height="15" fill="rgb(251,73,21)" fg:x="74545" fg:w="10"/><text x="98.0139%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (31 samples, 0.04%)</title><rect x="97.7456%" y="501" width="0.0407%" height="15" fill="rgb(254,121,25)" fg:x="74531" fg:w="31"/><text x="97.9956%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (28 samples, 0.04%)</title><rect x="97.7495%" y="485" width="0.0367%" height="15" fill="rgb(215,161,49)" fg:x="74534" fg:w="28"/><text x="97.9995%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.04%)</title><rect x="97.7443%" y="517" width="0.0433%" height="15" fill="rgb(221,43,13)" fg:x="74530" fg:w="33"/><text x="97.9943%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="97.7941%" y="485" width="0.0157%" height="15" fill="rgb(249,5,37)" fg:x="74568" fg:w="12"/><text x="98.0441%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="97.7967%" y="469" width="0.0131%" height="15" fill="rgb(226,25,44)" fg:x="74570" fg:w="10"/><text x="98.0467%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (13 samples, 0.02%)</title><rect x="97.8295%" y="453" width="0.0170%" height="15" fill="rgb(238,189,16)" fg:x="74595" fg:w="13"/><text x="98.0795%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="97.8269%" y="469" width="0.0210%" height="15" fill="rgb(251,186,8)" fg:x="74593" fg:w="16"/><text x="98.0769%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (84 samples, 0.11%)</title><rect x="97.7430%" y="549" width="0.1102%" height="15" fill="rgb(254,34,31)" fg:x="74529" fg:w="84"/><text x="97.9930%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (83 samples, 0.11%)</title><rect x="97.7443%" y="533" width="0.1089%" height="15" fill="rgb(225,215,27)" fg:x="74530" fg:w="83"/><text x="97.9943%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (50 samples, 0.07%)</title><rect x="97.7875%" y="517" width="0.0656%" height="15" fill="rgb(221,192,48)" fg:x="74563" fg:w="50"/><text x="98.0375%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.07%)</title><rect x="97.7875%" y="501" width="0.0656%" height="15" fill="rgb(219,137,20)" fg:x="74563" fg:w="50"/><text x="98.0375%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (33 samples, 0.04%)</title><rect x="97.8098%" y="485" width="0.0433%" height="15" fill="rgb(219,84,11)" fg:x="74580" fg:w="33"/><text x="98.0598%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="97.8833%" y="485" width="0.0197%" height="15" fill="rgb(224,10,23)" fg:x="74636" fg:w="15"/><text x="98.1333%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="97.8911%" y="469" width="0.0118%" height="15" fill="rgb(248,22,39)" fg:x="74642" fg:w="9"/><text x="98.1411%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (29 samples, 0.04%)</title><rect x="97.8689%" y="517" width="0.0380%" height="15" fill="rgb(212,154,20)" fg:x="74625" fg:w="29"/><text x="98.1189%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (27 samples, 0.04%)</title><rect x="97.8715%" y="501" width="0.0354%" height="15" fill="rgb(236,199,50)" fg:x="74627" fg:w="27"/><text x="98.1215%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (22 samples, 0.03%)</title><rect x="97.9370%" y="421" width="0.0289%" height="15" fill="rgb(211,9,17)" fg:x="74677" fg:w="22"/><text x="98.1870%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (16 samples, 0.02%)</title><rect x="97.9449%" y="405" width="0.0210%" height="15" fill="rgb(243,216,36)" fg:x="74683" fg:w="16"/><text x="98.1949%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.05%)</title><rect x="97.9226%" y="469" width="0.0498%" height="15" fill="rgb(250,2,10)" fg:x="74666" fg:w="38"/><text x="98.1726%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (37 samples, 0.05%)</title><rect x="97.9239%" y="453" width="0.0485%" height="15" fill="rgb(226,50,48)" fg:x="74667" fg:w="37"/><text x="98.1739%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (36 samples, 0.05%)</title><rect x="97.9252%" y="437" width="0.0472%" height="15" fill="rgb(243,81,16)" fg:x="74668" fg:w="36"/><text x="98.1752%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.03%)</title><rect x="97.9869%" y="437" width="0.0275%" height="15" fill="rgb(250,14,2)" fg:x="74715" fg:w="21"/><text x="98.2369%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="97.9934%" y="421" width="0.0210%" height="15" fill="rgb(233,135,29)" fg:x="74720" fg:w="16"/><text x="98.2434%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (57 samples, 0.07%)</title><rect x="98.0341%" y="421" width="0.0748%" height="15" fill="rgb(224,64,43)" fg:x="74751" fg:w="57"/><text x="98.2841%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (57 samples, 0.07%)</title><rect x="98.0341%" y="405" width="0.0748%" height="15" fill="rgb(238,84,13)" fg:x="74751" fg:w="57"/><text x="98.2841%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (195 samples, 0.26%)</title><rect x="97.8623%" y="533" width="0.2557%" height="15" fill="rgb(253,48,26)" fg:x="74620" fg:w="195"/><text x="98.1123%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (161 samples, 0.21%)</title><rect x="97.9069%" y="517" width="0.2111%" height="15" fill="rgb(205,223,31)" fg:x="74654" fg:w="161"/><text x="98.1569%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (152 samples, 0.20%)</title><rect x="97.9187%" y="501" width="0.1993%" height="15" fill="rgb(221,41,32)" fg:x="74663" fg:w="152"/><text x="98.1687%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (151 samples, 0.20%)</title><rect x="97.9200%" y="485" width="0.1980%" height="15" fill="rgb(213,158,31)" fg:x="74664" fg:w="151"/><text x="98.1700%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (111 samples, 0.15%)</title><rect x="97.9725%" y="469" width="0.1456%" height="15" fill="rgb(245,126,43)" fg:x="74704" fg:w="111"/><text x="98.2225%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.14%)</title><rect x="97.9738%" y="453" width="0.1443%" height="15" fill="rgb(227,7,22)" fg:x="74705" fg:w="110"/><text x="98.2238%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (79 samples, 0.10%)</title><rect x="98.0144%" y="437" width="0.1036%" height="15" fill="rgb(252,90,44)" fg:x="74736" fg:w="79"/><text x="98.2644%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="98.1364%" y="501" width="0.0223%" height="15" fill="rgb(253,91,0)" fg:x="74829" fg:w="17"/><text x="98.3864%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="98.1430%" y="485" width="0.0157%" height="15" fill="rgb(252,175,49)" fg:x="74834" fg:w="12"/><text x="98.3930%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (24 samples, 0.03%)</title><rect x="98.1692%" y="485" width="0.0315%" height="15" fill="rgb(246,150,1)" fg:x="74854" fg:w="24"/><text x="98.4192%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (24 samples, 0.03%)</title><rect x="98.1692%" y="469" width="0.0315%" height="15" fill="rgb(241,192,25)" fg:x="74854" fg:w="24"/><text x="98.4192%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (270 samples, 0.35%)</title><rect x="97.8531%" y="549" width="0.3541%" height="15" fill="rgb(239,187,11)" fg:x="74613" fg:w="270"/><text x="98.1031%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (68 samples, 0.09%)</title><rect x="98.1180%" y="533" width="0.0892%" height="15" fill="rgb(218,202,51)" fg:x="74815" fg:w="68"/><text x="98.3680%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.09%)</title><rect x="98.1180%" y="517" width="0.0892%" height="15" fill="rgb(225,176,8)" fg:x="74815" fg:w="68"/><text x="98.3680%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (37 samples, 0.05%)</title><rect x="98.1587%" y="501" width="0.0485%" height="15" fill="rgb(219,122,41)" fg:x="74846" fg:w="37"/><text x="98.4087%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="98.2348%" y="501" width="0.0131%" height="15" fill="rgb(248,140,20)" fg:x="74904" fg:w="10"/><text x="98.4848%" y="511.50"></text></g><g><title>day1::day16_part2::get_key (4,292 samples, 5.63%)</title><rect x="92.6269%" y="565" width="5.6289%" height="15" fill="rgb(245,41,37)" fg:x="70628" fg:w="4292"/><text x="92.8769%" y="575.50">day1::d..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (37 samples, 0.05%)</title><rect x="98.2072%" y="549" width="0.0485%" height="15" fill="rgb(235,82,39)" fg:x="74883" fg:w="37"/><text x="98.4572%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (37 samples, 0.05%)</title><rect x="98.2072%" y="533" width="0.0485%" height="15" fill="rgb(230,108,42)" fg:x="74883" fg:w="37"/><text x="98.4572%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (31 samples, 0.04%)</title><rect x="98.2151%" y="517" width="0.0407%" height="15" fill="rgb(215,150,50)" fg:x="74889" fg:w="31"/><text x="98.4651%" y="527.50"></text></g><g><title>day1::day16_part2::is_bit_set (15 samples, 0.02%)</title><rect x="98.2557%" y="565" width="0.0197%" height="15" fill="rgb(233,212,5)" fg:x="74920" fg:w="15"/><text x="98.5057%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.02%)</title><rect x="98.3134%" y="437" width="0.0249%" height="15" fill="rgb(245,80,22)" fg:x="74964" fg:w="19"/><text x="98.5634%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (67 samples, 0.09%)</title><rect x="98.3043%" y="485" width="0.0879%" height="15" fill="rgb(238,129,16)" fg:x="74957" fg:w="67"/><text x="98.5543%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (65 samples, 0.09%)</title><rect x="98.3069%" y="469" width="0.0852%" height="15" fill="rgb(240,19,0)" fg:x="74959" fg:w="65"/><text x="98.5569%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (65 samples, 0.09%)</title><rect x="98.3069%" y="453" width="0.0852%" height="15" fill="rgb(232,42,35)" fg:x="74959" fg:w="65"/><text x="98.5569%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (41 samples, 0.05%)</title><rect x="98.3384%" y="437" width="0.0538%" height="15" fill="rgb(223,130,24)" fg:x="74983" fg:w="41"/><text x="98.5884%" y="447.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="98.3948%" y="469" width="0.0236%" height="15" fill="rgb(237,16,22)" fg:x="75026" fg:w="18"/><text x="98.6448%" y="479.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.01%)</title><rect x="98.4197%" y="453" width="0.0105%" height="15" fill="rgb(248,192,20)" fg:x="75045" fg:w="8"/><text x="98.6697%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (35 samples, 0.05%)</title><rect x="98.3921%" y="485" width="0.0459%" height="15" fill="rgb(233,167,2)" fg:x="75024" fg:w="35"/><text x="98.6421%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.02%)</title><rect x="98.4184%" y="469" width="0.0197%" height="15" fill="rgb(252,71,44)" fg:x="75044" fg:w="15"/><text x="98.6684%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="98.4577%" y="389" width="0.0118%" height="15" fill="rgb(238,37,47)" fg:x="75074" fg:w="9"/><text x="98.7077%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="98.4590%" y="373" width="0.0105%" height="15" fill="rgb(214,202,54)" fg:x="75075" fg:w="8"/><text x="98.7090%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (26 samples, 0.03%)</title><rect x="98.4393%" y="421" width="0.0341%" height="15" fill="rgb(254,165,40)" fg:x="75060" fg:w="26"/><text x="98.6893%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (26 samples, 0.03%)</title><rect x="98.4393%" y="405" width="0.0341%" height="15" fill="rgb(246,173,38)" fg:x="75060" fg:w="26"/><text x="98.6893%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (27 samples, 0.04%)</title><rect x="98.4393%" y="453" width="0.0354%" height="15" fill="rgb(215,3,27)" fg:x="75060" fg:w="27"/><text x="98.6893%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.04%)</title><rect x="98.4393%" y="437" width="0.0354%" height="15" fill="rgb(239,169,51)" fg:x="75060" fg:w="27"/><text x="98.6893%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (52 samples, 0.07%)</title><rect x="98.4984%" y="373" width="0.0682%" height="15" fill="rgb(212,5,25)" fg:x="75105" fg:w="52"/><text x="98.7484%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.02%)</title><rect x="98.5666%" y="373" width="0.0157%" height="15" fill="rgb(243,45,17)" fg:x="75157" fg:w="12"/><text x="98.8166%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 0.12%)</title><rect x="98.4748%" y="389" width="0.1167%" height="15" fill="rgb(242,97,9)" fg:x="75087" fg:w="89"/><text x="98.7248%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (255 samples, 0.33%)</title><rect x="98.2938%" y="517" width="0.3344%" height="15" fill="rgb(228,71,31)" fg:x="74949" fg:w="255"/><text x="98.5438%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (255 samples, 0.33%)</title><rect x="98.2938%" y="501" width="0.3344%" height="15" fill="rgb(252,184,16)" fg:x="74949" fg:w="255"/><text x="98.5438%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (145 samples, 0.19%)</title><rect x="98.4380%" y="485" width="0.1902%" height="15" fill="rgb(236,169,46)" fg:x="75059" fg:w="145"/><text x="98.6880%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (144 samples, 0.19%)</title><rect x="98.4393%" y="469" width="0.1889%" height="15" fill="rgb(207,17,47)" fg:x="75060" fg:w="144"/><text x="98.6893%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (117 samples, 0.15%)</title><rect x="98.4748%" y="453" width="0.1534%" height="15" fill="rgb(206,201,28)" fg:x="75087" fg:w="117"/><text x="98.7248%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (117 samples, 0.15%)</title><rect x="98.4748%" y="437" width="0.1534%" height="15" fill="rgb(224,184,23)" fg:x="75087" fg:w="117"/><text x="98.7248%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (117 samples, 0.15%)</title><rect x="98.4748%" y="421" width="0.1534%" height="15" fill="rgb(208,139,48)" fg:x="75087" fg:w="117"/><text x="98.7248%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (117 samples, 0.15%)</title><rect x="98.4748%" y="405" width="0.1534%" height="15" fill="rgb(208,130,10)" fg:x="75087" fg:w="117"/><text x="98.7248%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u8 (28 samples, 0.04%)</title><rect x="98.5915%" y="389" width="0.0367%" height="15" fill="rgb(211,213,45)" fg:x="75176" fg:w="28"/><text x="98.8415%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.04%)</title><rect x="98.5915%" y="373" width="0.0367%" height="15" fill="rgb(235,100,30)" fg:x="75176" fg:w="28"/><text x="98.8415%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.02%)</title><rect x="98.6125%" y="357" width="0.0157%" height="15" fill="rgb(206,144,31)" fg:x="75192" fg:w="12"/><text x="98.8625%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="98.6662%" y="469" width="0.0236%" height="15" fill="rgb(224,200,26)" fg:x="75233" fg:w="18"/><text x="98.9162%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.01%)</title><rect x="98.6780%" y="453" width="0.0118%" height="15" fill="rgb(247,104,53)" fg:x="75242" fg:w="9"/><text x="98.9280%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (119 samples, 0.16%)</title><rect x="98.7069%" y="373" width="0.1561%" height="15" fill="rgb(220,14,17)" fg:x="75264" fg:w="119"/><text x="98.9569%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (132 samples, 0.17%)</title><rect x="98.7056%" y="389" width="0.1731%" height="15" fill="rgb(230,140,40)" fg:x="75263" fg:w="132"/><text x="98.9556%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.02%)</title><rect x="98.8630%" y="373" width="0.0157%" height="15" fill="rgb(229,2,41)" fg:x="75383" fg:w="12"/><text x="99.1130%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (135 samples, 0.18%)</title><rect x="98.7030%" y="405" width="0.1770%" height="15" fill="rgb(232,89,16)" fg:x="75261" fg:w="135"/><text x="98.9530%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (136 samples, 0.18%)</title><rect x="98.7030%" y="421" width="0.1784%" height="15" fill="rgb(247,59,52)" fg:x="75261" fg:w="136"/><text x="98.9530%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (193 samples, 0.25%)</title><rect x="98.6951%" y="453" width="0.2531%" height="15" fill="rgb(226,110,21)" fg:x="75255" fg:w="193"/><text x="98.9451%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (187 samples, 0.25%)</title><rect x="98.7030%" y="437" width="0.2452%" height="15" fill="rgb(224,176,43)" fg:x="75261" fg:w="187"/><text x="98.9530%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (51 samples, 0.07%)</title><rect x="98.8813%" y="421" width="0.0669%" height="15" fill="rgb(221,73,6)" fg:x="75397" fg:w="51"/><text x="99.1313%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (51 samples, 0.07%)</title><rect x="98.8813%" y="405" width="0.0669%" height="15" fill="rgb(232,78,19)" fg:x="75397" fg:w="51"/><text x="99.1313%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (51 samples, 0.07%)</title><rect x="98.8813%" y="389" width="0.0669%" height="15" fill="rgb(233,112,48)" fg:x="75397" fg:w="51"/><text x="99.1313%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (51 samples, 0.07%)</title><rect x="98.8813%" y="373" width="0.0669%" height="15" fill="rgb(243,131,47)" fg:x="75397" fg:w="51"/><text x="99.1313%" y="383.50"></text></g><g><title>[libc-2.31.so] (46 samples, 0.06%)</title><rect x="98.8879%" y="357" width="0.0603%" height="15" fill="rgb(226,51,1)" fg:x="75402" fg:w="46"/><text x="99.1379%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (206 samples, 0.27%)</title><rect x="98.6911%" y="469" width="0.2702%" height="15" fill="rgb(247,58,7)" fg:x="75252" fg:w="206"/><text x="98.9411%" y="479.50"></text></g><g><title>hashbrown::raw::h2 (11 samples, 0.01%)</title><rect x="98.9639%" y="469" width="0.0144%" height="15" fill="rgb(209,7,32)" fg:x="75460" fg:w="11"/><text x="99.2139%" y="479.50"></text></g><g><title>core::cmp::Ord::min (10 samples, 0.01%)</title><rect x="98.9652%" y="453" width="0.0131%" height="15" fill="rgb(209,39,41)" fg:x="75461" fg:w="10"/><text x="99.2152%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (145 samples, 0.19%)</title><rect x="98.9784%" y="469" width="0.1902%" height="15" fill="rgb(226,182,46)" fg:x="75471" fg:w="145"/><text x="99.2284%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (134 samples, 0.18%)</title><rect x="98.9928%" y="453" width="0.1757%" height="15" fill="rgb(230,219,10)" fg:x="75482" fg:w="134"/><text x="99.2428%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (133 samples, 0.17%)</title><rect x="98.9941%" y="437" width="0.1744%" height="15" fill="rgb(227,175,30)" fg:x="75483" fg:w="133"/><text x="99.2441%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (25 samples, 0.03%)</title><rect x="99.1816%" y="453" width="0.0328%" height="15" fill="rgb(217,2,50)" fg:x="75626" fg:w="25"/><text x="99.4316%" y="463.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (9 samples, 0.01%)</title><rect x="99.2026%" y="437" width="0.0118%" height="15" fill="rgb(229,160,0)" fg:x="75642" fg:w="9"/><text x="99.4526%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.02%)</title><rect x="99.2144%" y="453" width="0.0157%" height="15" fill="rgb(207,78,37)" fg:x="75651" fg:w="12"/><text x="99.4644%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (78 samples, 0.10%)</title><rect x="99.1685%" y="469" width="0.1023%" height="15" fill="rgb(225,57,0)" fg:x="75616" fg:w="78"/><text x="99.4185%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (31 samples, 0.04%)</title><rect x="99.2302%" y="453" width="0.0407%" height="15" fill="rgb(232,154,2)" fg:x="75663" fg:w="31"/><text x="99.4802%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (28 samples, 0.04%)</title><rect x="99.2341%" y="437" width="0.0367%" height="15" fill="rgb(241,212,25)" fg:x="75666" fg:w="28"/><text x="99.4841%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (8 samples, 0.01%)</title><rect x="99.2603%" y="421" width="0.0105%" height="15" fill="rgb(226,69,20)" fg:x="75686" fg:w="8"/><text x="99.5103%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.02%)</title><rect x="99.2813%" y="437" width="0.0157%" height="15" fill="rgb(247,184,54)" fg:x="75702" fg:w="12"/><text x="99.5313%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (802 samples, 1.05%)</title><rect x="98.2780%" y="565" width="1.0518%" height="15" fill="rgb(210,145,0)" fg:x="74937" fg:w="802"/><text x="98.5280%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (801 samples, 1.05%)</title><rect x="98.2793%" y="549" width="1.0505%" height="15" fill="rgb(253,82,12)" fg:x="74938" fg:w="801"/><text x="98.5293%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (796 samples, 1.04%)</title><rect x="98.2859%" y="533" width="1.0439%" height="15" fill="rgb(245,42,11)" fg:x="74943" fg:w="796"/><text x="98.5359%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (535 samples, 0.70%)</title><rect x="98.6282%" y="517" width="0.7016%" height="15" fill="rgb(219,147,32)" fg:x="75204" fg:w="535"/><text x="98.8782%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (533 samples, 0.70%)</title><rect x="98.6308%" y="501" width="0.6990%" height="15" fill="rgb(246,12,7)" fg:x="75206" fg:w="533"/><text x="98.8808%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (526 samples, 0.69%)</title><rect x="98.6400%" y="485" width="0.6898%" height="15" fill="rgb(243,50,9)" fg:x="75213" fg:w="526"/><text x="98.8900%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (45 samples, 0.06%)</title><rect x="99.2708%" y="469" width="0.0590%" height="15" fill="rgb(219,149,6)" fg:x="75694" fg:w="45"/><text x="99.5208%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (45 samples, 0.06%)</title><rect x="99.2708%" y="453" width="0.0590%" height="15" fill="rgb(241,51,42)" fg:x="75694" fg:w="45"/><text x="99.5208%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (25 samples, 0.03%)</title><rect x="99.2970%" y="437" width="0.0328%" height="15" fill="rgb(226,128,27)" fg:x="75714" fg:w="25"/><text x="99.5470%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (24 samples, 0.03%)</title><rect x="99.2984%" y="421" width="0.0315%" height="15" fill="rgb(244,144,4)" fg:x="75715" fg:w="24"/><text x="99.5484%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="99.3495%" y="453" width="0.0157%" height="15" fill="rgb(221,4,13)" fg:x="75754" fg:w="12"/><text x="99.5995%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (43 samples, 0.06%)</title><rect x="99.3482%" y="501" width="0.0564%" height="15" fill="rgb(208,170,28)" fg:x="75753" fg:w="43"/><text x="99.5982%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (43 samples, 0.06%)</title><rect x="99.3482%" y="485" width="0.0564%" height="15" fill="rgb(226,131,13)" fg:x="75753" fg:w="43"/><text x="99.5982%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (42 samples, 0.06%)</title><rect x="99.3495%" y="469" width="0.0551%" height="15" fill="rgb(215,72,41)" fg:x="75754" fg:w="42"/><text x="99.5995%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.04%)</title><rect x="99.3652%" y="453" width="0.0393%" height="15" fill="rgb(243,108,20)" fg:x="75766" fg:w="30"/><text x="99.6152%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.02%)</title><rect x="99.4046%" y="501" width="0.0197%" height="15" fill="rgb(230,189,17)" fg:x="75796" fg:w="15"/><text x="99.6546%" y="511.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.01%)</title><rect x="99.4125%" y="485" width="0.0118%" height="15" fill="rgb(220,50,17)" fg:x="75802" fg:w="9"/><text x="99.6625%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (10 samples, 0.01%)</title><rect x="99.4243%" y="437" width="0.0131%" height="15" fill="rgb(248,152,48)" fg:x="75811" fg:w="10"/><text x="99.6743%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.01%)</title><rect x="99.4243%" y="421" width="0.0131%" height="15" fill="rgb(244,91,11)" fg:x="75811" fg:w="10"/><text x="99.6743%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="99.4243%" y="469" width="0.0144%" height="15" fill="rgb(220,157,5)" fg:x="75811" fg:w="11"/><text x="99.6743%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="99.4243%" y="453" width="0.0144%" height="15" fill="rgb(253,137,8)" fg:x="75811" fg:w="11"/><text x="99.6743%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.03%)</title><rect x="99.4531%" y="389" width="0.0341%" height="15" fill="rgb(217,137,51)" fg:x="75833" fg:w="26"/><text x="99.7031%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.01%)</title><rect x="99.4872%" y="389" width="0.0131%" height="15" fill="rgb(218,209,53)" fg:x="75859" fg:w="10"/><text x="99.7372%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.07%)</title><rect x="99.4387%" y="405" width="0.0682%" height="15" fill="rgb(249,137,25)" fg:x="75822" fg:w="52"/><text x="99.6887%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.02%)</title><rect x="99.5069%" y="405" width="0.0157%" height="15" fill="rgb(239,155,26)" fg:x="75874" fg:w="12"/><text x="99.7569%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="99.5082%" y="389" width="0.0144%" height="15" fill="rgb(227,85,46)" fg:x="75875" fg:w="11"/><text x="99.7582%" y="399.50"></text></g><g><title>hashbrown::map::make_insert_hash (138 samples, 0.18%)</title><rect x="99.3443%" y="533" width="0.1810%" height="15" fill="rgb(251,107,43)" fg:x="75750" fg:w="138"/><text x="99.5943%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (136 samples, 0.18%)</title><rect x="99.3469%" y="517" width="0.1784%" height="15" fill="rgb(234,170,33)" fg:x="75752" fg:w="136"/><text x="99.5969%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (77 samples, 0.10%)</title><rect x="99.4243%" y="501" width="0.1010%" height="15" fill="rgb(206,29,35)" fg:x="75811" fg:w="77"/><text x="99.6743%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (77 samples, 0.10%)</title><rect x="99.4243%" y="485" width="0.1010%" height="15" fill="rgb(227,138,25)" fg:x="75811" fg:w="77"/><text x="99.6743%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (66 samples, 0.09%)</title><rect x="99.4387%" y="469" width="0.0866%" height="15" fill="rgb(249,131,35)" fg:x="75822" fg:w="66"/><text x="99.6887%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (66 samples, 0.09%)</title><rect x="99.4387%" y="453" width="0.0866%" height="15" fill="rgb(239,6,40)" fg:x="75822" fg:w="66"/><text x="99.6887%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (66 samples, 0.09%)</title><rect x="99.4387%" y="437" width="0.0866%" height="15" fill="rgb(246,136,47)" fg:x="75822" fg:w="66"/><text x="99.6887%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (66 samples, 0.09%)</title><rect x="99.4387%" y="421" width="0.0866%" height="15" fill="rgb(253,58,26)" fg:x="75822" fg:w="66"/><text x="99.6887%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="99.5370%" y="485" width="0.0131%" height="15" fill="rgb(237,141,10)" fg:x="75897" fg:w="10"/><text x="99.7870%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="99.5659%" y="485" width="0.0105%" height="15" fill="rgb(234,156,12)" fg:x="75919" fg:w="8"/><text x="99.8159%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (9 samples, 0.01%)</title><rect x="99.5882%" y="469" width="0.0118%" height="15" fill="rgb(243,224,36)" fg:x="75936" fg:w="9"/><text x="99.8382%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (39 samples, 0.05%)</title><rect x="99.5764%" y="485" width="0.0511%" height="15" fill="rgb(205,229,51)" fg:x="75927" fg:w="39"/><text x="99.8264%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.02%)</title><rect x="99.6052%" y="469" width="0.0223%" height="15" fill="rgb(223,189,4)" fg:x="75949" fg:w="17"/><text x="99.8552%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (16 samples, 0.02%)</title><rect x="99.6066%" y="453" width="0.0210%" height="15" fill="rgb(249,167,54)" fg:x="75950" fg:w="16"/><text x="99.8566%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.01%)</title><rect x="99.6380%" y="453" width="0.0118%" height="15" fill="rgb(218,34,28)" fg:x="75974" fg:w="9"/><text x="99.8880%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (117 samples, 0.15%)</title><rect x="99.5252%" y="533" width="0.1534%" height="15" fill="rgb(232,109,42)" fg:x="75888" fg:w="117"/><text x="99.7752%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (116 samples, 0.15%)</title><rect x="99.5266%" y="517" width="0.1521%" height="15" fill="rgb(248,214,46)" fg:x="75889" fg:w="116"/><text x="99.7766%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (116 samples, 0.15%)</title><rect x="99.5266%" y="501" width="0.1521%" height="15" fill="rgb(244,216,40)" fg:x="75889" fg:w="116"/><text x="99.7766%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (39 samples, 0.05%)</title><rect x="99.6275%" y="485" width="0.0511%" height="15" fill="rgb(231,226,31)" fg:x="75966" fg:w="39"/><text x="99.8775%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (39 samples, 0.05%)</title><rect x="99.6275%" y="469" width="0.0511%" height="15" fill="rgb(238,38,43)" fg:x="75966" fg:w="39"/><text x="99.8775%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (22 samples, 0.03%)</title><rect x="99.6498%" y="453" width="0.0289%" height="15" fill="rgb(208,88,43)" fg:x="75983" fg:w="22"/><text x="99.8998%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (22 samples, 0.03%)</title><rect x="99.6498%" y="437" width="0.0289%" height="15" fill="rgb(205,136,37)" fg:x="75983" fg:w="22"/><text x="99.8998%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (35 samples, 0.05%)</title><rect x="99.6944%" y="501" width="0.0459%" height="15" fill="rgb(237,34,14)" fg:x="76017" fg:w="35"/><text x="99.9444%" y="511.50"></text></g><g><title>core::ptr::write (35 samples, 0.05%)</title><rect x="99.6944%" y="485" width="0.0459%" height="15" fill="rgb(236,193,44)" fg:x="76017" fg:w="35"/><text x="99.9444%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (38 samples, 0.05%)</title><rect x="99.6944%" y="517" width="0.0498%" height="15" fill="rgb(231,48,10)" fg:x="76017" fg:w="38"/><text x="99.9444%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (9 samples, 0.01%)</title><rect x="99.7443%" y="517" width="0.0118%" height="15" fill="rgb(213,141,34)" fg:x="76055" fg:w="9"/><text x="99.9943%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (8 samples, 0.01%)</title><rect x="99.7456%" y="501" width="0.0105%" height="15" fill="rgb(249,130,34)" fg:x="76056" fg:w="8"/><text x="99.9956%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.01%)</title><rect x="99.7836%" y="501" width="0.0105%" height="15" fill="rgb(219,42,41)" fg:x="76085" fg:w="8"/><text x="100.0336%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (16 samples, 0.02%)</title><rect x="99.7941%" y="501" width="0.0210%" height="15" fill="rgb(224,100,54)" fg:x="76093" fg:w="16"/><text x="100.0441%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (50 samples, 0.07%)</title><rect x="99.7613%" y="517" width="0.0656%" height="15" fill="rgb(229,200,27)" fg:x="76068" fg:w="50"/><text x="100.0113%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.01%)</title><rect x="99.8151%" y="501" width="0.0118%" height="15" fill="rgb(217,118,10)" fg:x="76109" fg:w="9"/><text x="100.0651%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="99.8164%" y="485" width="0.0105%" height="15" fill="rgb(206,22,3)" fg:x="76110" fg:w="8"/><text x="100.0664%" y="495.50"></text></g><g><title>day1::day16_part2::bt (75,193 samples, 98.61%)</title><rect x="1.2223%" y="581" width="98.6138%" height="15" fill="rgb(232,163,46)" fg:x="932" fg:w="75193"/><text x="1.4723%" y="591.50">day1::day16_part2::bt</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (386 samples, 0.51%)</title><rect x="99.3298%" y="565" width="0.5062%" height="15" fill="rgb(206,95,13)" fg:x="75739" fg:w="386"/><text x="99.5798%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (385 samples, 0.50%)</title><rect x="99.3311%" y="549" width="0.5049%" height="15" fill="rgb(253,154,18)" fg:x="75740" fg:w="385"/><text x="99.5811%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (120 samples, 0.16%)</title><rect x="99.6787%" y="533" width="0.1574%" height="15" fill="rgb(219,32,23)" fg:x="76005" fg:w="120"/><text x="99.9287%" y="543.50"></text></g><g><title>alloc::str::join_generic_copy (18 samples, 0.02%)</title><rect x="99.8452%" y="533" width="0.0236%" height="15" fill="rgb(230,191,45)" fg:x="76132" fg:w="18"/><text x="100.0952%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (19 samples, 0.02%)</title><rect x="99.8452%" y="565" width="0.0249%" height="15" fill="rgb(229,64,36)" fg:x="76132" fg:w="19"/><text x="100.0952%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (19 samples, 0.02%)</title><rect x="99.8452%" y="549" width="0.0249%" height="15" fill="rgb(205,129,25)" fg:x="76132" fg:w="19"/><text x="100.0952%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="99.8728%" y="533" width="0.0105%" height="15" fill="rgb(254,112,7)" fg:x="76153" fg:w="8"/><text x="100.1228%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="99.8728%" y="517" width="0.0105%" height="15" fill="rgb(226,53,48)" fg:x="76153" fg:w="8"/><text x="100.1228%" y="527.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.01%)</title><rect x="99.8728%" y="565" width="0.0131%" height="15" fill="rgb(214,153,38)" fg:x="76153" fg:w="10"/><text x="100.1228%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.01%)</title><rect x="99.8728%" y="549" width="0.0131%" height="15" fill="rgb(243,101,7)" fg:x="76153" fg:w="10"/><text x="100.1228%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.02%)</title><rect x="99.8898%" y="261" width="0.0170%" height="15" fill="rgb(240,140,22)" fg:x="76166" fg:w="13"/><text x="100.1398%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="99.8925%" y="245" width="0.0144%" height="15" fill="rgb(235,114,2)" fg:x="76168" fg:w="11"/><text x="100.1425%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="99.8925%" y="229" width="0.0144%" height="15" fill="rgb(242,59,12)" fg:x="76168" fg:w="11"/><text x="100.1425%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="99.8925%" y="213" width="0.0144%" height="15" fill="rgb(252,134,9)" fg:x="76168" fg:w="11"/><text x="100.1425%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="99.8925%" y="197" width="0.0144%" height="15" fill="rgb(236,4,44)" fg:x="76168" fg:w="11"/><text x="100.1425%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="99.8898%" y="277" width="0.0223%" height="15" fill="rgb(254,172,41)" fg:x="76166" fg:w="17"/><text x="100.1398%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.03%)</title><rect x="99.8898%" y="325" width="0.0262%" height="15" fill="rgb(244,63,20)" fg:x="76166" fg:w="20"/><text x="100.1398%" y="335.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.03%)</title><rect x="99.8898%" y="309" width="0.0262%" height="15" fill="rgb(250,73,31)" fg:x="76166" fg:w="20"/><text x="100.1398%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.03%)</title><rect x="99.8898%" y="293" width="0.0262%" height="15" fill="rgb(241,38,36)" fg:x="76166" fg:w="20"/><text x="100.1398%" y="303.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (22 samples, 0.03%)</title><rect x="99.8885%" y="373" width="0.0289%" height="15" fill="rgb(245,211,2)" fg:x="76165" fg:w="22"/><text x="100.1385%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (21 samples, 0.03%)</title><rect x="99.8898%" y="357" width="0.0275%" height="15" fill="rgb(206,120,28)" fg:x="76166" fg:w="21"/><text x="100.1398%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (21 samples, 0.03%)</title><rect x="99.8898%" y="341" width="0.0275%" height="15" fill="rgb(211,59,34)" fg:x="76166" fg:w="21"/><text x="100.1398%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (31 samples, 0.04%)</title><rect x="99.8872%" y="501" width="0.0407%" height="15" fill="rgb(233,168,5)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (31 samples, 0.04%)</title><rect x="99.8872%" y="485" width="0.0407%" height="15" fill="rgb(234,33,13)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 0.04%)</title><rect x="99.8872%" y="469" width="0.0407%" height="15" fill="rgb(231,150,26)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.04%)</title><rect x="99.8872%" y="453" width="0.0407%" height="15" fill="rgb(217,191,4)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (31 samples, 0.04%)</title><rect x="99.8872%" y="437" width="0.0407%" height="15" fill="rgb(246,198,38)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (31 samples, 0.04%)</title><rect x="99.8872%" y="421" width="0.0407%" height="15" fill="rgb(245,64,37)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="431.50"></text></g><g><title>day1::day16_part2::get_key::{{closure}} (31 samples, 0.04%)</title><rect x="99.8872%" y="405" width="0.0407%" height="15" fill="rgb(250,30,36)" fg:x="76164" fg:w="31"/><text x="100.1372%" y="415.50"></text></g><g><title>day1::day16_part2::Player::to_string (30 samples, 0.04%)</title><rect x="99.8885%" y="389" width="0.0393%" height="15" fill="rgb(217,86,53)" fg:x="76165" fg:w="30"/><text x="100.1385%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.05%)</title><rect x="99.8859%" y="565" width="0.0472%" height="15" fill="rgb(228,157,16)" fg:x="76163" fg:w="36"/><text x="100.1359%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="99.8859%" y="549" width="0.0472%" height="15" fill="rgb(217,59,31)" fg:x="76163" fg:w="36"/><text x="100.1359%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="99.8859%" y="533" width="0.0472%" height="15" fill="rgb(237,138,41)" fg:x="76163" fg:w="36"/><text x="100.1359%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (36 samples, 0.05%)</title><rect x="99.8859%" y="517" width="0.0472%" height="15" fill="rgb(227,91,49)" fg:x="76163" fg:w="36"/><text x="100.1359%" y="527.50"></text></g><g><title>day1::day16_part2::get_key (81 samples, 0.11%)</title><rect x="99.8361%" y="581" width="0.1062%" height="15" fill="rgb(247,21,44)" fg:x="76125" fg:w="81"/><text x="100.0861%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.02%)</title><rect x="99.9423%" y="581" width="0.0170%" height="15" fill="rgb(219,210,51)" fg:x="76206" fg:w="13"/><text x="100.1923%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.02%)</title><rect x="99.9423%" y="565" width="0.0170%" height="15" fill="rgb(209,140,6)" fg:x="76206" fg:w="13"/><text x="100.1923%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.02%)</title><rect x="99.9423%" y="549" width="0.0170%" height="15" fill="rgb(221,188,24)" fg:x="76206" fg:w="13"/><text x="100.1923%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.01%)</title><rect x="99.9475%" y="533" width="0.0118%" height="15" fill="rgb(232,154,20)" fg:x="76210" fg:w="9"/><text x="100.1975%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.01%)</title><rect x="99.9475%" y="517" width="0.0118%" height="15" fill="rgb(244,137,50)" fg:x="76210" fg:w="9"/><text x="100.1975%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.01%)</title><rect x="99.9475%" y="501" width="0.0118%" height="15" fill="rgb(225,185,43)" fg:x="76210" fg:w="9"/><text x="100.1975%" y="511.50"></text></g><g><title>day1::day16_part2::bt (75,510 samples, 99.03%)</title><rect x="0.9377%" y="629" width="99.0295%" height="15" fill="rgb(213,205,38)" fg:x="715" fg:w="75510"/><text x="1.1877%" y="639.50">day1::day16_part2::bt</text></g><g><title>day1::day16_part2::bt (75,510 samples, 99.03%)</title><rect x="0.9377%" y="613" width="99.0295%" height="15" fill="rgb(236,73,12)" fg:x="715" fg:w="75510"/><text x="1.1877%" y="623.50">day1::day16_part2::bt</text></g><g><title>day1::day16_part2::bt (75,506 samples, 99.02%)</title><rect x="0.9430%" y="597" width="99.0243%" height="15" fill="rgb(235,219,13)" fg:x="719" fg:w="75506"/><text x="1.1930%" y="607.50">day1::day16_part2::bt</text></g><g><title>day1::test_input (76,207 samples, 99.94%)</title><rect x="0.0249%" y="661" width="99.9436%" height="15" fill="rgb(218,59,36)" fg:x="19" fg:w="76207"/><text x="0.2749%" y="671.50">day1::test_input</text></g><g><title>day1::day16_part2::solve (76,207 samples, 99.94%)</title><rect x="0.0249%" y="645" width="99.9436%" height="15" fill="rgb(205,110,39)" fg:x="19" fg:w="76207"/><text x="0.2749%" y="655.50">day1::day16_part2::solve</text></g><g><title>_start (76,217 samples, 99.96%)</title><rect x="0.0249%" y="933" width="99.9567%" height="15" fill="rgb(218,206,42)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="943.50">_start</text></g><g><title>__libc_start_main (76,217 samples, 99.96%)</title><rect x="0.0249%" y="917" width="99.9567%" height="15" fill="rgb(248,125,24)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="927.50">__libc_start_main</text></g><g><title>main (76,217 samples, 99.96%)</title><rect x="0.0249%" y="901" width="99.9567%" height="15" fill="rgb(242,28,27)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="911.50">main</text></g><g><title>std::rt::lang_start (76,217 samples, 99.96%)</title><rect x="0.0249%" y="885" width="99.9567%" height="15" fill="rgb(216,228,15)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="895.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (76,217 samples, 99.96%)</title><rect x="0.0249%" y="869" width="99.9567%" height="15" fill="rgb(235,116,46)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (76,217 samples, 99.96%)</title><rect x="0.0249%" y="853" width="99.9567%" height="15" fill="rgb(224,18,32)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (76,217 samples, 99.96%)</title><rect x="0.0249%" y="837" width="99.9567%" height="15" fill="rgb(252,5,12)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (76,217 samples, 99.96%)</title><rect x="0.0249%" y="821" width="99.9567%" height="15" fill="rgb(251,36,5)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (76,217 samples, 99.96%)</title><rect x="0.0249%" y="805" width="99.9567%" height="15" fill="rgb(217,53,14)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (76,217 samples, 99.96%)</title><rect x="0.0249%" y="789" width="99.9567%" height="15" fill="rgb(215,86,45)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (76,217 samples, 99.96%)</title><rect x="0.0249%" y="773" width="99.9567%" height="15" fill="rgb(242,169,11)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (76,217 samples, 99.96%)</title><rect x="0.0249%" y="757" width="99.9567%" height="15" fill="rgb(211,213,45)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (76,217 samples, 99.96%)</title><rect x="0.0249%" y="741" width="99.9567%" height="15" fill="rgb(205,88,11)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (76,217 samples, 99.96%)</title><rect x="0.0249%" y="725" width="99.9567%" height="15" fill="rgb(252,69,26)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (76,217 samples, 99.96%)</title><rect x="0.0249%" y="709" width="99.9567%" height="15" fill="rgb(246,123,37)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (76,217 samples, 99.96%)</title><rect x="0.0249%" y="693" width="99.9567%" height="15" fill="rgb(212,205,5)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="703.50">core::ops::function::FnOnce::call_once</text></g><g><title>day1::main (76,217 samples, 99.96%)</title><rect x="0.0249%" y="677" width="99.9567%" height="15" fill="rgb(253,148,0)" fg:x="19" fg:w="76217"/><text x="0.2749%" y="687.50">day1::main</text></g><g><title>day1::test_sample (10 samples, 0.01%)</title><rect x="99.9685%" y="661" width="0.0131%" height="15" fill="rgb(239,22,4)" fg:x="76226" fg:w="10"/><text x="100.2185%" y="671.50"></text></g><g><title>day1::day16_part2::solve (10 samples, 0.01%)</title><rect x="99.9685%" y="645" width="0.0131%" height="15" fill="rgb(226,26,53)" fg:x="76226" fg:w="10"/><text x="100.2185%" y="655.50"></text></g><g><title>day1::day16_part2::bt (10 samples, 0.01%)</title><rect x="99.9685%" y="629" width="0.0131%" height="15" fill="rgb(225,229,45)" fg:x="76226" fg:w="10"/><text x="100.2185%" y="639.50"></text></g><g><title>day1::day16_part2::bt (10 samples, 0.01%)</title><rect x="99.9685%" y="613" width="0.0131%" height="15" fill="rgb(220,60,37)" fg:x="76226" fg:w="10"/><text x="100.2185%" y="623.50"></text></g><g><title>day1::day16_part2::bt (9 samples, 0.01%)</title><rect x="99.9698%" y="597" width="0.0118%" height="15" fill="rgb(217,180,35)" fg:x="76227" fg:w="9"/><text x="100.2198%" y="607.50"></text></g><g><title>day1 (76,238 samples, 99.98%)</title><rect x="0.0000%" y="949" width="99.9843%" height="15" fill="rgb(229,7,53)" fg:x="0" fg:w="76238"/><text x="0.2500%" y="959.50">day1</text></g><g><title>all (76,250 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(254,137,3)" fg:x="0" fg:w="76250"/><text x="0.2500%" y="975.50"></text></g><g><title>perf-exec (12 samples, 0.02%)</title><rect x="99.9843%" y="949" width="0.0157%" height="15" fill="rgb(215,140,41)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="959.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="933" width="0.0157%" height="15" fill="rgb(250,80,15)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="943.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="917" width="0.0157%" height="15" fill="rgb(252,191,6)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="927.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="901" width="0.0157%" height="15" fill="rgb(246,217,18)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="911.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="885" width="0.0157%" height="15" fill="rgb(223,93,7)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="895.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="869" width="0.0157%" height="15" fill="rgb(225,55,52)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="879.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="853" width="0.0157%" height="15" fill="rgb(240,31,24)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="863.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="837" width="0.0157%" height="15" fill="rgb(205,56,52)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="847.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="821" width="0.0157%" height="15" fill="rgb(246,146,12)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="831.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.9843%" y="805" width="0.0157%" height="15" fill="rgb(239,84,36)" fg:x="76238" fg:w="12"/><text x="100.2343%" y="815.50"></text></g></svg></svg>